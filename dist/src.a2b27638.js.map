{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 001accb81df17d8ee229","webpack:///javascripts/dom.js","src/disposable.js","src/animated.js","src/instrument.js","src/geometry/vector2d.js","src/geometry/angle.js","src/graphics/primitives.js","src/needles.js","src/utils/time.js","node_modules/eve/eve.js","node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","src/tachometer_analog.js","src/utils/math.js","src/airspeed_analog.js","src/graphics/colors.js","src/utils/mouse.js","src/rotatable-button.js","src/attitude_indicator_analog.js","src/utils/conversions.js","src/altimeter_analog.js","src/turn_coordinator_analog.js","src/heading_indicator_analog.js","src/vertical_speed_analog.js","src/airplane.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["Disposable","_classCallCheck","disposeFunctions","listeners","_createClass","key","value","addDisposable","func","console","assert","indexOf","push","removeDisposable","filter","f","dispose","disposed","forEach","length","addListener","removeListener","removeAllListeners","callListeners","_this","l","exports","default","_disposable","_interopRequireDefault","require","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","arguments","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","Animated","_Disposable","_super","lerps","cancelAllLerps","addLerp","callback","cancelLerp","values","_animated","Instrument","_Animated","config","assign","width","height","airplane","listener","demoStart","demoStop","Vector2D","x","y","clone","toString","concat","sub","other","add","_vector2d","C2D","angle","D2C","D2R","d","Math","PI","R2D","r","POC","center","radius","cos","sin","angleFrom","position","a","atan2","angularDelta","firstAngle","secondAngle","difference","_angle","_DOMArray","circle","snap","stroke","strokeWidth","fill","attr","rectangle","w","h","rx","ry","rect","centeredText","string","fontSize","fontFamily","fontWeight","text","leftText","line","p1","p2","triangle","p3","path","polygon","tick","outerRadius","innerRadius","thickness","color","arc","startAngle","endAngle","clockWise","largeArc","start","end","cw","delta","arcData","a1","a2","large","r0","r1","airplaneSilhouette","centerX","centerY","s","Snap","D","el","airplaneNoseView","PR","EMT","EMS","WH","wing","vs","hs","g","steppedNeedle","radiusShort","radiusMid","arrowHead","needle","gradient","setCenterAndAngle","cx","cy","transform","altimeter10KNeedle","triangleWidth","baseWidth","narrowWidth","CY","arrowNeedle","daggerNeedle","narrow","interval","milliseconds","timer","setInterval","requestAnimationFrame","clearInterval","_instrument","_primitives","_needles","_time","_snapsvgCjs","I","W","H","R","min","CX","CENTER","CASE1","CASE2","CASE3","TICK1","TICK2","TICK3","ARC_WIDTH","ARC_RADIUS","LABEL_RADIUS","POINTER_SMALL_RADIUS","POINTER_WIDTH","POINTER_ARROW","POINTER_RADIUS","MIN_RPM","MAX_RPM","MIN_GREEN","MAX_GREEN","REDLINE","START_ANGLE","ANGLE_SWEEP","HOUR_W","HOUR_H","HOUR_P","HOUR_Y","TachometerAnalog","_Instrument","options","parentElement","template","zip","svg","renderImmutable","renderText","renderHours","createNeedle","setNeedle","rpm","onAirplaneChanged","appendTo","_this2","setRPM","random","renderCase","renderDial","renderShadow","n","left","floor","rpmToAngle","v","max","normalized","round","decimals","nonLinearScale","inputValue","midValue","maxValue","returnValue","M","C","log","pow","B","exp","A","isNaN","lerp","from","to","time","ease","isFinite","startTime","Date","now","endTime","requestId","cancelAnimationFrame","AnimatedValue","lowLimit","MAX_VALUE","hiLimit","currentValue","setValue","setValueImmediate","_math","FLAP_ARC_WIDTH","WHITE_ARC_RADIUS","MAX_SPEED_ANGLE","MID_SPEED","POINTER_MID","AirspeedAnalog","minimumDisplayableSpeed","nearest","VS0","airspeedToAngle","abs","airspeed","remove","demoInterval","setAirspeed","renderSpeedArcs","renderTicks","renderAirspeeds","VFE","VS1","VNO","VNE","MAX_DISPLAYED_SPEED","nonLinear","colors","navy","blue","aqua","teal","olive","green","lime","yellow","orange","red","maroon","fuchsia","purple","black","charcoal","gray","silver","white","sky","earth","compassRose","events","sEvents","Mouse","document","documentElement","handleEvent","name","addEventListener","removeEventListener","hash","captureNode","ears","type","ear","eventToNode","node","includeDescendants","contains","event","box","getBoundingClientRect","clientX","clientY","ancestor","descendant","relationship","compareDocumentPosition","register","unregister","_this3","removed","record","index","splice","releaseCapture","findNode","eventName","list","find","setCapture","_colors","_mouse","JITTER_THRESHOLD","POP_SCALE","Rotatable","textColor","rotation","rotationCallback","clickCallback","gear","randomize","popout","popState","randomOffset","setPopScale","scale","displayScale","updateTransform","updateButtonColor","group","class","outer","mouse","onMouseDown","onMouseMove","onMouseUp","centerOn","local","lastAngle","capture","togglePopout","point","_rotatableButton","COLOR_SKY","COLOR_EARTH","OUTER_THICKNESS","OUTER_RADIUS","INNER_RADIUS","TICK_M","SMALL_TICK_WIDTH","PITCH_TO_PIXELS","POINTER_BASE_THICKNESS","POINTER_BASE_ARC","PA_T","PA_BH","PA_BI","PA_ARM","PA_TRI_W","PA_TRI_H","PA_TRI_R","V_ADJUST_CENTER","V_ADJUST_LIMIT","CAGE_CENTER","AttitudeIndicatorAnalog","verticalAdjustment","caged","cageMultiplier","pitch","roll","setRollAndPitch","setRoll","setPitch","renderInnerBezel","renderOuterBezel","renderPointers","renderButtons","verticalAdjustButton","onVerticalAdjustment","cageButton","onCageToggle","setArmGroupVerticalAdjustment","armGroup","bottom","top","right","WY","pixels","_this4","innerBezel","innerBezelFace","pitchCircle","pitchGradient","displayedPitch","pixelOffset","_this5","outerBezel","outerBezelFace","displayRoll","displayPitch","MAX_ALPHA","START","str","millibarsToFeet","millibars","feet","inchesHgToFeet","inchesNg","inchesHgToMillibars","millibarsToInchesHg","inchesHg","signedDegreesToPositive360","vIn","vOut","STANDARD_BAROMETER","_conversions","POINTER_1K_R","POINTER_1K_W","POINTER_10K_R","POINTER_10K_W","KOLLSMAN_ADJUST_23","KOLLSMAN_ANGLE","KOLLSMAN_SWEEP","MIN_BARO","MAX_BARO","K_TICK1","K_TICK2","K_TICK3","KOLLSMAN_INNER","KOLLSMAN_LOWER_SPEED","KOLLSMAN_UPPER_SPEED","BARBER_OUTER","BARBER_INNER","BARBER_ANGLE","BARBER_SWEEP","BARBER_STRIPE_WIDTH","BARO_CENTER","BARO_R","AltimeterAnalog","barberPoleAngle","barberPoleVisible","createNeedles","createBaroButton","setNeedles","altitude","setBarometricPressure","barometer","SERVICE_CEILING","qnh","setAltitude","setBarometer","renderKollsman","renderBarberPole","baroButton","onBaroChanged","baro","IMIN_BARO","IMAX_BARO","kSnap","kGroup","tp","strDisplay","substr","KW","AR","kMask","altitudeInfo","hundreds","mask","inchesOfMercury","clamped","range","barberRadius","barberWidth","barberSnap","patternGroup","sw","sh","barberPoleGroup","barberPole","toPattern","setBarberPole","visible","v0_9","textPosition","thousands10KNeedle","thousandsNeedle","hundredsNeedle","info","thousands","thousands10K","baroDelta","staticPressure","OUTER_BEZEL","INC_THICKNESS","INC_RADIUS","INC_CENTER","INC_ANGLE","INC_TICK_ANGLE","OFFSET_2_MINUTES","ROLL_RATE","MAX_ROLL_RATE","MAX_YAW","TurnCoordinatorAnalog","setRollRate","setYaw","renderInclinometer","renderTicksAndText","renderAirplane","rollRate","yaw","BEZEL_R","airplaneGroup","inner","middle","renderBall","clampedRollRate","ball","clampedYaw","AW","AH","TEXT_RADIUS","TICK","LONG_TICK","SHORT_TICK","SET_CENTER","SET_R","HDG_CENTER","HDG_R","HEADING_BUG_OUTER","HEADING_BUG_INNER","HEADING_BUG_MID","HeadingIndicatorAnalog","magneticOffset","headingBugHeading","setHeading","heading","setHeadingBug","renderHeadings","renderHeadingBug","renderPointer","createButtons","setButton","onSetChanged","hdgButton","onHdgChanged","headingBugGroup","faceSnap","headingBug1","headingBug2","face","longTick","outerTick","innerTick","textCenter","t","MIN_MAX_SPEED","HUNDRED_LIMIT","ZERO","SWEEP","UP_DOWN_RADIUS","UP_DOWN_ANGLE","RATE_TEXT","VerticalSpeedAnalog","altitudeRate","setAltitudeRate","verticalSpeedToAngle","verticalSpeed","Airplane","VR","VLOF","VA","airspeedRate","headingRate","pitchRate","yawRate","idle","redLine","greenMin","kias","speed","rate","_this6","immediate","magneticHeading","_this7","degrees","_this8","degreesPerSecond","_this9","_this10","_this11","_tachometer_analog","_airspeed_analog","_attitude_indicator_analog","_altimeter_analog","_turn_coordinator_analog","_heading_indicator_analog","_vertical_speed_analog","_airplane","body","airspeedSlider","getElementById","airspeedInstrumentContainer","airspeedInstrument","newAirspeed","parseFloat","sliderValue","textContent","rollSlider","pitchSlider","attitudeIndicatorContainer","attitudeIndicator","newRoll","newPitch","altimeterInstrumentContainer","altimeterInstrument","altitudeSlider","altitudeValue","newAltitude","headingSlider","headingInstrumentContainer","headingInstrument","newHeading","headingValue","initialHeading","verticalSpeedSlider","verticalSpeedInstrumentContainer","verticalSpeedInstrument","newVerticalSpeed","initialVerticalSpeed","rollRateSlider","yawSlider","rollRateValue","yawValue","turnCoordinatorInstrumentContainer","turnCoordinatorInstrument","newRollRate","newYaw","initialRollRate","initialYaw","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","bundle","updateLink","link","newLink","cloneNode","onload","href","split","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","module","OVERLAY_ID","OldModule","Module","moduleName","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","JSON","parse","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","overlay","createErrorOverlay","appendChild","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","dep","Array","isArray","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 001accb81df17d8ee229\n **/","/**\n * simplest regex for identifying a tag string versus a selector string\n * @type {RegExp}\n */\nconst tagRegex = new RegExp('\\s*<([^>]+)>');\n\n/**\n * getters and setters are created for these properties. The class does not attempt to distinguish between\n * Node, Element, HTMLElement etc so these properties may or may not exist on any particular member of our list.\n * Read only properties are prefixed with 'r+'.\n * For DOMArray's with exactly one item, the getter returns the value returned by the native property.\n * For DOMArray's containing more than one item an array of results is returned.\n * Empty DOMArray's return null\n * @type {string[]}\n */\nconst properties = [\n  // Node, properties\n  'r+childNodes',\n  'r+firstChild',\n  'r+lastChild',\n  'r+nextSibling',\n  'r+previousSibling',\n  'r+nodeName',\n  'r+nodeType',\n  'nodeValue',\n  'r+ownerDocument',\n  'r+parentElement',\n  'r+parentNode',\n  'textContent',\n  'r+tagName',\n  // Element properties\n  'r+attributes',\n  'r+childElementCount',\n  'r+children',\n  'r+firstElementChild',\n  'r+lastElementChild',\n  'r+classList',\n  'className',\n  'r+clientTop',\n  'r+clientLeft',\n  'r+clientWidth',\n  'r+clientHeight',\n  'id',\n  'innerHTML',\n  'outerHTML',\n  'innerText',\n  'outerText',\n  'r+localName',\n  'r+scrollWidth',\n  'r+scrollHeight',\n  'scrollTop',\n  'scrollLeft',\n  'name',\n  'title',\n  'value',\n  'checked',\n  'style',\n  'disabled',\n];\n\n/**\n * methods for native Node/Element/HTMLElement objects that we create pass through functions for.\n * Rules are the same as for getter properties i.e. an array is returned for lists with items > 1\n * @type {Array}\n */\nconst methods = [\n  'appendChild',\n  'removeChild',\n  'replaceChild',\n  'click',\n  'cloneNode',\n  'compareDocumentPosition',\n  'contains',\n  'hasChildNodes',\n  'insertBefore',\n  'getBoundingClientRect',\n  'getAttribute',\n  'getAttributeNS',\n  'setAttribute',\n  'setAttributeNS',\n  'removeAttribute',\n  'removeAttributeNS',\n  'addEventListener',\n  'removeEventListener',\n  'normalize',\n  'focus',\n  'blur',\n  'querySelector',\n  'querySelectorAll',\n];\n\n/**\n * the actual elements class which inherits from native Array\n */\n\nclass DOMArray extends Array {\n  constructor(...args) {\n    super();\n    // test first argument to see if its a string\n    const isString = typeof(args[0]) === 'string';\n    // if its a string see if it a tag definition\n    const isTag = isString && tagRegex.exec(args[0].trim());\n\n    // first argument is a string but not a tag definition so we assume CSS selector\n    if ((args.length === 1 || args.length == 2) && isString && !isTag) {\n      this.createFromCSSSelector(args[0], args[1]);\n    } else {\n      // second option is that args if just a string e.g. '<div class=\"xyz\"><p>Title</p></div>'\n      // (white space is trimmed to determine if this might be a tag)\n      if (args.length === 1 && isTag) {\n        this.createFromTAGDefinition(args[0]);\n      } else {\n        // must be raw elements or other DOMArray instances\n        this.createFromElements(...args);\n      }\n    }\n    // inject native property names and function names to the list\n    this.injectMethodsAndProperties();\n  }\n\n  /**\n   * bind the read/write properties common to most HTMLElements and Node instances to this object\n   */\n  injectMethodsAndProperties() {\n    // setup read/write properties\n    properties.forEach(p => {\n      // property can be a name or 'r+' name for read only properties\n      const tokens = p.split('+');\n      const readOnly = tokens.length === 2 && tokens[0] === 'r';\n      const name = readOnly ? tokens[1] : tokens[0];\n      // create getter and optional setter\n      const newProperty = Object.assign({\n        get: this.genericGetter.bind(this, name),\n      }, readOnly ? {} : {\n        set: this.genericSetter.bind(this, name),\n      });\n      Object.defineProperty(this, name, newProperty);\n    });\n\n    // setup methods\n    methods.forEach(name => {\n      this[name] = this.genericMethod.bind(this, name);\n    });\n  }\n\n  /**\n   * create our elements list from a CSS selector and option root element ( either\n   * a native HTMLElement/Node or another DOMArray )\n   * @param selector\n   * @param rootElement\n   */\n  createFromCSSSelector(selector, rootElement) {\n    // use the given root element or the document\n    const root = rootElement ? this.getNode(rootElement) : document;\n    // return a proxy using the results of the selector as the initial array\n    this.push(...root.querySelectorAll(selector));\n  }\n\n  /**\n   * create the list from a template string e.g. '<div>A DIV<div><span>A Span</span>'\n   * @param template\n   */\n  createFromTAGDefinition(template) {\n    // use a temporary DIV and insertAdjacentHTML to construct the DOM\n    const d = document.createElement('DIV');\n    d.insertAdjacentHTML('afterbegin', template);\n    // normalize the context to remove extraneous white space / text content nodes\n    d.normalize();\n    // add children directly into our list ( we avoid childNodes because that would pick\n    // up empty text nodes which is a problem when using multiline template strings\n    this.push(...this.getChildren(d));\n    // remove all the children of the temporary div, so that the newly created top level nodes will be unparented\n    while (d.firstChild) d.removeChild(d.firstChild);\n  }\n\n  /**\n   * create from a mixed list of elements or other DOMArray instances.\n   * @param args\n   */\n  createFromElements(...args) {\n    // only remaining option is that each argument is a DOM node or possible another elements list\n    args.forEach(arg => {\n      if (arg instanceof DOMArray) {\n        this.push(...arg);\n      } else {\n        this.push(arg);\n      }\n    });\n  }\n\n  /**\n   * all generic methods redirect here\n   * @param name\n   * @param args\n   */\n  genericMethod(name, ...args) {\n    if (this.length === 0) {\n      return undefined;\n    }\n    if (this.length === 1) {\n      return this.el[name].call(this.el, ...args);\n    }\n    return this.map(node => node[name].call(node, ...args));\n  }\n\n  /**\n   * generic getter\n   * @param name - the property to return.\n   */\n  genericGetter(name) {\n    if (this.length === 0) {\n      return undefined;\n    }\n    if (this.length === 1) {\n      return this.el[name];\n    }\n    return this.map(node => node[name]);\n  }\n\n  /**\n   * generic setter\n   * @param name\n   * @param value\n   */\n  genericSetter(name, value) {\n    this.forEach(n => n[name] = value);\n  }\n\n  /**\n   * apply the key/value pairs in hash to all our elements\n   */\n  setStyles(hash) {\n    this.forEach(element => {\n      if (element.nodeType === Node.ELEMENT_NODE) {\n        Object.keys(hash).forEach(key => {\n          element.style[key] = hash[key];\n        });\n      }\n    });\n    return this;\n  }\n\n  /**\n   * if the obj is a DOMArray then return the first member otherwise assume\n   * the object is a node and return it.\n   */\n  getNode(obj) {\n    if (obj instanceof DOMArray) return obj[0];\n    return obj;\n  }\n\n\n  /**\n   * return the native el of the first element in the list\n   */\n  get el() {\n    return this[0];\n  }\n\n  /**\n   * remove all elements from the elements in our list\n   */\n  empty() {\n    this.forEach(element => {\n      while (element.firstChild) {\n        element.removeChild(element.firstChild);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * appendTo parents all the top level elements in the list to\n   * the given element. Which can be a native element or a DOMArray ( in which case\n   * the elements are append to the first element in the list )\n   */\n  appendTo(parent) {\n    this.forEach(node => {\n      this.getNode(parent).appendChild(node);\n    });\n    return this;\n  }\n\n  /**\n   * remove all our nodes from their parents\n   */\n  remove() {\n    this.forEach(node => {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * iterate every node and all their children looking for data-ref=\"name\" attributes.\n   * Assign targetObject[name] to the matching DOM element.\n   * At the same time look for data-event-* attributes and add event listeners.\n   * e.g. data-event-input=\"onInput\" will call\n   * element.addEventListener('input', targetObject[\"onInput\"].bind(targetObject))\n   * NOTE: The event handlers are just named methods so .bind is called on the method\n   * to ensure 'this' is correct.\n   */\n  zip(targetObject) {\n    // zipping/unzipping should occur serially and once\n    if (this.zipped) {\n      throw new Error('DOMArray has already been zipped');\n    }\n    this.zipped = true;\n\n    // we could use a CSS selector to find the 'r' attributes but for\n    // event attribute (e-???) there is no available selector so\n    // we walk the tree of elements using a stack.\n    this.traverse(element => {\n      // adopt references\n      const name = element.getAttribute('r');\n      if (name) {\n        if (targetObject[name]) {\n          throw new Error('Element binding would overwrite an existing property.');\n        }\n        targetObject[name] = new DOMArray(element);\n      }\n      // add event handlers...we expect something like e-click=\"onClick\"\n      [...element.attributes,].forEach(attr => {\n        const tokens = attr.localName.split('-');\n        if (tokens.length === 2 && tokens[0] === 'e' && tokens[1]) {\n          // create a record of each handler added so we can remove when unzip is called\n          const record = {\n            handler: targetObject[attr.value].bind(targetObject),\n            event  : tokens[1],\n            capture: false,\n            element,\n          };\n          this.zipHandlers = this.zipHandlers || [];\n          this.zipHandlers.push(record);\n\n          element.addEventListener(record.event, record.handler, record.capture);\n        }\n      });\n    });\n    return this;\n  }\n\n  /**\n   * reverse the actions of zip. Remove references and remove event listeners\n   */\n  unzip(targetObject) {\n    if (!this.zipped) {\n      throw new Error('DOMArray instance is not zipped');\n    }\n    this.traverse(element => {\n      // remove references\n      const name = element.getAttribute('r');\n      if (name) {\n        delete targetObject[name];\n      }\n      // remove event handlers\n      if (this.zipHandlers) {\n        this.zipHandlers.forEach(record => {\n          record.element.removeEventListener(record.event, record.handler, record.capture);\n        });\n        this.zipHandlers = null;\n      }\n\n    });\n    this.zipped = false;\n    return this;\n  }\n\n  /**\n   * utility function. Used in zip, unzip for example. Traverses all nodes and their\n   * children in the list invoking the callback for each one\n   */\n  traverse(callback) {\n    this.forEach(node => {\n      let stack = [node,];\n      while (stack.length) {\n        const element = stack.pop();\n        callback.call(this, element);\n        stack = stack.concat(...this.getChildren(element));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * get only the element children of a node, allowing for the possibility the .children doesn't exist ( e.g. SVG tag )\n   * and filter the child nodes.\n   * @param n\n   * @returns Array\n   */\n  getChildren(element) {\n    if (element.children) {\n      return Array.from(element.children);\n    } else {\n      // filter childNodes to only elements\n      if (element.childNodes) {\n        return Array.from(element.childNodes).filter(n => n.nodeType === document.ELEMENT_NODE);\n      }\n    }\n    return [];\n  }\n\n  /**\n   * add white space separated classes to our elements classList\n   */\n  addClasses(classes) {\n    classes.split(' ')\n    .filter(className => className.trim().length)\n    .forEach(className => {\n      this.forEach(element => {\n        element.classList.add(className);\n      });\n    });\n    return this;\n  }\n\n  /**\n   * remove white space separated class names from the classList of each node\n   * @param classes\n   * @returns {DOMArray}\n   */\n  removeClasses(classes) {\n    classes.split(' ')\n    .filter(className => className.trim().length)\n    .forEach(className => {\n      this.forEach(element => {\n        element.classList.remove(className);\n      });\n    });\n    return this;\n  }\n\n  /**\n   * a common usage and worthy of a method. Add the given classes\n   * to our items if the condition is truthy, otherwise remove them\n   * @param classes\n   * @param condition\n   */\n  classesConditional(classes, condition) {\n    if (condition) {\n      this.addClasses(classes);\n    } else {\n      this.removeClasses(classes);\n    }\n    return this;\n  }\n\n  /**\n   * return a new DOMArray contain a deep cloned copy\n   * each node\n   */\n  clone() {\n    const clones = this.map(n => n.cloneNode(true));\n    return new DOMArray(...clones);\n  }\n\n  /**\n   * called addEventListener for each element in the list,\n   * @param event\n   * @param handler\n   */\n  on(event, handler, capture = false) {\n    // listeners group by event name is an object ( since event is a string ) but the\n    // handlers for each event are stored in a map which can take a function as a key.\n    this.listeners = this.listeners || {};\n    this.listeners[event] = this.listeners[event] || [];\n    this.listeners[event].push({handler, capture,});\n    this.forEach(n => n.addEventListener(event, handler, capture));\n    return this;\n  }\n\n  /**\n   * remove the handlers from the list. Three ways to call.\n   * ()                   : remove all registered listeners\n   * (eventName)          : remove all listeners for that event.\n   * (eventName, handler) : remove the specific handler for a specific event.\n   */\n  off(event, handler, capture = false) {\n    // ignore if we don't have any listeners\n    if (!this.listeners) {\n      return this;\n    }\n    // if no event or handler then remove all registered events\n    if (!event && !handler) {\n      // iterate all events\n      Object.keys(this.listeners).forEach(eventName => {\n        this.listeners[eventName].forEach(record => {\n          this.forEach(n => n.removeEventListener(eventName, record.handler, record.capture));\n        });\n      });\n      // reset all listeners\n      delete this.listeners;\n    } else {\n      // if only event name specified remove all listeners for that event\n      if (event && !handler) {\n        if (this.listeners[event]) {\n          this.listeners[event].forEach(record => {\n            this.forEach(n => n.removeEventListener(event, record.handler, record.capture));\n          });\n        }\n        // delete listeners for this specific event\n        delete this.listeners[event];\n      } else {\n        // remove the specific listener if it is present, by finding the record with the handler\n        // ( the capture flag must match as well )\n        if (this.listeners[event]) {\n          const index = this.listeners[event].findIndex(record => {\n            return record.handler === handler && record.capture === capture;\n          });\n          if (index >= 0) {\n            const record = this.listeners[event][index];\n            this.forEach(n => n.removeEventListener(event, record.handler, record.capture));\n            this.listeners[event].splice(index, 1);\n          }\n        }\n      }\n    }\n    return this;\n  }\n}\n\n/**\n * We export a factory function for DOMArray so there is no need to the new operator\n */\nexport default function D() {\n  return new DOMArray(...arguments);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./javascripts/dom.js\n **/","/**\n * base class for a lot of types in the app. Provides for callbacks to be invoked when\n * its dispose() method is called. Also provides event emitter capabilities\n */\n\nexport default class Disposable {\n  /**\n   * the purpose of this class is simply to provide a way to add\n   * various functions to be called when the dispose method is\n   * called. This allows classes to create methods ( usually lambdas )\n   * juxtaposed to where an object that needs disposing is declared.\n   */\n  constructor() {\n    this.disposeFunctions = [];\n    this.listeners = [];\n  }\n\n  /**\n   * add a function to call when we are disposed\n   * NOTE: if you want to later remove a dispose function do NOT use a lambda.\n   * @param func\n   */\n  addDisposable(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.disposeFunctions.indexOf(func) < 0,\n      \"listener already registered\"\n    );\n    this.disposeFunctions.push(func);\n  }\n\n  /**\n   * remove a function that was previously added.\n   * @param func\n   */\n  removeDisposable(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.disposeFunctions.indexOf(func) >= 0,\n      \"listener is not registered\"\n    );\n    this.disposeFunctions = this.disposeFunctions.filter(f => f !== func);\n  }\n\n  /**\n   * call all our dispose methods\n   */\n  dispose() {\n    console.assert(!this.disposed, \"already disposed\");\n    this.disposed = true;\n    this.disposeFunctions.forEach(f => f());\n    this.disposeFunctions.length = 0;\n  }\n\n  /**\n   * add a change listener any changes to the airplane configuration\n   * @param func\n   */\n  addListener(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.listeners.indexOf(func) < 0,\n      \"listener already registered\"\n    );\n    this.listeners.push(func);\n  }\n\n  /**\n   * remove an existing change listener\n   * @param func\n   */\n  removeListener(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.listeners.indexOf(func) >= 0,\n      \"listener is not registered\"\n    );\n    this.listeners = this.listeners.filter(f => f !== func);\n  }\n\n  /**\n   * remove all listeners\n   */\n  removeAllListeners() {\n    this.listeners.length = 0;\n  }\n\n  /**\n   * send a change notification to all listeners\n   */\n  callListeners() {\n    this.listeners.forEach(l => l(this));\n  }\n}\n","import Disposable from \"./disposable\";\n/**\n * base class for things that use lerps and intervals to animate their internal state\n */\nexport default class Animated extends Disposable {\n  /**\n   * initialize lerp hash\n   */\n  constructor() {\n    super();\n    this.lerps = {};\n    this.addDisposable(() => this.cancelAllLerps());\n  }\n\n  /**\n   * add a lerp/interval that can be cancelled with cancelLerp\n   * @param key\n   * @param callback\n   */\n  addLerp(key, callback) {\n    this.cancelLerp(key);\n    this.lerps[key] = callback;\n  }\n\n  /**\n   * cancel any existing lerp /interval that was registered with addLerp\n   */\n  cancelLerp(key) {\n    if (this.lerps[key]) {\n      this.lerps[key]();\n      delete this.lerps[key];\n    }\n  }\n\n  /**\n   * cancel all lerps\n   */\n  cancelAllLerps() {\n    Object.values(this.lerps).forEach(f => f());\n    this.lerps = {};\n  }\n}\n","import Animated from \"./animated\";\n\n/**\n * base class for all analog / digital instruments\n */\nexport default class Instrument extends Animated {\n  /**\n   * requires at the very least width, height and an airplane\n   * @param config\n   */\n  constructor(config) {\n    super();\n    Object.assign(\n      this,\n      {\n        width: 0,\n        height: 0,\n        airplane: null,\n        listener: []\n      },\n      config\n    );\n    console.assert(\n      this.width && this.height && this.airplane,\n      \"missing or invalid configuration options\"\n    );\n  }\n\n  demoStart() {\n    console.assert(false, \"Must override in descendant class\");\n  }\n\n  demoStop() {\n    console.assert(false, \"Must override in descendant class\");\n  }\n}\n","export default class Vector2D {\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n\n  toString() {\n    return `x:${this.x} y:${this.y}`;\n  }\n\n  sub(other) {\n    return new Vector2D(this.x - other.x, this.y - other.y);\n  }\n\n  add(other) {\n    return new Vector2D(this.x + other.x, this.y + other.y);\n  }\n}\n","import Vector2D from \"../geometry/vector2d\";\n/**\n * An angle in clock format ( 0 degrees is straight up ) to a regular angle\n * @param angle\n * @returns {number}\n */\nexport const C2D = angle => {\n  return (270 + angle) % 360;\n};\n\n/**\n * angle to clock angles ( 0 degrees returned as -90 )\n * @param angle\n * @returns {number}\n */\nexport const D2C = angle => {\n  return (angle - 90) % 360;\n};\n\n/**\n * degrees to radian\n * @param d\n * @returns {number}\n */\nexport const D2R = d => {\n  return d * (Math.PI / 180);\n};\n\n/**\n * radians to degrees\n * @param r\n * @returns {number}\n */\nexport const R2D = r => {\n  return r * (180 / Math.PI);\n};\n\n/**\n * point on the circumference of a circle\n * @param {Vector2D} center\n * @param {number} radius\n * @param {number } angle - degrees\n * @returns {Vector2D}\n */\nexport const POC = (center, radius, angle) => {\n  return new Vector2D(\n    center.x + radius * Math.cos(D2R(angle)),\n    center.y + radius * Math.sin(D2R(angle))\n  );\n};\n\n/**\n * return the angle between the given center point and the given position\n * @param center\n * @param position\n */\nexport const angleFrom = (center, position) => {\n  let a =\n    (Math.atan2(position.y - center.y, position.x - center.x) * 180) / Math.PI;\n  // this keeps the angle always positive, rather than switching to negatives for 180 - 360\n  if (a < 0) {\n    a = 180 + (180 + a);\n  }\n  return a;\n};\n\n/**\n * signed angular delta between two angles. Positive is clockwise.\n * @param start\n * @param end\n */\nexport const angularDelta = (firstAngle, secondAngle) => {\n  let difference = secondAngle - firstAngle;\n  while (difference < -180) difference += 360;\n  while (difference > 180) difference -= 360;\n  return difference;\n};\n","import { D2R, R2D, POC } from \"../geometry/angle\";\nimport D from \"DOMArray\";\nimport Vector2D from \"../geometry/vector2d\";\n\n/**\n * create and return a SnapSVG circle object\n * @param snap\n * @param center\n * @param radius\n * @param stroke\n * @param strokeWidth\n * @param fill\n * @returns {*|SnapShape}\n */\nexport const circle = (\n  snap,\n  center,\n  radius,\n  stroke,\n  strokeWidth,\n  fill = \"none\"\n) => {\n  return snap.circle(center.x, center.y, radius).attr({\n    strokeWidth,\n    stroke,\n    fill\n  });\n};\n\n/**\n * create and return a SnapSVG circle object\n * @param snap\n * @param x\n * @param y\n * @param w\n * @param h\n * @param stroke\n * @param strokeWidth\n * @param fill\n * @param rx\n * @param ry\n * @returns {*|SnapShape}\n */\nexport const rectangle = (\n  snap,\n  x,\n  y,\n  w,\n  h,\n  stroke,\n  strokeWidth,\n  fill = \"none\",\n  rx = 0,\n  ry = 0\n) => {\n  return snap.rect(x, y, w, h).attr({\n    strokeWidth,\n    stroke,\n    fill,\n    rx,\n    ry\n  });\n};\n\n/**\n * create and return a Snap text element centered on a given point\n * @param snap\n * @param {Vector2D} center,\n * @param string\n * @param fill\n * @param fontSize\n * @param fontFamily\n * @param fontWeight\n */\nexport const centeredText = (\n  snap,\n  center,\n  string,\n  fill,\n  fontSize = \"21px\",\n  fontFamily = \"Verdana\",\n  fontWeight = \"normal\"\n) => {\n  return snap.text(center.x, center.y, string.toString()).attr({\n    fill,\n    \"text-anchor\": \"middle\",\n    \"dominant-baseline\": \"central\",\n    \"font-size\": fontSize,\n    \"font-family\": fontFamily,\n    \"font-weight\": fontWeight\n  });\n};\n\n/**\n * create and return a Snap text element centered on a given point\n * @param snap\n * @param {Vector2D} center,\n * @param string\n * @param fill\n * @param fontSize\n * @param fontFamily\n * @param fontWeight\n */\nexport const leftText = (\n  snap,\n  center,\n  string,\n  fill,\n  fontSize = \"21px\",\n  fontFamily = \"Verdana\",\n  fontWeight = \"normal\"\n) => {\n  return snap.text(center.x, center.y, string).attr({\n    fill,\n    \"text-anchor\": \"left\",\n    \"dominant-baseline\": \"central\",\n    \"font-size\": fontSize,\n    \"font-family\": fontFamily,\n    \"font-weight\": fontWeight\n  });\n};\n\n/**\n * a line shape\n * @param snap\n * @param {Vector2D} p1\n * @param {Vector2D} p2\n * @param stroke\n * @param strokeWidth\n */\nexport const line = (snap, p1, p2, stroke, strokeWidth) => {\n  return snap.line(p1.x, p1.y, p2.x, p2.y).attr({\n    strokeWidth,\n    stroke\n  });\n};\n\n/**\n * draw stroke filled triangle defined by 3 points\n * @param snap\n * @param p1\n * @param p2\n * @param p3\n * @param stroke\n * @param strokeWidth\n * @param fill\n */\nexport const triangle = (snap, p1, p2, p3, stroke, strokeWidth, fill) => {\n  const d = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y} L ${p3.x} ${p3.y} Z`;\n  const path = snap.path(d);\n  path.attr({\n    fill,\n    stroke,\n    \"stroke-width\": strokeWidth\n  });\n  return path;\n};\n\n/**\n * draw stroke filled polygon defined by n points ( where 3 <= n )\n * @param snap\n * @param p\n * @param stroke\n * @param strokeWidth\n * @param fill\n */\nexport const polygon = (snap, p, stroke, strokeWidth, fill) => {\n  let d = `M ${p[0].x} ${p[0].y}`;\n  for (let i = 1; i < p.length; i += 1) {\n    d += ` L ${p[i].x} ${p[i].y}`;\n  }\n  d += \" Z\";\n  const path = snap.path(d);\n  path.attr({\n    fill,\n    stroke,\n    \"stroke-width\": strokeWidth\n  });\n  return path;\n};\n\n/**\n * draw a tick mark radiating from a center of a circle at a given starting\n * and ending radius e.g. denoting an airspeed on an airspeed indicator\n * @param snap\n * @param center\n * @param angle - degrees\n * @param outerRadius\n * @param innerRadius\n * @param thickness\n * @param color\n */\nexport const tick = (\n  snap,\n  center,\n  angle,\n  outerRadius,\n  innerRadius,\n  thickness,\n  color\n) => {\n  const p1 = POC(center, outerRadius, angle);\n  const p2 = POC(center, innerRadius, angle);\n  return line(snap, p1, p2, color, thickness);\n};\n\n/**\n *\n * @param snap\n * @param {Vector2D} center\n * @param radius\n * @param thickness\n * @param strokeWidth\n * @param stroke\n * @param fill\n * @param startAngle\n * @param endAngle\n * @param clockWise\n */\nexport const arc = (\n  snap,\n  center,\n  radius,\n  thickness,\n  strokeWidth,\n  stroke,\n  fill,\n  startAngle,\n  endAngle,\n  clockWise\n) => {\n  // return 1 if large arc required for the given start/end angle\n  // and the given direction of turn ( clockwise or counter )\n  const largeArc = (start, end, cw) => {\n    const delta = R2D(\n      Math.atan2(Math.sin(D2R(end - start)), Math.cos(D2R(end - start)))\n    );\n    if (cw) {\n      return delta <= 180 && delta >= 0 ? 0 : 1;\n    }\n    return delta <= 180 && delta >= 0 ? 1 : 0;\n  };\n\n  const arcData = (a1, a2, r, cw) => {\n    let d = \" A \" + r + \" \" + r; // arc command and x/y radius of circle\n    d += \" 0\"; // x axis rotation\n    const large = largeArc(a1, a2, cw);\n    d += \" \" + large; // large arc flag\n    d += cw ? \" 1\" : \" 0\"; // sweep\n    d += \" \" + POC(center, r, a2).x + \" \" + POC(center, r, a2).y; // end point\n    return d;\n  };\n\n  // calculate inner and outer radius\n  const r0 = radius + thickness / 2;\n  const r1 = radius - thickness / 2;\n\n  // move to start of arc on\n  let d =\n    \"M \" + POC(center, r0, startAngle).x + \" \" + POC(center, r0, startAngle).y;\n\n  // add arc data, outer edge from tail to start of arrow\n  d += \" \" + arcData(startAngle, endAngle, r0, clockWise);\n\n  // to inside of arc\n  d += \" L \" + POC(center, r1, endAngle).x + \" \" + POC(center, r1, endAngle).y;\n\n  // arc back to tail, in opposite direction\n  d += \" \" + arcData(endAngle, startAngle, r1, !clockWise);\n\n  // close the path\n  d += \" Z\";\n\n  const path = snap.path(d);\n  path.attr({\n    fill,\n    stroke,\n    \"stroke-width\": strokeWidth\n  });\n  return path;\n};\n\n/**\n * draw a simple cessna shape within a rectangle of given size. Used for example at the center of\n * the heading indicator / directional gyro\n * @param r\n * @param strokeWidth\n * @param stroke\n * @param fill\n */\nexport const airplaneSilhouette = (\n  centerX,\n  centerY,\n  width,\n  height,\n  strokeWidth,\n  stroke,\n  fill\n) => {\n  const s = `\n  <svg \n      xmlns=\"http://www.w3.org/2000/svg\" \n      version=\"1.1\"  \n      x=\"${centerX - width / 2}\"\n      y=\"${centerY - height / 2}\"\n      width=\"${width}\" height=\"${height}\" \n      viewBox=\"0 0 432.243 432.243\"\n  >\n      <path \n          d=\"M396.132,225.557l-29.051-16.144v-13.14c0-8.836-7.164-16-16-16c-7.342,0-13.515,4.952-15.396,11.693l-24.446-13.585    v-12.108c0-8.836-7.164-16-16-16c-7.021,0-12.968,4.526-15.125,10.813l-21.689-12.053c-1.607-31.051-4.521-59.535-8.582-83.175    c-3.221-18.753-7.029-33.617-11.318-44.179C236.346,16.317,229.72,0,216.123,0c-13.598,0-20.224,16.317-22.402,21.679    c-4.289,10.562-8.097,25.426-11.318,44.179c-4.06,23.64-6.975,52.124-8.582,83.175l-21.69,12.053    c-2.157-6.287-8.106-10.813-15.124-10.813c-8.837,0-16,7.164-16,16v12.108l-24.448,13.585    c-1.882-6.742-8.055-11.693-15.396-11.693c-8.837,0-16,7.164-16,16v13.14L36.11,225.557c-3.174,1.766-5.143,5.11-5.143,8.741    v41.718c0,3.237,1.568,6.275,4.208,8.151s6.024,2.356,9.083,1.291l128.616-44.829c1.189,40.082,4.47,77.047,9.528,106.496    c0.917,5.342,1.884,10.357,2.895,15.059l-66.969,37.215c-1.725,0.958-2.794,2.774-2.794,4.749v22.661    c0,1.761,0.852,3.41,2.286,4.431c1.434,1.018,3.272,1.278,4.935,0.701l78.279-27.284c3.598,4.531,8.53,8.329,15.088,8.329    c6.558,0,11.49-3.798,15.087-8.329l78.279,27.284c0.584,0.201,1.188,0.303,1.788,0.303c1.113,0,2.216-0.342,3.146-1.004    c1.434-1.021,2.285-2.669,2.285-4.431v-22.662c0-1.974-1.068-3.791-2.793-4.748l-66.969-37.215c1.01-4.7,1.977-9.715,2.895-15.059    c5.059-29.447,8.339-66.414,9.527-106.496l128.617,44.829c1.071,0.374,2.184,0.558,3.29,0.558c2.05,0,4.078-0.631,5.791-1.849    c2.642-1.875,4.209-4.914,4.209-8.151v-41.718C401.275,230.667,399.308,227.321,396.132,225.557z\" \n          fill=\"${fill}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\"\n      />\n  </svg>`;\n  return new Snap(D(s).el);\n};\n\n/**\n * simple nose on view e.g. at the center of a heading indicator\n * @param centerX\n * @param centerY\n * @param width\n * @param fill\n */\nexport const airplaneNoseView = (snap, center, width, fill) => {\n  // prop radius and empennage size are derived from width\n  const PR = width / 11;\n  const EMT = width / 35;\n  const EMS = width / 3;\n  const WH = width / 25;\n\n  // prop\n  circle(snap, center, PR, 0, \"transparent\", fill);\n\n  // wing\n  const wing = rectangle(\n    snap,\n    center.x - width / 2,\n    center.y - WH / 2,\n    width,\n    WH,\n    \"transparent\",\n    0,\n    fill,\n    3,\n    3\n  );\n\n  // vertical stabilizer\n  const vs = rectangle(\n    snap,\n    center.x - EMT / 2,\n    center.y - EMS + PR * 1.5,\n    EMT,\n    EMS / 2,\n    \"transparent\",\n    0,\n    fill,\n    3,\n    3\n  );\n\n  // horizontal stabilizer\n  const hs = rectangle(\n    snap,\n    center.x - EMS / 2,\n    center.y - PR,\n    EMS,\n    EMT,\n    \"transparent\",\n    0,\n    fill,\n    3,\n    3\n  );\n\n  return snap.g(wing, vs, hs);\n};\n","/**\n * make a stepped needle. Base is the given width but it steps down to half\n * that width at the tip. See the analog airspeed indicator for an example\n * of positioning.\n */\nexport const steppedNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  radiusMid, // radius where width changes\n  arrowHead, // length of arrow heads\n  width // widest width of needle\n) => {\n  let d = `M 0 0`;\n  d += ` L ${radiusShort} 0`;\n  d += `L ${radiusMid - arrowHead} 0`;\n  d += `L ${radiusMid} ${width * 0.4}`;\n  d += `L ${radius + radiusShort - arrowHead} ${width * 0.3}`;\n\n  d += `L ${radius + radiusShort + arrowHead} ${width / 2}`;\n\n  d += `L ${radius + radiusShort - arrowHead} ${width * 0.7}`;\n  d += `L ${radiusMid} ${width * 0.7}`;\n  d += `L ${radiusMid - arrowHead} ${width}`;\n  d += ` L ${radiusShort} ${width}`;\n\n  d += ` L 0 ${width} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:30-#fff:31-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:30-#222:31-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          width / 2} r ${angle} ${radiusShort} ${width / 2}`\n      });\n    }\n  };\n};\n/**\n * Like the stepped needle but with a triangle at the tip, used only for the\n * 10K needle on an altimeter\n */\nexport const altimeter10KNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  radiusMid, // radius where width changes\n  arrowHead, // length of arrow heads\n  triangleWidth // widest width of needle ( the triangle at the tip )\n) => {\n  // width of needle at the short end\n  const baseWidth = triangleWidth * 0.25;\n  const narrowWidth = baseWidth / 2;\n  const CY = triangleWidth / 2;\n\n  let d = `M 0 ${CY - baseWidth / 2}`;\n\n  d += `L ${radiusMid - arrowHead} ${CY - baseWidth / 2}`;\n\n  d += `L ${radiusMid} ${CY - narrowWidth / 2}`;\n\n  d += `L ${radius + radiusShort - arrowHead * 1.5} ${CY - narrowWidth / 2}`;\n\n  d += `L ${radius + radiusShort + arrowHead} 0`;\n  d += `L ${radius + radiusShort + arrowHead} ${triangleWidth}`;\n\n  d += `L ${radius + radiusShort - arrowHead * 1.5} ${CY + narrowWidth / 2}`;\n\n  d += `L ${radiusMid} ${CY + narrowWidth / 2}`;\n\n  d += `L ${radiusMid - arrowHead} ${CY + baseWidth / 2}`;\n\n  d += `L 0 ${CY + baseWidth / 2} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:30-#fff:31-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:30-#222:31-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          triangleWidth / 2} r ${angle} ${radiusShort} ${triangleWidth / 2}`\n      });\n    }\n  };\n};\n\n/**\n * Simple arrow head needle, see the hundreds needle on the altimeter for an example\n */\nexport const arrowNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  arrowHead, // length of arrow heads\n  width // widest width of needle\n) => {\n  let d = `M 0 0`;\n  d += ` L ${radiusShort} 0`;\n  d += `L ${radius + radiusShort - arrowHead} 0`;\n\n  d += `L ${radius + radiusShort + arrowHead} ${width / 2}`;\n  d += `L ${radius + radiusShort - arrowHead} ${width}`;\n\n  d += ` L ${radiusShort} ${width}`;\n\n  d += ` L 0 ${width} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:30-#fff:31-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:30-#222:31-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          width / 2} r ${angle} ${radiusShort} ${width / 2}`\n      });\n    }\n  };\n};\n\n/**\n * Dagger shaped needle e.g. the thousands needle of the altimeter\n */\nexport const daggerNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  arrowHead, // length of arrow heads\n  width // widest width of needle\n) => {\n  // parameter width of dagger at narrowest point\n  const narrow = 0.35;\n\n  let d = `M 0 0`;\n  d += ` L ${radiusShort} ${width * narrow}`;\n\n  d += `L ${radius + radiusShort - arrowHead} 0`;\n\n  d += `L ${radius + radiusShort + arrowHead} ${width / 2}`;\n  d += `L ${radius + radiusShort - arrowHead} ${width}`;\n\n  d += ` L ${radiusShort} ${width - width * narrow}`;\n\n  d += ` L 0 ${width} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:40-#fff:41-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:40-#222:41-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          width / 2} r ${angle} ${radiusShort} ${width / 2}`\n      });\n    }\n  };\n};\n","/**\n * start an interval callback at the given rate. Unlike the native window.setInterval\n * this will call on the leading edge of the interval. Returns a function that be used\n * to cancel the interval\n * @param milliseconds\n */\nexport const interval = (callback, milliseconds) => {\n  // setup system interval\n  let timer = setInterval(callback, milliseconds);\n\n  // make the initial callback soon but not before returning from this call.\n  requestAnimationFrame(() => {\n    // make sure we were not cancelled\n    if (timer) {\n      callback();\n    }\n  });\n\n  // return cancel function\n  return () => {\n    clearInterval(timer);\n    timer = 0;\n  };\n};\n","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport { POC, C2D } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  circle,\n  centeredText,\n  tick,\n  rectangle,\n  arc\n} from \"./graphics/primitives\";\nimport { arrowNeedle } from \"./needles\";\nimport { interval } from \"./utils/time\";\n\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// outer radius of all tick marks\nconst TICK1 = R - (CASE1 + CASE2 + CASE3);\n// inner radius of small ticks\nconst TICK2 = TICK1 - 25;\n// inner radius of large ticks\nconst TICK3 = TICK1 - 40;\n\n// green arc radius and thickness\nconst ARC_WIDTH = 20;\nconst ARC_RADIUS = TICK2 + ARC_WIDTH / 2;\n\n// radius of  large digits marking hundreds of feet\nconst LABEL_RADIUS = TICK3 - 25;\n\n// hundreds needle, other needles are derived from these\nconst POINTER_SMALL_RADIUS = 40;\nconst POINTER_WIDTH = 10;\nconst POINTER_ARROW = 6;\nconst POINTER_RADIUS = TICK2 - POINTER_ARROW;\n\n// RPM limits and ranges\nconst MIN_RPM = 0;\nconst MAX_RPM = 3500;\nconst MIN_GREEN = 2100;\nconst MAX_GREEN = 2700;\nconst REDLINE = 2700;\n\n// angle at low stop of tacometer and angle sweep to the\n// max rpm point\nconst START_ANGLE = 145;\nconst ANGLE_SWEEP = 250;\n\n// dimensions of individual hours window\nconst HOUR_W = 24;\nconst HOUR_H = 30;\nconst HOUR_P = 8;\nconst HOUR_Y = CY + 70;\n\nexport default class TachometerAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    this.renderImmutable();\n    this.renderText();\n    this.renderHours();\n    this.createNeedle();\n    this.setNeedle(this.airplane.rpm);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n\n    this.template.appendTo(this.parentElement);\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        this.airplane.setRPM(MIN_RPM + (REDLINE - MIN_RPM) * Math.random());\n      }, 5000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderDial();\n    this.renderShadow();\n  }\n\n  /**\n   * fixed text\n   */\n  renderText() {\n    centeredText(this.snap, new Vector2D(CX, CY - 55), \"RPM\", \"white\", \"24px\");\n    centeredText(\n      this.snap,\n      new Vector2D(CX, CY - 33),\n      \"X 100\",\n      \"white\",\n      \"14px\"\n    );\n  }\n\n  /**\n   * fake hours windows\n   */\n  renderHours() {\n    // five windows including 10ths\n    const n = 5;\n    const width = n * HOUR_W + (n - 1) * HOUR_P;\n    const left = CX - width / 2;\n    for (let i = 0; i < n; i += 1) {\n      const x = left + i * (HOUR_W + HOUR_P);\n      rectangle(\n        this.snap,\n        x,\n        HOUR_Y,\n        HOUR_W,\n        HOUR_H,\n        this.snap.gradient(`l(0, 0, 1, 1)#222:0-#666:100`),\n        1,\n        i === n - 1\n          ? \"whitesmoke\"\n          : this.snap.gradient(`l(0.5, 0, 0.5, 1)#000:0-#444:50-#000:100`),\n        3,\n        3\n      );\n      const position = new Vector2D(x + HOUR_W / 2, HOUR_Y + HOUR_H / 2);\n      centeredText(\n        this.snap,\n        position,\n        Math.floor(Math.random() * 10) % 10,\n        i === n - 1 ? \"black\" : \"white\",\n        \"20px\",\n        \"Verdana\"\n      );\n    }\n    centeredText(\n      this.snap,\n      new Vector2D(CX, HOUR_Y + HOUR_H + 12),\n      \"HOURS\",\n      \"white\",\n      \"14px\",\n      \"Verdana\"\n    );\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * render tick marks around face and numbers for 100's of feet\n   */\n  renderDial() {\n    // draw green arc under all ticks\n    arc(\n      this.snap,\n      CENTER,\n      ARC_RADIUS,\n      ARC_WIDTH,\n      0,\n      \"transparent\",\n      \"#00EE00\",\n      this.rpmToAngle(MIN_GREEN),\n      this.rpmToAngle(MAX_GREEN),\n      true\n    );\n    // draw small/large ticks across entire RPM range\n    for (let i = MIN_RPM; i <= MAX_RPM; i += 100) {\n      // large or small\n      if (i % 500 === 0) {\n        tick(this.snap, CENTER, this.rpmToAngle(i), TICK1, TICK3, 5, \"white\");\n        // draw RPM text and 500 intervals except and upper and lower limit\n        if (i > MIN_RPM && i < MAX_RPM) {\n          const position = POC(CENTER, LABEL_RADIUS, this.rpmToAngle(i));\n          centeredText(\n            this.snap,\n            position,\n            Math.floor(i / 100),\n            \"white\",\n            \"34px\",\n            \"Verdana\"\n          );\n        }\n      } else {\n        tick(this.snap, CENTER, this.rpmToAngle(i), TICK1, TICK2, 3, \"white\");\n      }\n    }\n    // draw redline\n    tick(this.snap, CENTER, this.rpmToAngle(REDLINE), TICK1, TICK3, 7, \"red\");\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.6)`)\n    );\n  }\n\n  /**\n   * create the needle and center nut\n   */\n  createNeedle() {\n    this.needle = arrowNeedle(\n      this.snap,\n      POINTER_RADIUS,\n      POINTER_SMALL_RADIUS,\n      POINTER_ARROW,\n      POINTER_WIDTH\n    );\n    circle(this.snap, CENTER, 4, \"#888\", 1, \"black\");\n  }\n\n  /**\n   * update the needle\n   * @param airspeed\n   */\n  setNeedle(rpm) {\n    this.needle.setCenterAndAngle(CX, CY, this.rpmToAngle(rpm));\n  }\n\n  /**\n   * convert an RPM to an angle\n   * @param rpm\n   */\n  rpmToAngle(rpm) {\n    // clamp to limits\n    const v = Math.max(MIN_RPM, Math.min(MAX_RPM, rpm));\n    // normalize\n    const normalized = (v - MIN_RPM) / (MAX_RPM - MIN_RPM);\n    // angle\n    return (START_ANGLE + ANGLE_SWEEP * normalized) % 360;\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    this.setNeedle(this.airplane.rpm);\n  }\n}\n","/**\n * round a real to given number of decimal places. This is much better than toFixed for the following reasons:\n *\n * round(1.005, 2) = 1.01 ( toFixed would give 1.00 )\n * round(2.00, 2 ) = 2 ( toFixed would give 2.00 )\n * @param value\n * @param decimals\n * @returns {number}\n */\nexport const round = (value, decimals) => {\n  return Number(Math.round(value + \"e\" + decimals) + \"e-\" + decimals);\n};\n\n// map an input value ( 0..1 ) to a non linear scale ( 0..maxValue ) where midvalue is the value\n// at the midpoint of the non linear scale. NOTE: Specifying a linear scale will produce an error.\n/**\n * map an input value 0..1 to a non linear scale 0..maxValue with a specified mid point\n *\n * @param inputValue\n * @param midValue\n * @param maxValue\n * @returns {number}\n */\nexport const nonLinearScale = (inputValue, midValue, maxValue) => {\n  let returnValue;\n  console.assert(\n    inputValue >= 0 && inputValue <= 1,\n    \"input value out of range\"\n  );\n  console.assert(\n    midValue > 0 || midValue < maxValue,\n    \"MidValue must be greater than 0 and less than MaxValue\"\n  );\n\n  // returnValue = A + B * Math.Exp(C * inputValue);\n  const M = maxValue / midValue;\n  const C = Math.log(Math.pow(M - 1, 2));\n  const B = maxValue / (Math.exp(C) - 1);\n  const A = -1 * B;\n  returnValue = A + B * Math.exp(C * inputValue);\n  // you will get NaN for a linear scale, so handle that edge case by returning the scaled linear value\n  if (isNaN(returnValue)) {\n    return maxValue * inputValue;\n  }\n  return returnValue;\n};\n\n/**\n * lerp from -> to over the given time. Returns a function that can be used to\n * cancel the lerp at any time. If sine based ease is used by default by can be disabled.\n * @param from\n * @param to\n * @param time\n * @param callback\n * @param ease\n * @returns {function()}\n */\nexport const lerp = (from, to, time, callback, ease = true) => {\n  console.assert(\n    isFinite(from) && isFinite(to) && isFinite(time) && time > 0,\n    \"invalid parameters\"\n  );\n\n  // time span over which to operate\n  const startTime = Date.now();\n  const endTime = startTime + time;\n\n  let requestId = 0;\n\n  const timer = () => {\n    let value = to;\n    const now = Date.now();\n    if (now < endTime) {\n      const delta = now - startTime;\n      const normalized = ease\n        ? Math.sin((delta / time) * (Math.PI / 2))\n        : delta / time;\n      value = from + normalized * (to - from);\n      requestId = requestAnimationFrame(timer);\n    } else {\n      requestId = 0;\n    }\n    callback(value);\n  };\n\n  requestId = requestAnimationFrame(timer);\n\n  return () => {\n    if (requestId) {\n      cancelAnimationFrame(requestId);\n    }\n  };\n};\n\n/**\n * TODO, gives this a shared requestAnimationFrame\n */\nexport class AnimatedValue {\n  constructor(value, options = {}) {\n    // assign our option\n    Object.assign(this, options, {\n      lowLimit: -Number.MAX_VALUE,\n      hiLimit: Number.MAX_VALUE,\n      time: 1000,\n      callback: () => {}\n    });\n    // the actual value with initial clamping\n    this.value = Math.max(this.lowLimit, Math.min(this.hiLimit, value));\n    // the current value of the animation\n    this.currentValue = value;\n  }\n\n  /**\n   * set the value and begin a lerp as necessary to reach it\n   * @param value\n   */\n  setValue(value) {\n    if (value !== this.value) {\n      this.cancelLerp();\n      this.value = Math.max(this.lowLimit, Math.min(this.hiLimit, value));\n      this.lerp = lerp(this.currentValue, this.value, this.time, v => {\n        this.currentValue = v;\n        this.callback(this.currentValue, this.value);\n      });\n    }\n  }\n\n  /**\n   * set the value with immediate effect, no animation\n   * @param value\n   */\n  setValueImmediate(value) {\n    this.value = Math.max(this.lowLimit, Math.min(this.hiLimit, value));\n    this.currentValue = value;\n    this.cancelLerp();\n    this.callback(this.currentValue, this.value);\n  }\n\n  /**\n   * cancel any current lerp\n   */\n  cancelLerp() {\n    if (this.lerp) {\n      this.lerp();\n      this.lerp = null;\n    }\n  }\n}\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport { nonLinearScale } from \"./utils/math\";\nimport { POC, C2D } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport { circle, centeredText, tick, arc } from \"./graphics/primitives\";\nimport { steppedNeedle } from \"./needles\";\nimport { interval } from \"./utils/time\";\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// outer radius of all tick marks\nconst TICK1 = R - (CASE1 + CASE2 + CASE3);\n// inner radius of small ticks\nconst TICK2 = TICK1 - 40;\n// inner radius of large ticks\nconst TICK3 = TICK1 - 50;\n// radius of center of airspeed labels\nconst LABEL_RADIUS = TICK3 - 26;\n\n// width of range arcs\nconst ARC_WIDTH = 22;\n\n// width of range arcs\nconst FLAP_ARC_WIDTH = 18;\n\n// radius of white arc\nconst WHITE_ARC_RADIUS = TICK3 + ARC_WIDTH * 2 - ARC_WIDTH / 2 - 1;\n// green / yellow arcs\nconst ARC_RADIUS = TICK3 + ARC_WIDTH / 2;\n\n// max airspeed angle on face\nconst MAX_SPEED_ANGLE = 320;\n// airspeed at 6 o'clock\nconst MID_SPEED = 115;\n\nconst POINTER_SMALL_RADIUS = 40;\nconst POINTER_WIDTH = 14;\nconst POINTER_ARROW = 6;\nconst POINTER_RADIUS = WHITE_ARC_RADIUS + FLAP_ARC_WIDTH / 2 - POINTER_ARROW;\nconst POINTER_MID = POINTER_RADIUS * 0.65;\n\nexport default class AirspeedAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    // figure out the airspeed closest to 12 o'clock. This is our minimum displayable speed\n    this.minimumDisplayableSpeed = 0;\n    let nearest = Number.MAX_VALUE;\n    for (let i = this.airplane.VS0; i >= 0; i -= 0.2) {\n      const angle = this.airspeedToAngle(i);\n      if (Math.abs(angle - 270) < nearest) {\n        this.minimumDisplayableSpeed = i;\n        nearest = Math.abs(angle - 270);\n      }\n    }\n\n    // initial render of instrument\n    this.renderImmutable();\n    this.createNeedle();\n\n    // set needle to default display position\n    this.setNeedle(this.airplane.airspeed);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n\n    this.template.appendTo(this.parentElement);\n    this.addDisposable(() => this.template.remove());\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    let airspeed = 40; // Start with an initial airspeed of 40 knots\n  \n    const demoInterval = setInterval(() => {\n      this.airplane.setAirspeed(airspeed);\n  \n      // Increment the airspeed by 10\n      airspeed += 10;\n  \n      // If the airspeed reaches 200, reset it to 40\n      if (airspeed > 200) {\n        airspeed = 40;\n      }\n    }, 1000); // Change airspeed every 1000 milliseconds (1 second)\n  \n    // Store the interval ID so it can be canceled later\n    this.addLerp(\"demo\", () => clearInterval(demoInterval));\n  }\n  \n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderSpeedArcs();\n    this.renderText();\n    this.renderTicks();\n    this.renderAirspeeds();\n    this.renderShadow();\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * render the three speed arcs ( white, green, yellow )\n   */\n  renderSpeedArcs() {\n    // draw the flap (white) normal ( green ) and caution ( yellow ) speed arcs\n    arc(\n      this.snap,\n      CENTER,\n      WHITE_ARC_RADIUS,\n      ARC_WIDTH,\n      0,\n      \"white\",\n      \"white\",\n      this.airspeedToAngle(this.airplane.VS0),\n      this.airspeedToAngle(this.airplane.VFE),\n      true\n    );\n\n    arc(\n      this.snap,\n      CENTER,\n      ARC_RADIUS,\n      ARC_WIDTH,\n      0,\n      \"transparent\",\n      \"#00EE00\",\n      this.airspeedToAngle(this.airplane.VS1),\n      this.airspeedToAngle(this.airplane.VNO),\n      true\n    );\n\n    arc(\n      this.snap,\n      CENTER,\n      ARC_RADIUS,\n      ARC_WIDTH,\n      0,\n      \"transparent\",\n      \"#FFDC00\",\n      this.airspeedToAngle(this.airplane.VNO),\n      this.airspeedToAngle(this.airplane.VNE),\n      true\n    );\n  }\n\n  /**\n   * render static text, KNOTS and AIR SPEED\n   */\n  renderText() {\n    // draw airspeeds and knots labels\n    centeredText(\n      this.snap,\n      new Vector2D(CX, CY + 50),\n      \"KNOTS\",\n      \"white\",\n      \"16px\"\n    );\n    centeredText(this.snap, new Vector2D(CX, 70), \"AIR\", \"white\", \"16px\");\n    centeredText(this.snap, new Vector2D(CX, 90), \"SPEED\", \"white\", \"16px\");\n  }\n\n  /**\n   * render the knots ( KIAS ) tick marks around the outside of the face.\n   */\n  renderTicks() {\n    // draw VS0 to MAX_SPEED in 10 knot intervals\n    for (\n      let i = this.airplane.VS0;\n      i <= this.airplane.MAX_DISPLAYED_SPEED;\n      i += 10\n    ) {\n      tick(\n        this.snap,\n        CENTER,\n        this.airspeedToAngle(i),\n        TICK1,\n        TICK3,\n        4,\n        \"white\"\n      );\n    }\n\n    // small ticks at 5 knot intervals\n    for (\n      let i = this.airplane.VS0 + 5;\n      i <= this.airplane.MAX_DISPLAYED_SPEED - 5;\n      i += 10\n    ) {\n      tick(\n        this.snap,\n        CENTER,\n        this.airspeedToAngle(i),\n        TICK1,\n        TICK2,\n        2,\n        \"white\"\n      );\n    }\n\n    // draw VNE tick mark\n    tick(\n      this.snap,\n      CENTER,\n      this.airspeedToAngle(this.airplane.VNE),\n      TICK1,\n      TICK3,\n      7,\n      \"red\"\n    );\n  }\n\n  /**\n   * rendered the numbers airspeeds\n   */\n  renderAirspeeds() {\n    // draw airspeed labels 40, 60, ... 200 in intervals of 20\n    for (\n      let i = this.airplane.VS0;\n      i <= this.airplane.MAX_DISPLAYED_SPEED;\n      i += 20\n    ) {\n      const position = POC(CENTER, LABEL_RADIUS, this.airspeedToAngle(i));\n      centeredText(this.snap, position, i, \"white\", \"24px\", \"Verdana\", \"bold\");\n    }\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.6)`)\n    );\n  }\n\n  /**\n   * create the needle shape\n   */\n  createNeedle() {\n    this.needle = steppedNeedle(\n      this.snap,\n      POINTER_RADIUS,\n      POINTER_SMALL_RADIUS,\n      POINTER_MID,\n      POINTER_ARROW,\n      POINTER_WIDTH\n    );\n    circle(this.snap, CENTER, 4, \"#888\", 1, \"black\");\n  }\n\n  /**\n   * immediately set the needle to the given airspeed\n   * @param airspeed\n   */\n  setNeedle(airspeed) {\n    const angle = this.airspeedToAngle(\n      Math.max(this.minimumDisplayableSpeed, airspeed)\n    );\n    this.needle.setCenterAndAngle(CX, CY, angle);\n  }\n\n  /**\n   * convert the given airspeed ( KIAS ) into an angle in degrees.\n   * @param airspeed\n   * @returns {number}\n   */\n  airspeedToAngle(airspeed) {\n    console.assert(\n      airspeed >= 0 && airspeed <= this.airplane.MAX_DISPLAYED_SPEED,\n      \"airspeed out of range\"\n    );\n    // convert airspeed to 0..1\n    const normalized = airspeed / this.airplane.MAX_DISPLAYED_SPEED;\n    // get non linear value 0..MAX_SPEED\n    const nonLinear = nonLinearScale(\n      normalized,\n      MID_SPEED,\n      this.airplane.MAX_DISPLAYED_SPEED\n    );\n    // zero airspeed is actually starts at MAX_SPEED and goes clockwise\n    const circle = 360 * (nonLinear / this.airplane.MAX_DISPLAYED_SPEED);\n    return C2D((MAX_SPEED_ANGLE + circle) % 360);\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    this.setNeedle(this.airplane.airspeed);\n  }\n}\n","export const colors = {\n  // standard palette\n  navy: \"#001f3f\",\n  blue: \"#0074D9\",\n  aqua: \"#7FDBFF\",\n  teal: \"#39CCCC\",\n  olive: \"#3D9970\",\n  green: \"#2ECC40\",\n  lime: \"#01FF70\",\n  yellow: \"#FFDC00\",\n  orange: \"#FF851B\",\n  red: \"#FF4136\",\n  maroon: \"#85144b\",\n  fuchsia: \"#F012BE\",\n  purple: \"#B10DC9\",\n  black: \"#111111\",\n  charcoal: \"#555\",\n  gray: \"#AAAAAA\",\n  silver: \"#DDDDDD\",\n  white: \"#FFFFFF\",\n\n  // used for example on the face of the attitude indicator\n  sky: \"#6ca3e3\",\n  earth: \"#67411a\",\n  // color for a compass / vor rose on a sectional\n  compassRose: \"#084e8a\"\n};\n","import D from \"DOMArray\";\nimport Disposable from \"../disposable\";\nimport Vector2D from \"../geometry/vector2d\";\n\n// native events we capture\nconst events = [\"mousemove\", \"mousedown\", \"mouseup\", \"mouseover\", \"mouseout\"];\n// synthetic events we produce. If can, optionally, register for these events.\n// If you do you will receive them whenever the node is the target of a\n// call to setCapture, release capture. This gives you a clean way of tracking\n// the start and end of capture.\n// NOTE: the callback for these events receive no parameters.\nconst sEvents = [\"setCapture\", \"releaseCapture\"];\n\nexport default class Mouse extends Disposable {\n  constructor() {\n    super();\n    // save some typing\n    this.d = document.documentElement;\n    // capture all events\n    this.handleEvent = this.handleEvent.bind(this);\n    events.forEach(name => {\n      this.d.addEventListener(name, this.handleEvent);\n    });\n    this.addDisposable(() => {\n      events.forEach(name =>\n        this.d.removeEventListener(name, this.handleEvent)\n      );\n    });\n    // map event name to listeners of that event ( ears )\n    this.hash = {};\n    // the node that current has the capture\n    this.captureNode = null;\n  }\n\n  /**\n   * event handler for all events\n   * @param e\n   */\n  handleEvent(e) {\n    // get all ears for this event\n    const ears = this.hash[e.type];\n    if (ears) {\n      ears.forEach(ear => {\n        // if capturing all events go to the captureNode\n        if (this.captureNode) {\n          ear.callback(e, this.eventToNode(ear.node, e), true);\n        } else {\n          // otherwise only if event targets the node or children of node as specified\n          if (\n            e.target === ear.node ||\n            (ear.includeDescendants && this.contains(e.target, ear.node))\n          ) {\n            ear.callback(e, this.eventToNode(ear.node, e), false);\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * get position of mouse in the coordinate system of the node.\n   * Both getBoundingClientRect and the clientX, clientY coordinate of mouse events are in\n   * viewport space so there is no need to convert into document/global space first.\n   * @param node\n   */\n  eventToNode(node, event) {\n    // viewport relative bounds of node\n    const box = node.getBoundingClientRect();\n    // clientX/Y are viewport relative, so just subtract the elements viewport bounds\n    return new Vector2D(event.clientX - box.x, event.clientY - box.y);\n  }\n\n  /**\n   * returns true if descendant really is a descendant of parent\n   * https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n   * @param ancestor\n   * @param descendant\n   */\n  contains(ancestor, descendant) {\n    const relationship = ancestor.compareDocumentPosition(descendant);\n    return relationship & 8;\n  }\n\n  /**\n   * register a listener for a given event and node. You can either include or exclude\n   * events to the descendants of the given node\n   * @param event\n   * @param node\n   * @param callback\n   * @param includeDescendants\n   */\n  register(event, node, callback, includeDescendants = true) {\n    // you can only register for one of our event\n    if (!this.hash[event]) {\n      this.hash[event] = [];\n    }\n    this.hash[event].push({\n      node,\n      callback,\n      includeDescendants\n    });\n  }\n\n  /**\n   * unregister a handler using the same parameters as were used to register it. Everything must match\n   * @param event\n   * @param node\n   * @param callback\n   * @param includeDescendants\n   */\n  unregister(event, node, callback, includeDescendants = true) {\n    console.assert(this.hash[event], \"nothing registered for this event\");\n    let removed = 0;\n    this.hash[event].forEach((record, index) => {\n      if (\n        record.node === node &&\n        record.callback === callback &&\n        record.includeDescendants === includeDescendants\n      ) {\n        this.hash[event].splice(index, 1);\n        // if this is the capture node then cancel capture\n        if (record.node === this.captureNode) {\n          this.releaseCapture();\n        }\n        removed += 1;\n      }\n    });\n    console.assert(\n      removed !== 1,\n      \"unregister did not match exactly one record\"\n    );\n  }\n\n  /**\n   * Return the listener for the named event and the given node\n   * @param eventName\n   * @param node\n   */\n  findNode(eventName, node) {\n    const list = this.hash[eventName];\n    if (list) {\n      return list.find(record => record.node === node);\n    }\n    return null;\n  }\n\n  /**\n   * send all events to the capture node until releaseCapture is called.\n   * @param node\n   */\n  setCapture(node) {\n    this.releaseCapture();\n    this.captureNode = node;\n    // find a listener for 'setCapture' for this node\n    const record = this.findNode(\"setCapture\", this.captureNode);\n    if (record) {\n      record.callback();\n    }\n  }\n\n  /**\n   * release the capture on the given node\n   */\n  releaseCapture() {\n    if (this.captureNode) {\n      // find a listener for 'releaseCapture' for this node\n      const record = this.findNode(\"releaseCapture\", this.captureNode);\n      if (record) {\n        record.callback();\n      }\n      this.captureNode = null;\n    }\n  }\n}\n","import Disposable from \"./disposable\";\nimport Animated from \"./animated\";\nimport D from \"DOMArray\";\nimport { POC, D2C, angleFrom, angularDelta } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  tick,\n  circle,\n  rectangle,\n  centeredText,\n  leftText\n} from \"./graphics/primitives\";\nimport { colors } from \"./graphics/colors\";\nimport { lerp } from \"./utils/math\";\nimport { interval } from \"./utils/time\";\nimport Snap from \"snapsvg-cjs\";\nimport Mouse from \"./utils/mouse\";\n\n// outer beveled ring thickess\nconst CASE1 = 5;\n\n// anglular changes above this delta are ignored\nconst JITTER_THRESHOLD = 20;\n\n// scale when pop'ed out\nconst POP_SCALE = 1.25;\n\n/**\n * base class for all analog / digital instruments\n */\nexport default class Rotatable extends Animated {\n  constructor(options) {\n    super();\n    Object.assign(\n      this,\n      {\n        radius: 30,\n        text: \"\",\n        textColor: colors.white,\n        rotation: 0,\n        rotationCallback: null,\n        clickCallback: null,\n        gear: 1,\n        fontSize: \"16px\",\n        randomize: true,\n        popout: false,\n        popState: false\n      },\n      options\n    );\n    console.assert(this.snap, \"requires a snap paper\");\n    console.assert(\n      this.rotationCallback || this.clickCallback,\n      \"requires a rotation or click callback\"\n    );\n    this.center = new Vector2D(this.radius, this.radius);\n    this.randomOffset = this.randomize ? Math.random() * 360 : 0;\n    this.renderImmutable();\n  }\n\n  /**\n   * set the pop scale ana update\n   * @param s\n   */\n  setPopScale(s) {\n    this.scale = s;\n    this.addLerp(\n      \"scale\",\n      lerp(this.displayScale, this.scale, 200, (v) => {\n        this.displayScale = v;\n        this.updateTransform();\n        this.updateButtonColor();\n      })\n    );\n  }\n\n  renderImmutable() {\n    // group everything for centering on parent location and rotation\n    this.group = this.snap.group();\n    this.group.attr({\n      class: \"clickable\"\n    });\n\n    this.el = circle(\n      this.snap,\n      this.center,\n      this.radius - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      colors.black\n    );\n\n    this.text = centeredText(\n      this.snap,\n      this.center,\n      this.text,\n      this.textColor,\n      this.fontSize\n    );\n\n    // set initial position which might be random\n    this.text.attr({\n      transform: `r ${this.rotation + this.randomOffset} ${this.center.x} ${\n        this.center.y\n      }`\n    });\n\n    // this is a nearly invisible outer circle that enlarges the area which\n    // is responsive to clicks and touches. Useful on small screens and touch devices.\n    this.outer = circle(\n      this.snap,\n      this.center,\n      this.radius * 2,\n      \"none\",\n      0,\n      \"rgba(0, 0, 0, 0.001)\"\n    );\n\n    this.group.add(this.el, this.text, this.outer);\n\n    // setup mouse interactions\n    this.mouse = new Mouse();\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.mouse.register(\"mousemove\", this.group.node, this.onMouseMove);\n    this.mouse.register(\"mousedown\", this.group.node, this.onMouseDown);\n    this.mouse.register(\"mouseup\", this.group.node, this.onMouseUp);\n\n    // set default center\n    this.centerOn(this.center);\n\n    // set default scale\n    this.displayScale = this.popState ? POP_SCALE : 1;\n    this.setPopScale(this.displayScale);\n  }\n\n  /**\n   * set color of button face according to the currently displayed scale\n   * @param color\n   */\n  updateButtonColor() {\n    const normalized = (this.displayScale - 1) / (POP_SCALE - 1);\n    const gray = Math.floor(normalized * 92);\n    this.el.attr({\n      fill: `rgb(${gray}, ${gray}, ${gray})`\n    });\n  }\n\n  /**\n   *\n   * @param e\n   * @param local\n   */\n  onMouseDown(e, local) {\n    this.lastAngle = angleFrom(this.center, local);\n    this.mouse.setCapture(this.group.node);\n  }\n\n  /**\n   * mouse is released\n   * @param e\n   * @param local\n   */\n  onMouseUp(e, local, capture) {\n    if (capture && this.clickCallback) {\n      this.clickCallback();\n    }\n    this.mouse.releaseCapture();\n    if (this.popout) {\n      this.togglePopout();\n    }\n  }\n\n  /**\n   * repond to twisting when capturing the mouse\n   * @param e\n   * @param local\n   */\n  onMouseMove(e, local, capture) {\n    // mouse rotation swipes only if capturing and there is a rotation callback\n    if (capture && this.rotationCallback) {\n      console.assert(isFinite(this.lastAngle), \"lastAngle must be set\");\n      const angle = angleFrom(this.center, local);\n      let delta = angularDelta(this.lastAngle, angle);\n      this.lastAngle = angle;\n      // ignore if delta above a threshold to avoid too much jumpiness\n      if (Math.abs(delta) < JITTER_THRESHOLD) {\n        this.rotationCallback(delta * this.gear);\n        this.rotation = this.rotation + delta;\n        this.text.attr({\n          transform: `r ${this.rotation + this.randomOffset} ${this.center.x} ${\n            this.center.y\n          }`\n        });\n      }\n    }\n  }\n\n  /**\n   * toggle popstate\n   */\n  togglePopout() {\n    this.popState = !this.popState;\n    this.setPopScale(this.popState ? POP_SCALE : 1);\n  }\n\n  /**\n   * position / center ourselves on the given location\n   * @param point\n   */\n  centerOn(point) {\n    this.position = new Vector2D(point.x, point.y);\n    this.updateTransform();\n  }\n\n  /**\n   * update position and scale\n   */\n  updateTransform() {\n    this.group.attr({\n      transform: `t ${this.position.x - this.radius} ${\n        this.position.y - this.radius\n      } s${this.displayScale} ${this.radius} ${this.radius}`\n    });\n  }\n}\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport Rotatable from \"./rotatable-button\";\nimport { POC, D2C, D2R } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  centeredText,\n  tick,\n  line,\n  circle,\n  rectangle,\n  triangle,\n  arc\n} from \"./graphics/primitives\";\nimport { interval } from \"./utils/time\";\nimport { colors } from \"./graphics/colors\";\nimport { lerp } from \"./utils/math\";\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// color of sky and earth\nconst COLOR_SKY = colors.sky;\nconst COLOR_EARTH = colors.earth;\n\n// radius/thickness of outer bezel\nconst OUTER_THICKNESS = 40;\nconst OUTER_RADIUS = R - (CASE1 + CASE2 + CASE3 + OUTER_THICKNESS / 2);\n// radius of inner bezel\nconst INNER_RADIUS = R - (CASE1 + CASE2 + CASE3 + OUTER_THICKNESS);\n// determines length of pitch tick marks\nconst TICK_M = 4;\n// width of small ( 5 increment ) tick marks\nconst SMALL_TICK_WIDTH = 25;\n// on the pitch axis this is the ratio between degrees of pitch and pixels the face will move up or down\nconst PITCH_TO_PIXELS = 3.2;\n// pointer base metrics\nconst POINTER_BASE_THICKNESS = W / 4;\nconst POINTER_BASE_ARC = 40;\n// pointer arm THICKNESS\nconst PA_T = 8;\nconst PA_BH = W / 2 - 40;\nconst PA_BI = CASE1;\nconst PA_ARM = W / 6;\nconst PA_TRI_W = 30;\nconst PA_TRI_H = 32;\nconst PA_TRI_R = R - (CASE1 + CASE2 + CASE3 + OUTER_THICKNESS);\n\n// vertical adjustment button\nconst V_ADJUST_CENTER = POC(CENTER, OUTER_RADIUS, 90);\n// vertical adjustment is limited to this number of pixels +/- of center\nconst V_ADJUST_LIMIT = PITCH_TO_PIXELS * 5;\n\n// cage button\nconst CAGE_CENTER = POC(CENTER, R, 45);\n\nexport default class AttitudeIndicatorAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H,\n          // deflection, +/- between the vertical adjustment limits\n          verticalAdjustment: 0,\n          // if true the attitude is caged\n          caged: false,\n          // used to damp pitch and roll when caged ( by setting to zero )\n          cageMultiplier: 1\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    this.pitch = this.roll = 0;\n    this.renderImmutable();\n    this.setRollAndPitch(this.airplane.roll, this.airplane.pitch);\n    this.template.appendTo(this.parentElement);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        this.airplane.setRoll(-45 + 90 * Math.random());\n        this.airplane.setPitch(-20 + 40 * Math.random());\n      }, 3000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderInnerBezel();\n    this.renderOuterBezel();\n    this.renderShadow();\n    this.renderPointers();\n    this.renderButtons();\n  }\n\n  /**\n   * create the vertical adjustment button and CAGE buttons\n   */\n  renderButtons() {\n    // v adjust button\n    this.verticalAdjustButton = new Rotatable({\n      snap: this.snap,\n      text: \"↕\",\n      fontSize: \"32px\",\n      textColor: colors.silver,\n      gear: 0.05,\n      randomize: false,\n      rotationCallback: this.onVerticalAdjustment.bind(this)\n    });\n    this.verticalAdjustButton.centerOn(V_ADJUST_CENTER);\n\n    // cage button, PULL ( click ) to enter caged mode\n    this.cageButton = new Rotatable({\n      snap: this.snap,\n      text: \"CAGE\",\n      textColor: colors.silver,\n      gear: 1,\n      clickCallback: this.onCageToggle.bind(this),\n      randomize: false,\n      popout: true\n    });\n    this.cageButton.centerOn(CAGE_CENTER);\n  }\n\n  /**\n   * vertical adjustment button was twisted\n   * @param delta\n   */\n  onVerticalAdjustment(delta) {\n    const v = Math.max(\n      -V_ADJUST_LIMIT,\n      Math.min(V_ADJUST_LIMIT, this.verticalAdjustment + delta)\n    );\n    this.setArmGroupVerticalAdjustment(v);\n  }\n\n  /**\n   * toggle cage mode\n   */\n  onCageToggle() {\n    this.caged = !this.caged;\n    const from = this.cageMultiplier;\n    const to = this.caged ? 0 : 1;\n    this.addLerp(\n      \"caged\",\n      lerp(from, to, 2000, (v) => {\n        this.cageMultiplier = v;\n        this.setRollAndPitch(this.airplane.roll, this.airplane.pitch);\n      })\n    );\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * render airplane pointer and level indicator ( arrow at top )\n   */\n  renderPointers() {\n    // group all the arms parts together so they can be vertically adjusted\n    this.armGroup = this.snap.group();\n\n    // draw vertical line from base to below the ball\n    const bottom = H - PA_BI;\n    const top = bottom - PA_BH;\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        CX - PA_T / 2,\n        top,\n        PA_T,\n        bottom - top - V_ADJUST_LIMIT,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    // horizontal central arm\n    const left = CX - PA_ARM / 2;\n    const right = CX + PA_ARM / 2;\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        left,\n        top,\n        right - left,\n        PA_T,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    // two vertical wing supports\n    const WY = CY - PA_T / 2;\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        left,\n        WY,\n        PA_T,\n        top - WY + PA_T,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        right - PA_T,\n        WY,\n        PA_T,\n        top - WY + PA_T,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    // two wings\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        left - PA_ARM + PA_T,\n        WY,\n        PA_ARM,\n        PA_T,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    this.armGroup.add(\n      rectangle(\n        this.snap,\n        right - PA_T,\n        WY,\n        PA_ARM,\n        PA_T,\n        \"transparent\",\n        0,\n        colors.orange,\n        PA_T / 2,\n        PA_T / 2\n      )\n    );\n    // aiming ball\n    this.armGroup.add(\n      circle(this.snap, CENTER, PA_T / 1.5, \"transparent\", 0, colors.orange)\n    );\n\n    // draw base for pointer\n    arc(\n      this.snap,\n      CENTER,\n      R - CASE1 - POINTER_BASE_THICKNESS / 2,\n      POINTER_BASE_THICKNESS,\n      1,\n      \"#111\",\n      \"#333\",\n      90 - POINTER_BASE_ARC / 2,\n      90 + POINTER_BASE_ARC / 2,\n      true\n    );\n    // draw triangle pointer at 12 o'clock\n    const p1 = POC(CENTER, PA_TRI_R, 270);\n    const p2 = new Vector2D(p1.x - PA_TRI_W / 2, p1.y + PA_TRI_H);\n    const p3 = new Vector2D(p1.x + PA_TRI_W / 2, p1.y + PA_TRI_H);\n\n    triangle(this.snap, p1, p2, p3, \"transparent\", 0, colors.orange);\n  }\n\n  /**\n   * set the vertical adjustment +/- pixels from center\n   * @param pixels\n   */\n  setArmGroupVerticalAdjustment(pixels) {\n    this.verticalAdjustment = pixels;\n    console.log(this.verticalAdjustment);\n    this.armGroup.attr({\n      transform: `t 0 ${this.verticalAdjustment}`\n    });\n  }\n\n  /**\n   * render inner bezel with tick marks\n   */\n  renderInnerBezel() {\n    this.innerBezel = new Snap(W, H);\n    this.innerBezelFace = this.innerBezel.group();\n\n    // the actual face is circle that is rotated by not moved. The gradient is adjust\n    // to give the pitch indication\n    this.pitchCircle = circle(\n      this.snap,\n      CENTER,\n      INNER_RADIUS,\n      \"transparent\",\n      0,\n      this.pitchGradient()\n    );\n\n    // add pitch up marks at 5, 10, 15, 20 degrees, intervals of 10 are large ticks\n    [10, 20, -10, -20].forEach((v) => {\n      const W = Math.abs(v) * TICK_M;\n      const start = new Vector2D(CX - W / 2, CY - PITCH_TO_PIXELS * v);\n      const end = new Vector2D(CX + W / 2, CY - PITCH_TO_PIXELS * v);\n      this.innerBezelFace.add(line(this.innerBezel, start, end, \"white\", 3));\n      this.innerBezelFace.add(\n        centeredText(\n          this.innerBezel,\n          new Vector2D(start.x - 12, start.y),\n          Math.abs(v),\n          \"white\",\n          \"12px\"\n        )\n      );\n      this.innerBezelFace.add(\n        centeredText(\n          this.innerBezel,\n          new Vector2D(end.x + 12, end.y),\n          Math.abs(v),\n          \"white\",\n          \"12px\"\n        )\n      );\n    });\n    // small ticks\n    // add pitch up marks at 5, 10, 15, 20 degrees, intervals of 10 are large ticks\n    [5, 15, -5, -15].forEach((v) => {\n      const W = SMALL_TICK_WIDTH;\n      const start = new Vector2D(CX - W / 2, CY - PITCH_TO_PIXELS * v);\n      const end = new Vector2D(CX + W / 2, CY - PITCH_TO_PIXELS * v);\n      this.innerBezelFace.add(line(this.innerBezel, start, end, \"white\", 2));\n    });\n    // add to outer SVG\n    this.snap.add(this.innerBezel);\n  }\n\n  /**\n   * pitch gradient adjusted to represent the current pitch\n   * @returns {*}\n   */\n  pitchGradient() {\n    // displayed pitch includes the cage multiplier\n    const displayedPitch = this.pitch * this.cageMultiplier;\n    // get correct position for sky/earth separator line ( gradients are generated using stops 0-100 )\n    const pixelOffset = displayedPitch * PITCH_TO_PIXELS;\n    const normalized = pixelOffset / INNER_RADIUS / 2;\n    const y = 50 + normalized * 100;\n    return this.snap.gradient(\n      `l(0, 0, 0, 1)${COLOR_SKY}:0-${COLOR_SKY}:${\n        y - 1\n      }-white:${y}-${COLOR_EARTH}:${y + 1}-${COLOR_EARTH}:100`\n    );\n  }\n\n  /**\n   * render out bezel with tick marks\n   */\n  renderOuterBezel() {\n    this.outerBezel = new Snap(W, H);\n    this.outerBezelFace = this.outerBezel.group();\n    this.outerBezelFace.add(\n      circle(\n        this.outerBezel,\n        CENTER,\n        OUTER_RADIUS,\n        this.snap.gradient(\n          `l(0, 0, 0, 1)${COLOR_SKY}:0-${COLOR_SKY}:50-${COLOR_EARTH}:50-${COLOR_EARTH}:100`\n        ),\n        OUTER_THICKNESS,\n        \"transparent\"\n      )\n    );\n    this.snap.add(this.outerBezel);\n    // render ticks and triangles on outer bezel\n    // small ticks\n    [10, 20].forEach((a) => {\n      this.outerBezelFace.add(\n        tick(\n          this.outerBezel,\n          CENTER,\n          270 + a,\n          OUTER_RADIUS,\n          OUTER_RADIUS - OUTER_THICKNESS / 2,\n          3,\n          \"white\"\n        )\n      );\n      this.outerBezelFace.add(\n        tick(\n          this.outerBezel,\n          CENTER,\n          270 - a,\n          OUTER_RADIUS,\n          OUTER_RADIUS - OUTER_THICKNESS / 2,\n          3,\n          \"white\"\n        )\n      );\n    });\n    // big ticks\n    [30, 60, 90].forEach((a) => {\n      this.outerBezelFace.add(\n        tick(\n          this.outerBezel,\n          CENTER,\n          270 + a,\n          OUTER_RADIUS - OUTER_THICKNESS / 2,\n          OUTER_RADIUS + OUTER_THICKNESS / 2,\n          6,\n          \"white\"\n        )\n      );\n      this.outerBezelFace.add(\n        tick(\n          this.outerBezel,\n          CENTER,\n          270 - a,\n          OUTER_RADIUS - OUTER_THICKNESS / 2,\n          OUTER_RADIUS + OUTER_THICKNESS / 2,\n          6,\n          \"white\"\n        )\n      );\n    });\n    // render small dots at 45 degrees\n    this.outerBezelFace.add(\n      circle(\n        this.outerBezel,\n        POC(CENTER, OUTER_RADIUS, 270 - 45),\n        4,\n        \"transparent\",\n        0,\n        \"white\"\n      )\n    );\n    this.outerBezelFace.add(\n      circle(\n        this.outerBezel,\n        POC(CENTER, OUTER_RADIUS, 270 + 45),\n        4,\n        \"transparent\",\n        0,\n        \"white\"\n      )\n    );\n\n    // draw white triangle at 12 o'clock\n    // draw triangle pointer at 12 o'clock\n    const p1 = POC(CENTER, PA_TRI_R, 270);\n    const p2 = new Vector2D(p1.x - PA_TRI_W / 2, p1.y - PA_TRI_H);\n    const p3 = new Vector2D(p1.x + PA_TRI_W / 2, p1.y - PA_TRI_H);\n\n    this.outerBezelFace.add(\n      triangle(this.snap, p1, p2, p3, \"transparent\", 0, \"white\")\n    );\n  }\n\n  /**\n   * set the roll. Left roll is 0 -> -180, right roll is 0 -> +180\n   * The displayed pitch is adjusted to include the verticalAdjustment but this does not effect\n   * the stored pitch value for the instrument\n   * NOTE: When caged the pitch and roll and damped to zero. There is an animated multiplier that\n   * is used on the actual display roll and pitch to accomplish this.\n   * @param roll\n   */\n  setRollAndPitch(roll, pitch) {\n    this.roll = roll;\n    this.pitch = pitch;\n\n    const displayRoll = this.roll * this.cageMultiplier;\n    const displayPitch = this.pitch * this.cageMultiplier;\n\n    this.outerBezelFace.attr({\n      transform: `r${-1 * displayRoll} ${CX} ${CY}`\n    });\n    this.innerBezelFace.attr({\n      transform: `r${-1 * displayRoll} ${CX} ${CY} t ${0} ${\n        displayPitch * PITCH_TO_PIXELS\n      }`\n    });\n    this.pitchCircle.attr({\n      transform: `r${-1 * displayRoll} ${CX} ${CY}`,\n      fill: this.pitchGradient()\n    });\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth. Also add a shadow to the inner bezel to the give the correct 3D appearance\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.6)`)\n    );\n\n    // make a sin based shadow for the inner bezel\n    const MAX_ALPHA = 0.5;\n    const START = 85;\n    let str = \"\";\n    for (let i = 0; i < 90; i += 1) {\n      if (str) {\n        str += \"-\";\n      }\n      const v = START + (100 - START) * (i / 90);\n      str += `rgba(0, 0, 0, ${Math.sin(D2R(i)) * MAX_ALPHA}):${v}`;\n    }\n    circle(\n      this.snap,\n      CENTER,\n      INNER_RADIUS,\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)${str}`)\n    );\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    if (!this.caged) {\n      console.assert(airplane === this.airplane, \"not our airplane\");\n      this.setRollAndPitch(this.airplane.roll, this.airplane.pitch);\n    }\n  }\n}\n","/**\n * convert millibars to feet altitude\n * @param millibars\n * @returns {number}\n */\nexport function millibarsToFeet(millibars) {\n  // 1024 = Math.pow(2, 10)\n  // reverse Math.pow(1024, 1 / 10)\n  const feet = (1 - Math.pow(millibars / 1013.25, 0.190284)) * 145366.45;\n  return feet;\n}\n\n/**\n * convert inches of mercury to feet altitude\n * @param inchesNg\n * @returns {number}\n */\nexport function inchesHgToFeet(inchesNg) {\n  return millibarsToFeet(inchesHgToMillibars(inchesNg));\n}\n\n/**\n * millibars to inches of mercury\n * @param millibars\n * @returns {number}\n */\nexport function millibarsToInchesHg(millibars) {\n  return 0.02953 * millibars;\n}\n\n/**\n * inches of mercury to millibars\n * @param millibars\n * @returns {number}\n */\nexport function inchesHgToMillibars(inchesHg) {\n  return inchesHg / 0.02953;\n}\n\n/**\n * convert a signed degrees value to positive 0->360\n * e.g. -10 becomes 350\n *      400 becomes 40\n */\nexport function signedDegreesToPositive360(vIn) {\n  let vOut = vIn;\n  if (vOut < 0) {\n    vOut = 360 + vOut;\n  }\n  vOut = vOut % 360;\n  return vOut;\n}\n\n/**\n * standard barometer in inches of mercury\n * @type {number}\n */\nexport const STANDARD_BAROMETER = 29.92;\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport Rotatable from \"./rotatable-button\";\nimport { POC, C2D } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  circle,\n  centeredText,\n  leftText,\n  tick,\n  arc,\n  rectangle\n} from \"./graphics/primitives\";\nimport { arrowNeedle, daggerNeedle, altimeter10KNeedle } from \"./needles\";\nimport { interval } from \"./utils/time\";\nimport { lerp } from \"./utils/math\";\nimport { colors } from \"./graphics/colors\";\nimport { inchesHgToFeet, STANDARD_BAROMETER } from \"./utils/conversions\";\n\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// outer radius of all tick marks\nconst TICK1 = R - (CASE1 + CASE2 + CASE3);\n// inner radius of small ticks\nconst TICK2 = TICK1 - 15;\n// inner radius of large ticks\nconst TICK3 = TICK1 - 20;\n\n// radius of  large digits marking hundreds of feet\nconst LABEL_RADIUS = TICK3 - 20;\n\n// hundreds needle, other needles are derived from these\nconst POINTER_SMALL_RADIUS = 40;\nconst POINTER_WIDTH = 10;\nconst POINTER_ARROW = 6;\nconst POINTER_RADIUS = TICK2 - POINTER_ARROW;\n\n// thousands needle radius ratio to hundreds\nconst POINTER_1K_R = 0.5;\n// thousands needle width ratio to hundreds needs\nconst POINTER_1K_W = 2.5;\n\n// ten thousands needle radius ratio to hundreds\nconst POINTER_10K_R = 0.6;\n// ten thousands needle width ratio to hundreds needs\nconst POINTER_10K_W = 2.5;\n\n// degrees offset for 2 and 3 text\nconst KOLLSMAN_ADJUST_23 = 7;\n// angle at center of window\nconst KOLLSMAN_ANGLE = 0;\n// angle sweep\nconst KOLLSMAN_SWEEP = 270;\n// min/max pressure settings\nconst MIN_BARO = 28.0;\nconst MAX_BARO = 31.0;\n\n// outer radius of kollsman ticks\nconst K_TICK1 = TICK3 - 2;\nconst K_TICK2 = K_TICK1 - 5;\nconst K_TICK3 = K_TICK2 - 5;\n\n// inner radius of kollsman window\nconst KOLLSMAN_INNER = K_TICK1 - 55;\n\n// the kollsman window fits between then airspeeds\nconst KOLLSMAN_LOWER_SPEED = 210;\nconst KOLLSMAN_UPPER_SPEED = 290;\n\n// below 10K barber pole\nconst BARBER_OUTER = KOLLSMAN_INNER;\nconst BARBER_INNER = BARBER_OUTER - 50;\nconst BARBER_ANGLE = 90;\nconst BARBER_SWEEP = 60;\n\n// width of stripes\nconst BARBER_STRIPE_WIDTH = 8;\n\n// center of BARO button\nconst BARO_CENTER = POC(CENTER, R, 135);\n// radius of OBS\nconst BARO_R = 32;\n\nexport default class AltimeterAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    // the barber pole has zero rotation when fully visible or BARBAR_SWEEP + 1 rotation when hidden\n    this.barberPoleAngle = 0;\n    this.barberPoleVisible = true;\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    this.renderImmutable();\n    this.createNeedles();\n    this.createBaroButton();\n    this.setNeedles(this.airplane.altitude);\n    this.setBarometricPressure(this.airplane.barometer);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n\n    this.template.appendTo(this.parentElement);\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        const altitude = this.airplane.SERVICE_CEILING * Math.random();\n        const qnh = MIN_BARO + (MAX_BARO - MIN_BARO) * Math.random();\n        this.airplane.setAltitude(altitude);\n        this.airplane.setBarometer(qnh);\n      }, 5000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderDial();\n    this.renderKollsman();\n    this.renderBarberPole();\n    this.renderShadow();\n  }\n\n  /**\n   * create the button for changing the Kollsman window setting.\n   */\n  createBaroButton() {\n    this.baroButton = new Rotatable({\n      snap: this.snap,\n      radius: BARO_R,\n      text: \"BARO\",\n      textColor: colors.silver,\n      gear: 0.0025,\n      rotationCallback: this.onBaroChanged.bind(this)\n    });\n    this.baroButton.centerOn(new Vector2D(BARO_CENTER.x, BARO_CENTER.y));\n  }\n\n  /**\n   * user twisted the baro button\n   * @param delta\n   */\n  onBaroChanged(delta) {\n    const baro = Math.max(\n      MIN_BARO,\n      Math.min(MAX_BARO, this.airplane.barometer + delta)\n    );\n    this.airplane.setBarometer(baro, true);\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * render the kollsman window\n   */\n  renderKollsman() {\n    // calculations are lot easier and do not suffer from floating point errors\n    // if we work with barometric pressure * 100 in integers\n    const IMIN_BARO = (MIN_BARO * 100) >> 0;\n    const IMAX_BARO = (MAX_BARO * 100) >> 0;\n\n    // use a snap and group for all elements so it can be rotated\n    this.kSnap = new Snap(W, H);\n    this.snap.add(this.kSnap);\n    this.kGroup = this.kSnap.group();\n\n    const startAngle = KOLLSMAN_ANGLE - KOLLSMAN_SWEEP / 2;\n    for (let i = IMIN_BARO; i <= IMAX_BARO; i += 2) {\n      const normalized = (i - IMIN_BARO) / (IMAX_BARO - IMIN_BARO);\n      const angle = startAngle + normalized * KOLLSMAN_SWEEP;\n      if (i % 10 === 0) {\n        const tp = POC(CENTER, KOLLSMAN_INNER, angle);\n        const str = i.toString();\n        // displayed text is one decimal place e.g. 30.40 -? \"30.4\" 29.90 -> \"29.9\"\n        const strDisplay = `${str.substr(0, 2)}.${str.substr(2, 1)}`;\n        const text = leftText(\n          this.snap,\n          tp,\n          strDisplay,\n          \"white\",\n          \"14px\",\n          \"Verdana\"\n        );\n        text.attr({ transform: `r${angle} ${tp.x} ${tp.y}` });\n        this.kGroup.add(text);\n        this.kGroup.add(\n          tick(this.snap, CENTER, angle, K_TICK1, K_TICK3, 3, \"white\")\n        );\n      } else {\n        this.kGroup.add(\n          tick(this.snap, CENTER, angle, K_TICK1, K_TICK2, 2, \"white\")\n        );\n      }\n    }\n    // create a mask using an arc to give impression of a window\n    const KW = K_TICK1 - KOLLSMAN_INNER;\n    const AR = KOLLSMAN_INNER + KW / 2;\n    this.kMask = arc(\n      this.snap,\n      CENTER,\n      AR,\n      KW,\n      0,\n      \"white\",\n      \"white\",\n      this.altitudeInfo(KOLLSMAN_LOWER_SPEED).hundreds,\n      this.altitudeInfo(KOLLSMAN_UPPER_SPEED).hundreds,\n      true\n    );\n    this.kGroup.attr({ mask: this.kMask });\n\n    // draw outline and shadow over kollsman window\n    arc(\n      this.snap,\n      CENTER,\n      AR,\n      KW,\n      1,\n      \"#555\",\n      \"none\",\n      this.altitudeInfo(KOLLSMAN_LOWER_SPEED).hundreds,\n      this.altitudeInfo(KOLLSMAN_UPPER_SPEED).hundreds,\n      true\n    );\n\n    // draw the indicator for the current barometric settings\n    const p1 = POC(CENTER, TICK1, -1.5);\n    const p2 = POC(CENTER, TICK1, +1.5);\n    const p3 = POC(CENTER, K_TICK1, 0);\n    const d = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y} L ${p3.x} ${p3.y} Z`;\n    this.snap.path(d).attr({ fill: \"white\" });\n  }\n\n  /**\n   * set the barometric pressure to the given value, animating\n   * the kollsman window to its new position.\n   * @param inchesOfMercury\n   */\n  setBarometricPressure(inchesOfMercury) {\n    // clamped the value to the allowed range\n    const clamped = Math.max(MIN_BARO, Math.min(MAX_BARO, inchesOfMercury));\n    // get the inches range\n    const range = MAX_BARO - MIN_BARO;\n    // get a normalized value 0 -> 1 representing the new value\n    const normalized = (clamped - MIN_BARO) / range;\n    // set rotational angle (zero angle is the mid point of the baromatric range)\n    const a = KOLLSMAN_SWEEP / 2 - KOLLSMAN_SWEEP * normalized;\n    this.kGroup.attr({\n      transform: `r ${a} ${CENTER.x} ${CENTER.y}`\n    });\n    // rotate the mask in the opposite direction to keep it in place ( since it is masking\n    // a group and will be rotated with the group )\n    this.kMask.attr({\n      transform: `r ${-a} ${CENTER.x} ${CENTER.y}`\n    });\n  }\n\n  /**\n   * render the below 10K barber pole\n   */\n  renderBarberPole() {\n    const barberRadius = (BARBER_OUTER + BARBER_INNER) / 2;\n    const barberWidth = BARBER_OUTER - BARBER_INNER;\n    // background for the barber pole area ( attached to primary SVG )\n    arc(\n      this.snap,\n      CENTER,\n      barberRadius,\n      barberWidth,\n      0,\n      \"none\",\n      \"#333\",\n      BARBER_ANGLE + BARBER_SWEEP / 2,\n      BARBER_ANGLE - BARBER_SWEEP / 2,\n      false\n    );\n    // stripped rotatable area is on a separate SVG\n    this.barberSnap = new Snap(W, H);\n    // use two rectangle sides by side for the stripes. Make them into a pattern to fill the arc with.\n    const patternGroup = this.barberSnap.group();\n    const sw = BARBER_STRIPE_WIDTH;\n    const sh = 100;\n    patternGroup.add(rectangle(this.snap, 0, 0, sw, sh, \"none\", 0, \"#222\"));\n    patternGroup.add(rectangle(this.snap, sw, 0, sw, sh, \"none\", 0, \"white\"));\n\n    this.barberPoleGroup = this.barberSnap.group();\n    // the actual stripped arc\n    this.barberPole = arc(\n      this.barberSnap,\n      CENTER,\n      barberRadius,\n      barberWidth,\n      0,\n      \"none\",\n      patternGroup\n        .toPattern(0, 0, sw * 2, sh)\n        .attr({ transform: `r -45 ${sw} ${sh / 2}` }),\n      BARBER_ANGLE + BARBER_SWEEP / 2,\n      BARBER_ANGLE - BARBER_SWEEP / 2,\n      false\n    );\n    // create an identically shaped mask for the pole arc\n    const mask = arc(\n      this.barberSnap,\n      CENTER,\n      barberRadius,\n      barberWidth,\n      0,\n      \"none\",\n      \"white\",\n      BARBER_ANGLE + BARBER_SWEEP / 2,\n      BARBER_ANGLE - BARBER_SWEEP / 2,\n      false\n    );\n    this.barberPoleGroup.add(this.barberPole);\n    this.barberPoleGroup.attr({ mask });\n    // defaults to this.barberPoleAngle\n    this.barberPole.attr({\n      transform: `r ${this.barberPoleAngle} ${CENTER.x} ${CENTER.y}`\n    });\n    this.snap.add(this.barberSnap);\n  }\n\n  /**\n   * show or hide the barber pole\n   * @param visible\n   */\n  setBarberPole(visible) {\n    if (this.barberPoleVisible !== visible) {\n      const from = this.barberPoleAngle;\n      const to = visible ? 0 : BARBER_SWEEP + 1;\n      this.addLerp(\n        \"barber\",\n        lerp(from, to, 2000, (angle) => {\n          this.barberPoleAngle = angle;\n          this.barberPole.attr({\n            transform: `r ${this.barberPoleAngle} ${CENTER.x} ${CENTER.y}`\n          });\n        })\n      );\n      this.barberPoleVisible = visible;\n    }\n  }\n\n  /**\n   * render tick marks around face and numbers for 100's of feet\n   */\n  renderDial() {\n    // draw small / large ticks at 100 feet intervals. 10,000 feet are displayed.\n    for (let i = 0; i < 1000; i += 20) {\n      const hundreds = this.altitudeInfo(i).hundreds;\n      if (i % 100 === 0) {\n        // larger hundred foot tick\n        tick(this.snap, CENTER, hundreds, TICK1, TICK3, 3, \"white\");\n        // draw hundreds\n        const v0_9 = Math.floor(i / 100);\n        centeredText(\n          this.snap,\n          this.textPosition(v0_9),\n          v0_9,\n          \"white\",\n          \"40px\",\n          \"Verdana\"\n        );\n      } else {\n        // smaller ticks for 20ft intervals\n        tick(this.snap, CENTER, hundreds, TICK1, TICK2, 2, \"white\");\n      }\n    }\n  }\n\n  /**\n   * return correct position for text on dial for a give hundereds of feet.\n   * The position of the '2' and '3' are tweaked to accommodate the kollsman window\n   * @param hundredsOfFeet\n   */\n  textPosition(n) {\n    let d = C2D((360 / 10) * n);\n    switch (n) {\n      case 2:\n        d -= KOLLSMAN_ADJUST_23;\n        break;\n      case 3:\n        d += KOLLSMAN_ADJUST_23;\n        break;\n      default:\n    }\n    return POC(CENTER, LABEL_RADIUS, d);\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.2)`)\n    );\n  }\n\n  /**\n   * create the hundreds pointer\n   */\n  createNeedles() {\n    this.thousands10KNeedle = altimeter10KNeedle(\n      this.snap,\n      TICK1 - POINTER_ARROW - 1,\n      POINTER_SMALL_RADIUS * POINTER_10K_R,\n      TICK1 * 0.75,\n      POINTER_ARROW,\n      POINTER_WIDTH * POINTER_10K_W\n    );\n\n    this.thousandsNeedle = daggerNeedle(\n      this.snap,\n      POINTER_RADIUS * POINTER_1K_R,\n      POINTER_SMALL_RADIUS * POINTER_1K_R,\n      POINTER_ARROW * 2,\n      POINTER_WIDTH * POINTER_1K_W\n    );\n\n    this.hundredsNeedle = arrowNeedle(\n      this.snap,\n      POINTER_RADIUS,\n      POINTER_SMALL_RADIUS,\n      POINTER_ARROW,\n      POINTER_WIDTH\n    );\n    circle(this.snap, CENTER, 4, \"#888\", 1, \"black\");\n  }\n\n  /**\n   * update the hundreds pointer\n   * @param altitude\n   */\n  setNeedles(altitude) {\n    const info = this.altitudeInfo(altitude);\n    this.hundredsNeedle.setCenterAndAngle(CX, CY, info.hundreds);\n    this.thousandsNeedle.setCenterAndAngle(CX, CY, info.thousands);\n    this.thousands10KNeedle.setCenterAndAngle(CX, CY, info.thousands10K);\n    this.setBarberPole(info.barberPoleVisible);\n  }\n\n  /**\n   * for a given altitude returns the angles for the three pointers\n   * and a boolean to indicate if the grid pattern should be visible\n   * @param altitude\n   * @returns {{hundreds: number, thousands: number, thousands10K: number, stripes: boolean}}\n   */\n  altitudeInfo(altitude) {\n    //console.assert(altitude >= 0 && altitude <= this.airplane.SERVICE_CEILING, 'altitude out of range');\n\n    // small needle is altitude % 1000\n    const hundreds = C2D((altitude / 1000) * 360);\n    const thousands = C2D((altitude / 10000) * 360);\n    const thousands10K = C2D((altitude / 100000) * 360);\n    const barberPoleVisible = altitude <= 10000;\n\n    return {\n      hundreds,\n      thousands,\n      thousands10K,\n      barberPoleVisible\n    };\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    // get the delta between 29.92 ( standard pressure ) and the airplanes baro setting\n    const baroDelta = STANDARD_BAROMETER - this.airplane.barometer;\n    const altitude = inchesHgToFeet(airplane.staticPressure + baroDelta);\n    this.setNeedles(altitude);\n    this.setBarometricPressure(this.airplane.barometer);\n  }\n}\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport { POC, D2C } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  arc,\n  tick,\n  circle,\n  airplaneNoseView,\n  centeredText,\n  leftText\n} from \"./graphics/primitives\";\nimport { interval } from \"./utils/time\";\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// thickness of outer bezel\nconst OUTER_BEZEL = 50;\n\n// inner suface radius\nconst INNER_RADIUS = R - (CASE1 + CASE2 + CASE3 + OUTER_BEZEL);\n\n// inclinomenter metrics\nconst INC_THICKNESS = 55;\nconst INC_RADIUS = R * 2;\nconst INC_CENTER = new Vector2D(CX, CY - INC_RADIUS + INC_THICKNESS * 1.5);\n// number of degrees either side of 90 for the inclinometer arc\nconst INC_ANGLE = 16;\n// angle offset for ticks on inclinometer\nconst INC_TICK_ANGLE = 3.5;\n\n// offset angle of 2 minute turn ticks\nconst OFFSET_2_MINUTES = 20;\n\n// standard roll rate and instrument limit in degrees per second\nconst ROLL_RATE = 3;\nconst MAX_ROLL_RATE = 6;\n\n// max number of degrees of yaw ( negative is left yaw, positive is right yaw )\nconst MAX_YAW = 20;\n\nexport default class TurnCoordinatorAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    this.renderImmutable();\n    this.template.appendTo(this.parentElement);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        this.airplane.setRollRate(\n          -MAX_ROLL_RATE + MAX_ROLL_RATE * 2 * Math.random()\n        );\n        this.airplane.setYaw(-MAX_YAW + MAX_YAW * 2 * Math.random());\n      }, 5000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderInclinometer();\n    this.renderTicksAndText();\n    this.renderShadow();\n    this.renderAirplane();\n    this.setRollRate(this.airplane.rollRate);\n    this.setYaw(this.airplane.yaw);\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      \"#222\"\n    );\n  }\n\n  /**\n   * render ticks marks and associated text ( \"L\" \"R\" )\n   */\n  renderTicksAndText() {\n    const BEZEL_R = R - (CASE1 + CASE2 + CASE3 + OUTER_BEZEL / 2);\n    // inner bezel containing ticks marks\n    circle(this.snap, CENTER, BEZEL_R, \"#333\", OUTER_BEZEL, \"transparent\");\n\n    [0, OFFSET_2_MINUTES, 180, 180 - OFFSET_2_MINUTES].forEach((angle) => {\n      tick(\n        this.snap,\n        CENTER,\n        angle,\n        BEZEL_R + OUTER_BEZEL / 8,\n        BEZEL_R - OUTER_BEZEL / 2,\n        10,\n        \"white\"\n      );\n    });\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R + 10, 270),\n      \"D.C.\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R - 8, 270),\n      \"ELECTRIC\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R - 4, 180 - OFFSET_2_MINUTES * 1.7),\n      \"L\",\n      \"white\",\n      \"32px\",\n      \"Verdana\"\n    );\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R - 4, OFFSET_2_MINUTES * 1.7),\n      \"R\",\n      \"white\",\n      \"30px\",\n      \"Verdana\"\n    );\n\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R - 14, 90),\n      \"NO PITCH\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n    centeredText(\n      this.snap,\n      POC(CENTER, BEZEL_R + 4, 90),\n      \"INFORMATION\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n\n    centeredText(\n      this.snap,\n      POC(CENTER, 35, 90),\n      \"2 MIN\",\n      \"white\",\n      \"20px\",\n      \"Verdana\"\n    );\n  }\n\n  /**\n   * return the turn rate indicator which is an airplane symbol\n   */\n  renderAirplane() {\n    this.airplaneGroup = airplaneNoseView(\n      this.snap,\n      CENTER,\n      INNER_RADIUS * 2 - 8,\n      \"white\"\n    );\n  }\n\n  /**\n   * render the inclinometer and keep a reference to the ball\n   */\n  renderInclinometer() {\n    const inner = INC_RADIUS - INC_THICKNESS / 2;\n    const middle = INC_RADIUS;\n    const outer = INC_RADIUS + INC_THICKNESS / 2;\n    arc(\n      this.snap,\n      INC_CENTER,\n      INC_RADIUS,\n      INC_THICKNESS,\n      0,\n      \"transparent\",\n      this.snap.gradient(\n        `R(${INC_CENTER.x}, ${INC_CENTER.y}, ${outer})black:0-#aaa:${\n          (inner / outer) * 100\n        }-#fff:${(middle / outer) * 100}-#aaa:100`\n      ),\n      90 - INC_ANGLE,\n      90 + INC_ANGLE,\n      true\n    );\n    // render the ball\n    this.renderBall();\n    // render the strokes that indicate the coordinated range\n    tick(\n      this.snap,\n      INC_CENTER,\n      90 - INC_TICK_ANGLE,\n      INC_RADIUS - INC_THICKNESS / 2,\n      INC_RADIUS + INC_THICKNESS / 2,\n      5,\n      this.snap.gradient(`l(0.5, 0, 0.5, 1)#000:0-#888:50-#000:100`)\n    );\n    tick(\n      this.snap,\n      INC_CENTER,\n      90 + INC_TICK_ANGLE,\n      INC_RADIUS - INC_THICKNESS / 2,\n      INC_RADIUS + INC_THICKNESS / 2,\n      5,\n      this.snap.gradient(`l(0.5, 0, 0.5, 1)#000:0-#888:50-#000:100`)\n    );\n  }\n\n  /**\n   * The face of this instrument has two levels so two shadows to give the appearance of depth\n   */\n  renderShadow() {\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.3)`)\n    );\n\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 + OUTER_BEZEL),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.3)`)\n    );\n  }\n\n  /**\n   * set the roll rate in +/- degrees per second\n   * @param rollRate\n   */\n  setRollRate(rollRate) {\n    // clamp between -MAX_ROLL_RATE and + MAX_ROLL_RATE\n    const clampedRollRate = Math.max(\n      -MAX_ROLL_RATE,\n      Math.min(MAX_ROLL_RATE, rollRate)\n    );\n    // normalize 0..1\n    const normalized = clampedRollRate / MAX_ROLL_RATE;\n    const A = OFFSET_2_MINUTES * 2 * normalized;\n    this.airplaneGroup.attr({ transform: `r${A} ${CENTER.x} ${CENTER.y}` });\n  }\n\n  /**\n   * render ball component of inclinometer. Set this.ball to the SVG element for later animation\n   */\n  renderBall() {\n    // calculate point on the inclinometer circumference\n    const center = POC(INC_CENTER, INC_RADIUS, 90);\n    // create circle\n    this.ball = circle(\n      this.snap,\n      center,\n      INC_THICKNESS / 2 - 4,\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.35, 0.35, 0.5)#aaa:0-black:100`)\n    );\n    // scale to give it the more typical oval appearance\n    this.ball.attr({\n      transform: \"s0.8,1\"\n    });\n  }\n\n  /**\n   * set yaw and update inclinometer\n   * @param yaw\n   */\n  setYaw(yaw) {\n    // clamp between -MAX_YAW and MAX_YAW\n    const clampedYaw = Math.max(-MAX_YAW, Math.min(MAX_YAW, yaw));\n    // normalize 0..1\n    const normalized = clampedYaw / MAX_YAW;\n    const A = INC_ANGLE * normalized;\n    const center = POC(INC_CENTER, INC_RADIUS, 90 + A);\n    this.ball.attr({\n      cx: center.x,\n      cy: center.y\n    });\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    this.setRollRate(this.airplane.rollRate);\n    this.setYaw(this.airplane.yaw);\n  }\n}\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport { POC, D2C, C2D } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  centeredText,\n  tick,\n  circle,\n  airplaneSilhouette\n} from \"./graphics/primitives\";\nimport { interval } from \"./utils/time\";\nimport Rotatable from \"./rotatable-button\";\nimport { colors } from \"./graphics/colors\";\nimport { signedDegreesToPositive360 } from \"./utils/conversions\";\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// size of airplane pointer\nconst AW = 180;\nconst AH = 180;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// radius of heading text\nconst TEXT_RADIUS = R - (CASE1 + CASE2 + CASE3 + 20);\n// radius of all tick marks\nconst TICK = TEXT_RADIUS - 30;\n// length of long short tick marks\nconst LONG_TICK = 22;\nconst SHORT_TICK = 14;\n\n// center of SET\nconst SET_CENTER = POC(CENTER, R, 135);\n// radius of OBS\nconst SET_R = 32;\n\n// center of HDG\nconst HDG_CENTER = POC(CENTER, R, 45);\n// radius of OBS\nconst HDG_R = 32;\n\nconst HEADING_BUG_OUTER = R - (CASE1 + CASE2 + CASE3);\nconst HEADING_BUG_INNER = TICK + 6;\nconst HEADING_BUG_MID = (HEADING_BUG_INNER + HEADING_BUG_OUTER) / 2;\n\nexport default class HeadingIndicatorAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H,\n          // this is the angular offset the user sets from the airplanes magnetic heading.\n          // Changing it corresponds to twisting the SET button\n          magneticOffset: 0,\n          // current setting for heading bug\n          headingBugHeading: 0\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n\n    this.renderImmutable();\n    this.setHeading(this.airplane.heading);\n    this.setHeadingBug(this.headingBugHeading);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n\n    this.template.appendTo(this.parentElement);\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        this.airplane.setHeading(360 * Math.random());\n      }, 5000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.snap = new Snap(this.svg.el);\n    this.renderCase();\n    this.renderHeadings();\n    this.renderHeadingBug();\n    this.renderPointer();\n    this.renderShadow();\n    this.createButtons();\n  }\n\n  /**\n   * create SET and HDG buttons\n   */\n  createButtons() {\n    this.setButton = new Rotatable({\n      snap: this.snap,\n      radius: SET_R,\n      text: \"SET\",\n      textColor: colors.silver,\n      gear: 0.25,\n      rotationCallback: this.onSetChanged.bind(this)\n    });\n    this.setButton.centerOn(new Vector2D(SET_CENTER.x, SET_CENTER.y));\n\n    this.hdgButton = new Rotatable({\n      snap: this.snap,\n      radius: HDG_R,\n      text: \"HDG\",\n      textColor: colors.red,\n      gear: 0.25,\n      rotationCallback: this.onHdgChanged.bind(this)\n    });\n    this.hdgButton.centerOn(new Vector2D(HDG_CENTER.x, HDG_CENTER.y));\n  }\n\n  /**\n   * set the offset from the magnetic heading supplied by our aircraft model\n   * @param delta\n   */\n  onSetChanged(delta) {\n    this.magneticOffset = signedDegreesToPositive360(\n      this.magneticOffset + delta\n    );\n    this.setHeading(this.airplane.heading + this.magneticOffset);\n    this.setHeadingBug(this.headingBugHeading);\n  }\n\n  /**\n   * repond to twists of the heading bug button\n   * @param delta\n   */\n  onHdgChanged(delta) {\n    this.headingBugHeading = signedDegreesToPositive360(\n      this.headingBugHeading + delta\n    );\n    this.setHeadingBug(this.headingBugHeading);\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      colors.black\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      colors.black\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * render the heading bug at zero degrees, it is transformed into the current setting\n   */\n  renderHeadingBug() {\n    this.headingBugGroup = this.faceSnap.group();\n    this.headingBug1 = tick(\n      this.faceSnap,\n      CENTER,\n      D2C(-3),\n      HEADING_BUG_OUTER,\n      HEADING_BUG_INNER,\n      9,\n      colors.red\n    );\n    this.headingBug2 = tick(\n      this.faceSnap,\n      CENTER,\n      D2C(3),\n      HEADING_BUG_OUTER,\n      HEADING_BUG_INNER,\n      9,\n      colors.red\n    );\n    this.headingBugGroup.add(this.headingBug1, this.headingBug2);\n  }\n\n  /**\n   * render the text and ticks marks for headings\n   */\n  renderHeadings() {\n    this.faceSnap = new Snap(W, H);\n    this.face = this.faceSnap.group();\n\n    for (let i = 0; i < 360; i += 5) {\n      const a = D2C(i);\n      const longTick = a % 10 === 0;\n      const text = a % 30 === 0;\n\n      const outerTick = TICK + (longTick ? LONG_TICK : SHORT_TICK) / 2;\n      const innerTick = TICK - (longTick ? LONG_TICK : SHORT_TICK) / 2;\n      const thickness = longTick ? 3 : 2;\n      this.face.add(\n        tick(this.faceSnap, CENTER, a, outerTick, innerTick, thickness, \"white\")\n      );\n\n      if (text) {\n        let str;\n        switch (i) {\n          case 0:\n            str = \"N\";\n            break;\n          case 90:\n            str = \"E\";\n            break;\n          case 180:\n            str = \"S\";\n            break;\n          case 270:\n            str = \"W\";\n            break;\n          default:\n            str = i / 10;\n        }\n\n        const textCenter = POC(CENTER, TEXT_RADIUS, a);\n        const t = centeredText(\n          this.faceSnap,\n          textCenter,\n          str,\n          \"white\",\n          \"32px\",\n          \"Verdana\"\n        );\n        t.attr({ transform: `r${i} ${textCenter.x} ${textCenter.y}` });\n        this.face.add(t);\n      }\n    }\n    this.snap.add(this.faceSnap);\n  }\n\n  /**\n   * update to the given heading\n   * @param heading\n   */\n  setHeading(heading) {\n    this.face.attr({\n      transform: `r  ${-1 * heading} ${CENTER.x} ${CENTER.y}`\n    });\n  }\n\n  /**\n   * update the heading bug, which is always the airplanes heading + the heading bug heading\n   * @param heading\n   */\n  setHeadingBug() {\n    const h = this.airplane.heading + this.magneticOffset;\n    this.headingBugGroup.attr({\n      transform: `r  ${-1 * (h + this.headingBugHeading)} ${CENTER.x} ${\n        CENTER.y\n      }`\n    });\n  }\n\n  renderPointer() {\n    this.snap.add(\n      airplaneSilhouette(CX, CY, AW, AH, 4, \"orange\", \"transparent\")\n    );\n    tick(this.snap, CENTER, 0, TICK, AH / 2, 3, \"orange\");\n    tick(this.snap, CENTER, 90, TICK, AH / 2, 3, \"orange\");\n    tick(this.snap, CENTER, 180, TICK, AH / 2, 3, \"orange\");\n    tick(this.snap, CENTER, 270, TICK, AH / 2, 3, \"orange\");\n\n    circle(this.snap, CENTER, 4, \"#888\", 1, colors.black);\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.6)`)\n    );\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    this.setHeading(this.airplane.heading + this.magneticOffset);\n    this.setHeadingBug(this.headingBugHeading);\n  }\n}\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport { POC, C2D } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport {\n  circle,\n  centeredText,\n  leftText,\n  tick,\n  arc\n} from \"./graphics/primitives\";\nimport { steppedNeedle } from \"./needles\";\nimport { interval } from \"./utils/time\";\n\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// outer radius of all tick marks\nconst TICK1 = R - (CASE1 + CASE2 + CASE3);\n// inner radius of small ticks\nconst TICK2 = TICK1 - 20;\n// inner radius of large ticks\nconst TICK3 = TICK1 - 30;\n\n// radius of  large digits marking hundreds of feet\nconst LABEL_RADIUS = TICK3 - 25;\n\n// max positive and negative rates displayed\nconst MIN_MAX_SPEED = 2000;\n\n// only large ticks above this level\nconst HUNDRED_LIMIT = 1000;\n\n// angle of zero speed\nconst ZERO = 180;\n\n// sweep required for entire range\nconst SWEEP = 170;\n\n// hundreds needle, other needles are derived from these\nconst POINTER_SMALL_RADIUS = 40;\nconst POINTER_WIDTH = 14;\nconst POINTER_ARROW = 6;\nconst POINTER_RADIUS = TICK2 - POINTER_ARROW;\nconst POINTER_MID = POINTER_RADIUS * 0.8;\n\n// radius and offset angle for \"UP\" and \"DN\"\nconst UP_DOWN_RADIUS = LABEL_RADIUS - 25;\nconst UP_DOWN_ANGLE = 15;\n\n// position of left aligned rate text\nconst RATE_TEXT = CX + 10;\n\nexport default class VerticalSpeedAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    this.renderImmutable();\n    this.createNeedles();\n    this.setNeedle(this.airplane.altitudeRate);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n\n    this.template.appendTo(this.parentElement);\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    this.addLerp(\n      \"demo\",\n      interval(() => {\n        this.airplane.setAltitudeRate(-1500 + 3000 * Math.random());\n      }, 5000)\n    );\n  }\n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderDial();\n    this.renderText();\n    this.renderShadow();\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * convert positive or negative vertical speed to an angle.\n   * @param verticalSpeed\n   */\n  verticalSpeedToAngle(verticalSpeed) {\n    // clamp to limits\n    const v = Math.max(-MIN_MAX_SPEED, Math.min(MIN_MAX_SPEED, verticalSpeed));\n    if (v >= 0) {\n      return ZERO + (v / MIN_MAX_SPEED) * SWEEP;\n    }\n    return ZERO - (-v / MIN_MAX_SPEED) * SWEEP;\n  }\n\n  // render up/down vertical speed in 100\n  renderText() {\n    let position = POC(CENTER, UP_DOWN_RADIUS, ZERO + UP_DOWN_ANGLE);\n    centeredText(this.snap, position, \"UP\", \"white\", \"16px\", \"Verdana\");\n    position = POC(CENTER, UP_DOWN_RADIUS, ZERO - UP_DOWN_ANGLE);\n    centeredText(this.snap, position, \"DN\", \"white\", \"16px\", \"Verdana\");\n\n    leftText(\n      this.snap,\n      new Vector2D(RATE_TEXT, CY - 50),\n      \"VERTICAL\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n    leftText(\n      this.snap,\n      new Vector2D(RATE_TEXT, CY - 30),\n      \"SPEED\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n    leftText(\n      this.snap,\n      new Vector2D(RATE_TEXT, CY + 30),\n      \"100 FEET\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n    leftText(\n      this.snap,\n      new Vector2D(RATE_TEXT, CY + 50),\n      \"PER MINUTE\",\n      \"white\",\n      \"16px\",\n      \"Verdana\"\n    );\n  }\n\n  /**\n   * render tick marks around face and numbers for 100's of feet\n   */\n  renderDial() {\n    for (let i = 0; i <= MIN_MAX_SPEED; i += 100) {\n      // draw large ticks at 500ft intervals\n      if (i % 500 === 0) {\n        tick(\n          this.snap,\n          CENTER,\n          this.verticalSpeedToAngle(i),\n          TICK1,\n          TICK3,\n          3,\n          \"white\"\n        );\n        if (i > 0) {\n          tick(\n            this.snap,\n            CENTER,\n            this.verticalSpeedToAngle(-i),\n            TICK1,\n            TICK3,\n            3,\n            \"white\"\n          );\n        }\n        // draw 500 intervals in 100's of feet, except for the last value which is centered between the extremes\n        let position;\n        if (i < MIN_MAX_SPEED) {\n          if (i === 0) {\n            position = POC(CENTER, LABEL_RADIUS, ZERO);\n            centeredText(this.snap, position, \"0\", \"white\", \"30px\", \"Verdana\");\n          } else {\n            position = POC(CENTER, LABEL_RADIUS, this.verticalSpeedToAngle(i));\n            centeredText(\n              this.snap,\n              position,\n              i / 100,\n              \"white\",\n              \"30px\",\n              \"Verdana\"\n            );\n            position = POC(CENTER, LABEL_RADIUS, this.verticalSpeedToAngle(-i));\n            centeredText(\n              this.snap,\n              position,\n              i / 100,\n              \"white\",\n              \"30px\",\n              \"Verdana\"\n            );\n          }\n        } else {\n          position = POC(CENTER, LABEL_RADIUS, ZERO + 180);\n          centeredText(\n            this.snap,\n            position,\n            i / 100,\n            \"white\",\n            \"30px\",\n            \"Verdana\"\n          );\n        }\n      } else {\n        if (i < HUNDRED_LIMIT) {\n          tick(\n            this.snap,\n            CENTER,\n            this.verticalSpeedToAngle(i),\n            TICK1,\n            TICK2,\n            2,\n            \"white\"\n          );\n          tick(\n            this.snap,\n            CENTER,\n            this.verticalSpeedToAngle(-i),\n            TICK1,\n            TICK2,\n            2,\n            \"white\"\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.6)`)\n    );\n  }\n\n  /**\n   * create the needle and center nut\n   */\n  createNeedles() {\n    this.needle = steppedNeedle(\n      this.snap,\n      POINTER_RADIUS,\n      POINTER_SMALL_RADIUS,\n      POINTER_MID,\n      POINTER_ARROW,\n      POINTER_WIDTH\n    );\n    circle(this.snap, CENTER, 4, \"#888\", 1, \"black\");\n  }\n\n  /**\n   * update the hundreds pointer\n   * @param airspeed\n   */\n  setNeedle(verticalSpeed) {\n    this.needle.setCenterAndAngle(\n      CX,\n      CY,\n      this.verticalSpeedToAngle(verticalSpeed)\n    );\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    this.setNeedle(this.airplane.altitudeRate);\n  }\n}\n","import Disposable from \"./disposable\";\nimport { lerp } from \"./utils/math\";\nimport { STANDARD_BAROMETER } from \"./utils/conversions\";\n\nexport default class Airplane extends Disposable {\n  constructor() {\n    super();\n    // default configuration for an airplane, Similar to a Cessna 172\n    Object.assign(this, {\n      // V speeds KIAS\n      VS0: 40,\n      VS1: 50,\n      VR: 55,\n      VLOF: 60,\n      VFE: 85,\n      VA: 95,\n      VNO: 130,\n      VNE: 157,\n\n      // maximum airspeed that is displayed on the analog airspeed gauge\n      MAX_DISPLAYED_SPEED: 200,\n\n      // maximum altitude in ft\n      SERVICE_CEILING: 17000,\n\n      // speed in KIAS\n      airspeed: 0,\n      // rate of change of airspeed in knots per second, + or -\n      airspeedRate: 0,\n      // altitude in feet\n      altitude: 0,\n      // vertical speed in feet per minute\n      altitudeRate: 0,\n      // static pressure as measured at the static port\n      staticPressure: STANDARD_BAROMETER,\n      // barometric pressure at sea level (QNH) ( inches of mercury )\n      barometer: STANDARD_BAROMETER,\n      // magnetic heading\n      heading: 0,\n      // rate of heading change in degrees per seconds, + or -\n      headingRate: 0,\n      // pitch, degrees\n      pitch: 0,\n      // rate of pitch change in degrees per seconds, + or -\n      pitchRate: 0,\n      // roll, degrees\n      roll: 0,\n      // rate of roll change in degrees per seconds, + or -\n      rollRate: 0,\n      // yaw degrees\n      yaw: 0,\n      // rate of yaw change in degrees per seconds, + or -\n      yawRate: 0,\n\n      // idle speed of engine\n      idle: 1000,\n      // max RPM\n      redLine: 2700,\n      // lower end of green range\n      greenMin: 2000,\n      // current RPM\n      rpm: 0,\n\n      // change listeners\n      listeners: [],\n\n      // lerps for different properties\n      lerps: {}\n    });\n\n    // cancel all lerps when disposed\n    this.addDisposable(() => {\n      Object.values(this.lerps).forEach(f => f());\n      this.lerps = {};\n    });\n  }\n\n  /**\n   * set the airspeed\n   * @param kias\n   */\n  setAirspeed(kias) {\n    if (kias !== this.airspeed) {\n      this.addLerp(\n        \"airspeed\",\n        lerp(this.airspeed, kias, 1000, speed => {\n          this.airspeed = speed;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the rpm\n   * @param rpm\n   */\n  setRPM(rpm) {\n    if (rpm !== this.rpm) {\n      this.addLerp(\n        \"rpm\",\n        lerp(this.rpm, rpm, 1000, rpm => {\n          this.rpm = rpm;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the altitude\n   * @param feet\n   */\n  setAltitude(feet) {\n    if (feet !== this.altitude) {\n      this.addLerp(\n        \"altitude\",\n        lerp(this.altitude, feet, 4000, altitude => {\n          this.altitude = altitude;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the altitude\n   * @param verticalSpeed\n   */\n  setAltitudeRate(verticalSpeed) {\n    if (verticalSpeed !== this.altitudeRate) {\n      this.addLerp(\n        \"altitude-rate\",\n        lerp(this.altitudeRate, verticalSpeed, 4000, rate => {\n          this.altitudeRate = rate;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the barometer setting ( QNH ). Can be animated or immediate\n   * @param inchesOfMercury\n   */\n  setBarometer(inchesOfMercury, immediate = false) {\n    if (immediate) {\n      this.barometer = inchesOfMercury;\n      this.callListeners();\n    } else {\n      if (inchesOfMercury !== this.barometer) {\n        this.addLerp(\n          \"barometer\",\n          lerp(this.barometer, inchesOfMercury, 4000, qnh => {\n            this.barometer = qnh;\n            this.callListeners();\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * set the altitude\n   * @param feet\n   */\n  setHeading(magneticHeading) {\n    if (magneticHeading !== this.heading) {\n      this.addLerp(\n        \"heading\",\n        lerp(this.heading, magneticHeading, 3000, heading => {\n          this.heading = heading;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the roll\n   * @param degrees\n   */\n  setRoll(degrees) {\n    if (degrees !== this.roll) {\n      this.addLerp(\n        \"roll\",\n        lerp(this.roll, degrees, 3000, r => {\n          this.roll = r;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the roll rate\n   * @param degreesPerSecond\n   */\n  setRollRate(degreesPerSecond) {\n    if (degreesPerSecond !== this.rollRate) {\n      this.addLerp(\n        \"roll-rate\",\n        lerp(this.rollRate, degreesPerSecond, 3000, r => {\n          this.rollRate = r;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the pitch\n   * @param degrees\n   */\n  setPitch(degrees) {\n    if (degrees !== this.pitch) {\n      this.addLerp(\n        \"pitch\",\n        lerp(this.pitch, degrees, 3000, p => {\n          this.pitch = p;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the degrees left ( negative ) or right ( positive ) of neutral ( 0 )\n   * @param degrees\n   */\n  setYaw(degrees) {\n    if (degrees !== this.yaw) {\n      this.addLerp(\n        \"yaw\",\n        lerp(this.yaw, degrees, 3000, p => {\n          this.yaw = p;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * add a lerp and cancel an existing one with the same key\n   * @param key\n   */\n  addLerp(key, callback) {\n    this.cancelLerp(key);\n    this.lerps[key] = callback;\n  }\n\n  /**\n   * cancel any existing lerp\n   */\n  cancelLerp(key) {\n    if (this.lerps[key]) {\n      this.lerps[key]();\n      delete this.lerps[key];\n    }\n  }\n}\n","import TachometerAnalog from \"./tachometer_analog\";\nimport AirspeedAnalog from \"./airspeed_analog\";\nimport AttitudeIndicatorAnalog from \"./attitude_indicator_analog\";\nimport AltimeterAnalog from \"./altimeter_analog\";\nimport TurnCoordinatorAnalog from \"./turn_coordinator_analog\";\nimport HeadingIndicatorAnalog from \"./heading_indicator_analog\";\nimport VerticalSpeedAnalog from \"./vertical_speed_analog\";\nimport Airplane from \"./airplane\";\n\nimport \"./styles.css\";\n\nconst parentElement = document.body;\nconst airplane = new Airplane();\n\n// Airspeed Indicator\nconst airspeedSlider = document.getElementById(\"airspeedSlider\");\nconst airspeedInstrumentContainer = document.getElementById(\"airspeedInstrument\");\nconst airspeedInstrument = new AirspeedAnalog({\n  airplane,\n  parentElement: airspeedInstrumentContainer,\n});\n\nairspeedSlider.addEventListener(\"input\", () => {\n  const newAirspeed = parseFloat(airspeedSlider.value);\n  sliderValue.textContent = newAirspeed; // Update the output element\n  airspeedInstrument.setNeedle(newAirspeed);\n});\n\n// Attitude Indicator\nconst rollSlider = document.getElementById(\"rollSlider\");\nconst pitchSlider = document.getElementById(\"pitchSlider\");\nconst attitudeIndicatorContainer = document.getElementById(\"attitudeInstrument\");\nconst attitudeIndicator = new AttitudeIndicatorAnalog({\n  airplane,\n  parentElement: attitudeIndicatorContainer,\n});\n\nrollSlider.addEventListener(\"input\", () => {\n  const newRoll = parseFloat(rollSlider.value);\n  attitudeIndicator.setRollAndPitch(newRoll, attitudeIndicator.pitch);\n});\n\npitchSlider.addEventListener(\"input\", () => {\n  const newPitch = parseFloat(pitchSlider.value);\n  attitudeIndicator.setRollAndPitch(attitudeIndicator.roll, newPitch);\n});\n\n// Altimeter\nconst altimeterInstrumentContainer = document.getElementById(\"altimeterInstrument\");\nconst altimeterInstrument = new AltimeterAnalog({\n  airplane,\n  parentElement: altimeterInstrumentContainer,\n});\n\nconst altitudeSlider = document.getElementById(\"altitudeSlider\");\nconst altitudeValue = document.getElementById(\"altitudeValue\");\n\naltitudeSlider.addEventListener(\"input\", () => {\n  const newAltitude = parseFloat(altitudeSlider.value);\n  altitudeValue.textContent = newAltitude; // Update the altitude display\n  altimeterInstrument.setNeedles(newAltitude);\n});\n\n// Heading Indicator\nconst headingSlider = document.getElementById(\"headingSlider\");\nconst headingInstrumentContainer = document.getElementById(\"headingInstrument\");\n\nconst headingInstrument = new HeadingIndicatorAnalog({\n  airplane, // Assuming you have an 'airplane' object\n  parentElement: headingInstrumentContainer,\n});\n\nheadingSlider.addEventListener(\"input\", () => {\n  const newHeading = parseFloat(headingSlider.value);\n  headingValue.textContent = newHeading; // Update the output element\n  headingInstrument.setHeading(newHeading);\n});\n\n// Optionally, set the initial heading value based on the slider's initial value\nconst initialHeading = parseFloat(headingSlider.value);\nheadingInstrument.setHeading(initialHeading);\n\n// Vertical Speed Indicator\nconst verticalSpeedSlider = document.getElementById(\"verticalSpeedSlider\");\nconst verticalSpeedInstrumentContainer = document.getElementById(\"verticalSpeedInstrument\");\n\nconst verticalSpeedInstrument = new VerticalSpeedAnalog({\n  airplane,\n  parentElement: verticalSpeedInstrumentContainer,\n});\n\nverticalSpeedSlider.addEventListener(\"input\", () => {\n  const newVerticalSpeed = parseFloat(verticalSpeedSlider.value);\n  verticalSpeedInstrument.setNeedle(newVerticalSpeed);\n});\n\n// Optionally, set the initial vertical speed value based on the slider's initial value\nconst initialVerticalSpeed = parseFloat(verticalSpeedSlider.value);\nverticalSpeedInstrument.setNeedle(initialVerticalSpeed);\n\n\n// Turn Coordinator\nconst rollRateSlider = document.getElementById(\"rollRateSlider\");\nconst yawSlider = document.getElementById(\"yawSlider\");\nconst rollRateValue = document.getElementById(\"rollRateValue\");\nconst yawValue = document.getElementById(\"yawValue\");\nconst turnCoordinatorInstrumentContainer = document.getElementById(\"turnCoordinatorInstrument\");\n\nconst turnCoordinatorInstrument = new TurnCoordinatorAnalog({\n  airplane,\n  parentElement: turnCoordinatorInstrumentContainer,\n});\n\nrollRateSlider.addEventListener(\"input\", () => {\n  const newRollRate = parseFloat(rollRateSlider.value);\n  rollRateValue.textContent = newRollRate; // Update the output element\n  turnCoordinatorInstrument.setRollRate(newRollRate);\n});\n\nyawSlider.addEventListener(\"input\", () => {\n  const newYaw = parseFloat(yawSlider.value);\n  yawValue.textContent = newYaw; // Update the output element\n  turnCoordinatorInstrument.setYaw(newYaw);\n});\n\n// Optionally, set the initial roll rate and yaw values based on the sliders' initial values\nconst initialRollRate = parseFloat(rollRateSlider.value);\nconst initialYaw = parseFloat(yawSlider.value);\nturnCoordinatorInstrument.setRollRate(initialRollRate);\nturnCoordinatorInstrument.setYaw(initialYaw);\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}