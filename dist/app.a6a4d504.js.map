{"version":3,"sources":["src/disposable.js","src/utils/math.js","src/utils/conversions.js","src/airplane.js","webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 001accb81df17d8ee229","webpack:///javascripts/dom.js","src/animated.js","src/instrument.js","src/geometry/vector2d.js","src/geometry/angle.js","src/graphics/primitives.js","src/needles.js","src/utils/time.js","node_modules/eve/eve.js","node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","src/airspeed_analog.js","src/app.js"],"names":["Disposable","_classCallCheck","disposeFunctions","listeners","_createClass","key","value","addDisposable","func","console","assert","indexOf","push","removeDisposable","filter","f","dispose","disposed","forEach","length","addListener","removeListener","removeAllListeners","callListeners","_this","l","exports","default","round","decimals","Number","Math","nonLinearScale","inputValue","midValue","maxValue","returnValue","M","C","log","pow","B","exp","A","isNaN","lerp","from","to","time","callback","ease","arguments","undefined","isFinite","startTime","Date","now","endTime","requestId","timer","delta","normalized","sin","PI","requestAnimationFrame","cancelAnimationFrame","AnimatedValue","options","Object","assign","lowLimit","MAX_VALUE","hiLimit","max","min","currentValue","setValue","cancelLerp","v","setValueImmediate","millibarsToFeet","millibars","feet","inchesHgToFeet","inchesNg","inchesHgToMillibars","millibarsToInchesHg","inchesHg","signedDegreesToPositive360","vIn","vOut","STANDARD_BAROMETER","_disposable","_interopRequireDefault","require","_math","_conversions","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","instance","Constructor","TypeError","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","res","call","_inherits","subClass","superClass","create","_setPrototypeOf","o","p","setPrototypeOf","bind","__proto__","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf","result","NewTarget","Reflect","construct","apply","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","sham","Proxy","Boolean","valueOf","e","getPrototypeOf","Airplane","_Disposable","_super","VS0","VS1","VR","VLOF","VFE","VA","VNO","VNE","MAX_DISPLAYED_SPEED","SERVICE_CEILING","airspeed","airspeedRate","altitude","altitudeRate","staticPressure","barometer","heading","headingRate","pitch","pitchRate","roll","rollRate","yaw","yawRate","idle","redLine","greenMin","rpm","lerps","values","setAirspeed","kias","_this2","addLerp","speed","setRPM","_this3","setAltitude","_this4","setAltitudeRate","verticalSpeed","_this5","rate","setBarometer","inchesOfMercury","_this6","immediate","qnh","setHeading","magneticHeading","_this7","setRoll","degrees","_this8","r","setRollRate","degreesPerSecond","_this9","setPitch","_this10","setYaw","_this11","Animated","cancelAllLerps","_animated","Instrument","_Animated","config","width","height","airplane","listener","demoStart","demoStop","Vector2D","x","y","clone","toString","concat","sub","other","add","_vector2d","C2D","angle","D2C","D2R","d","R2D","POC","center","radius","cos","angleFrom","position","a","atan2","angularDelta","firstAngle","secondAngle","difference","_angle","_DOMArray","circle","snap","stroke","strokeWidth","fill","attr","rectangle","w","h","rx","ry","rect","centeredText","string","fontSize","fontFamily","fontWeight","text","leftText","line","p1","p2","triangle","p3","path","polygon","tick","outerRadius","innerRadius","thickness","color","arc","startAngle","endAngle","clockWise","largeArc","start","end","cw","arcData","a1","a2","large","r0","r1","airplaneSilhouette","centerX","centerY","s","Snap","D","el","airplaneNoseView","PR","EMT","EMS","WH","wing","vs","hs","g","steppedNeedle","radiusShort","radiusMid","arrowHead","needle","gradient","setCenterAndAngle","cx","cy","transform","altimeter10KNeedle","triangleWidth","baseWidth","narrowWidth","CY","arrowNeedle","daggerNeedle","narrow","interval","milliseconds","setInterval","clearInterval","_instrument","_primitives","_needles","_time","_snapsvgCjs","I","W","H","R","CX","CENTER","CASE1","CASE2","CASE3","TICK1","TICK2","TICK3","LABEL_RADIUS","ARC_WIDTH","FLAP_ARC_WIDTH","WHITE_ARC_RADIUS","ARC_RADIUS","MAX_SPEED_ANGLE","MID_SPEED","POINTER_SMALL_RADIUS","POINTER_WIDTH","POINTER_ARROW","POINTER_RADIUS","POINTER_MID","AirspeedAnalog","_Instrument","parentElement","template","zip","svg","minimumDisplayableSpeed","nearest","airspeedToAngle","abs","renderImmutable","createNeedle","setNeedle","onAirplaneChanged","appendTo","remove","demoInterval","renderCase","renderSpeedArcs","renderText","renderTicks","renderAirspeeds","renderShadow","nonLinear","_airplane","_airspeed_analog","airspeedIndicator","document","body","airspeedSlider","getElementById","addEventListener","newAirspeed","parseFloat"],"mappings":";AcAA,ACAA,AXAA;AUCA,ACAA,AEAA,AbAA,IaAAmZ,SAAA,GAAAtT,sBAAA,CAAAC,OAAA;AHCA,ACAA,AEAA,AbAA,IaAAsT,gBAAA,GAAAvT,sBAAA,CAAAC,OAAA;AHCA,ACAA,AEAA,AbAA,IaAAC,KAAA,GAAAD,OAAA;AHCA,ACAA,AEDoC,AbCpC,SaDoCD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAtE,OAAA,EAAAsE,GAAA;AHEpC,ACAA,AZLA,AaAA,ATAA,AUAA,APAA,ACAA,AHAA,AIAA,ACAA,ATKA,IDLAL,AaAA8K,ATAA9K,AGAA0J,ACAAmB,AHAAtC,MGAA,GKAA,ANAA,ACAArI,AHAA,ELAA,AIAA,CSAAD,ANAAA,AFAAA,ELAAA,AIAAA,EIAA,kBKAA,ANAA,AFAA,CQAAC,ANAAA,AFAAA,CLAA,AIAA,CJAAA,AIAAA,KSAA,ANAA,AFAA,ELAA,AIAA;AOMA,ACAA,AZLA,AaAA,ATDsC,AGAM,ACC5C,AHDkC,AIClC,ACAA,ATKA,IDLAC,AaAA+P,ALAApF,KRAA,AIDsC7K,AGAMA,AFAVA,GLClCC,CQAA,EKAA,CLAAD,EKAAA,CbAA,aIDsCI,AGAMA,AFAVA,GDAI,AGAM,AFAV,GGClC,CAAAH,CKAA,CAAAA,KTDsCG,AGAMA,ACC5C,AHDkCA,EQClC,CTDsC,AGAM,AFAV,IDAIA,AGAMA,AFAVA,GDAI,AGAM,AFAV,CDAIC,AGAMA,AFAVA,UDAI,AGAM,AFAV,GDAID,AGAMA,AFAVA,GDAI,AGAM,AFAV,KDAItE,AGAMA,AFAVA,ODAI,AGAM,AFAV,EDAIsE,AGAMA,AFAVA,GDAI,AGAM,AFAV;AMOlC,ACAA,AZLA,AaAA,ATFsC,AUKtC,APJA,ACCA,AHFkC,AIElC,ACAA,ATKA,IDLAD,AaAAD,ALAAuJ,KKAA,ATFsCnJ,ACAJA,GQElCL,CLAA,GRAA,AQAAD,CJFsCI,ACAJA,ELElCH,AaAA,CTFsC,ACAJ,MLElC,YQAA,CAAAA,OAAA,YJFsCK,ACAJA,ODAI,ACAJ,wBDAIC,ACAJA,MDAI,ACAJ,uBDAIA,ACAJA,MDAI,ACAJ,CDAIC,ACAJA,QDAI,ACAJ,aDAIJ,ACAJA,GDAI,ACAJ,kBDAIA,ACAJA,GDAI,ACAJ,gBDAIA,ACAJA,GDAI,ACAJ,WDAIA,ACAJA,GDAI,ACAJ,yBDAIG,ACAJA,MDAI,ACAJ,IDAIH,ACAJA,GDAI,ACAJ,CDAIK,ACAJA,WDAI,ACAJ,KDAIF,ACAJA,MDAI,ACAJ,IDAIH,ACAJA,GDAI,ACAJ,KDAIG,ACAJA,MDAI,ACAJ,CDAIG,ACAJA,SDAI,ACAJ,qBDAIN,ACAJA,GDAI,ACAJ,KDAIE,ACAJA,ODAI,ACAJ,CDAIF,ACAJA,GDAI,ACAJ;AMQlC,ACAA,AZNyD,AaCzD,ATHsC,AUMtC,APJA,ACA4C,AHFV,AIGlC,ACAA,ATKA,IYLAwK,ACGMhC,KdJmD5I,AIFnB5F,AIEM4F,AHFV5F,CQGlC,ECGc,CDHd6F,ECGiB,IAAIkE,CDHrB,KTHsCxD,ACAJA,OLEuBP,AQAbA,CJFN,ACAJ,ELEuB,AIFnBQ,AIEM,AHFVA,CSML,CAAC,CAAC,QdJ0BR,AIFnB,AIEMA,AHFV,GLEuB,AQAb,IRAaA,AQAbA,GRAa,AIFnBO,AIEM,AHFVA,CLEuBN,AQAbA,OJFN,ACAJ,GLEuB,AQAb,GRAaD,AQAbA,GRAa,AQAb,GJFNQ,ACAJA,ELEuB9E,AQAbA,ORAa,AQAb,ERAasE,AIFnB,AIEMA,AHFV,GLEuB,AQAb,YJFNS,ACAJA,SDAI,ACAJ;AMSlC,ACAA,AZPyD,AaEzD,ATJsC,AGGtC,ACCA,AHJkC,AIIlC,ACAA,ATKA,CAAC,GYLD4I,KbFyDnJ,AIFnBQ,ACAJA,IQIlC,GAAAd,CbFyDI,GAAA,OIFnBW,ACAJA,MDAI,ACAJ,EDAIC,ACAJA,GQIlC,CAAAf,CTJsC,ACAJ,MQIlC,OTJsCgB,ACAJA,CDAI,ACAJ,ILEuBX,EIFnBW,ACAJA,CDAI,ACAJ,GDAID,ACAJA,CLEuB,IIFnB,ACAJ,CDAI1F,ACAJA,MDAI,ACAJ,EDAI2F,ACAJA,CDAI,ACAJ,ULEuBV,AIFnBW,ACAJA,MLEuB,IIFnB,ACAJ,GDAIF,ACAJA,KDAI,ACAJ,CDAIC,ACAJA,CDAI,ACAJ,GDAIC,ACAJA,MLEuBX,IIFnB,ACAJ,CDAIY,ACAJA,CLEuB,CAAAX,QAAA,AIFnB,ACAJ,GDAIU,ACAJA,ULEuBd,AIFnB,ACAJ,CDAIe,ACAJA,ELEuB,QIFnB,ACAJ,ULEuBf,CIFnBc,ACAJA,ELEuB,QIFnB,ACAJ,CDAIE,ACAJA,OLEuBhB,GAAA,EIFnB,ACAJ,SLEuBA,GAAA,YIFnBc,ACAJA,UDAI,ACAJ,EDAIA,ACAJA,CLEuBX,MAAA,GIFnB,ACAJ,CLEuBH,AIFnBiB,ACAJA,GLEuB,CAAAZ,IIFnB,ACAJ,OLEuB,EIFnBlC,ACAJA,GLEuBgC,GIFnB,ACAJ,CDAIe,ACAJA,ELEuB,IAAAlB,GAAA,KAAAG,AIFnB,ACAJ,CDAIQ,ACAJA,KLEuB,CAAAL,AIFnB,ACAJ,EDAIa,ACAJA,OLEuB,OIFnB,ACAJ,CDAIL,ACAJA,UDAI,ACAJ,CDAI1G,ACAJA,ELEuB4F,CIFnB,ACAJ,ELEuB,CIFnBc,ACAJA,ILEuBZ,MIFnB,ACAJ,CLEuB,CAAAF,GAAA;AWQzD,ACAA,AZRyD,AaGzD,ATLsC,AUQtC,APJA,ACCA,AHLkC,AIK3B,AVLP,AWKA,ATKA,IYLA8P,AJAavB,G,ETH4CvU,AIFnBG,ACAJA,MQKlC,EJA0B,CIA1B0F,EJA6B,ELLSW,ACAJA,GLEuBD,AaGzD,IJAagO,ITH4C,AIFnB,ACAJ,ELEuB/N,AIFnBY,ACAJA,OIKRmN,CACxB5D,ELNoC,ACAJ,CLEuB,CIFnBtJ,ACAJA,AIM5B,STJmDd,EIFnB,ACAJ,MLEuB,EIFnBa,ACAJA,ULEuBZ,AIFnB,ACAJ,EDAIE,ACAJA,SLEuB,QIFnB,ACAJ,CDAIF,ACAJA,MLEuBC,KIFnB,ACAJ,CDAIH,ACAJA,GLEuB,MIFnB,ACAJ,EDAIc,ACAJA,UDAI,ACAJ,ODAIC,ACAJA,WDAI,ACAJ,EDAIX,ACAJA,iBDAI,ACAJ,CDAIF,ACAJA,WDAI,ACAJ,EDAIa,ACAJA,WDAI,ACAJ,GDAIlD,ACAJA,MDAI,ACAJ,CDAI+C,ACAJA,cDAI,ACAJ,CDAIV,ACAJA,WDAI,ACAJ,iBDAIS,ACAJA,QDAI,ACAJ,mBDAIT,ACAJA,WDAI,ACAJ;AMWlC,ACAA,AZTyD,AaIzD,ATNsC,AUStC,AjBTA,AUKA,ACCA,AHNkC,AIM1B,AVLR,ADDA,AYMO,ARNP,IWMAuP,ACGMqD,ARTexK,AIMR6G,KVJ4C/O,AIFnBS,ACAJA,GQMlC,APN6B,AIMR,GGArBtB,AHAwB,MIGD,CDHvB,ETNsCyB,AUSZ,ATTQA,AKMrBmO,GVJ4C9O,AIFnB,ACAJ,CSSJ+Q,IJHTjC,CVJoC,AUIhCzS,EVJgC4D,AIFnBxG,ACAJA,GDAI,ACAJ,ELEuB,CIFnBmH,ACAJA,AKMD,EAAEmO,SIGS,CdPa7O,AIFnB,AUSO,ATTX,CLEuB,AIFnBS,ACAJA,CKMa,ENNT,ACAJ,AKMkB,GVJKT,CAAA,GAAAD,KAAA,CAAA1F,MAAA,CIFnBgF,ACAJA,CLEuBW,CAAA,KIFnB,ACAJ,CDAIzG,ACAJA,GDAI,ACAJ,CLEuB0G,UAAA,GAAAF,GIFnBxG,ACAJA,ELEuB,CAAAyG,AIFnB,ACAJ,CLEuB,EIFnBW,ACAJA,CLEuBV,KIFnB,ACAJ,CDAI1G,ACAJA,GDAI,ACAJ,CLEuB,CAAA2G,UAAA,GAAAD,UAAA,CAAAC,UAAA,WAAAD,UAAA,CAAAE,YAAA,wBAAAF,UAAA,EAAAA,UAAA,CAAAG,QAAA,SAAA9C,MAAA,CAAA+C,cAAA,CAAAP,MAAA,EAAAQ,cAAA,CAAAL,UAAA,CAAA1G,GAAA,GAAA0G,UAAA;AWUzD,ACAA,AZVyD,AaKzD,ATPsC,APCtC,AUKO,ACCP,AHPkC,AIOhCgJ,AVLF,ADDA,AIAA,EYQ+C8H,ARR7C,AIMA,EGAF5B,ANDa1G,EECL,CFDQ,EPJyCnP,AaKzD,ATPsCoH,ACAJA,CEMf,CDLjBqH,COMF/I,GCE4D,EAAEwT,EDF9D,ANDa/J,CDLX,ENCuD9I,AIFnBiB,AGMtB6H,ADLY,ADDM7H,CEMf8H,EOGmD,CAAC+J,CVTjC,ACAJ,CEMV,CHNc5R,ACAJA,CEMN,GPJ6B,AIFnB,ACAJ,ELEuBN,MIFnBlB,ACAJA,ILEuB,EAAAmB,CIFnB,ACAJ,CDAII,ACAJA,KDAI,ACAJ,ILEuB,QAAAL,MIFnBK,ACAJA,ILEuB,CIFnB,ACAJ,CLEuBf,iBAAA,AIFnBe,ACAJA,CLEuBjB,IIFnB,ACAJ,MDAImB,ACAJA,CLEuB,CAAArB,EIFnB,ACAJ,GDAImB,ACAJA,ILEuB,CIFnB,ACAJ,CLEuBL,AIFnBjB,ACAJA,MDAI,ACAJ,CDAIyB,ACAJA,GLEuB,OAAAP,CIFnB,ACAJ,ODAIM,ACAJA,GLEuB,CIFnB,ACAJ,CLEuBjB,IIFnBvD,ACAJA,SDAI,ACAJ,ILEuB,CAAAqD,GIFnBqB,ACAJA,GDAI,ACAJ,GDAIF,ACAJA,ELEuB,EAAAN,AIFnB,ACAJ,CDAIS,ACAJA,IDAI,ACAJ,CDAIL,ACAJA,KLEuB,AIFnB,ACAJ,EDAIC,ACAJA,CLEuBvD,GIFnB,ACAJ,GLEuB,CAAA+C,cAAA,CAAAV,CIFnBN,ACAJA,ODAI,ACAJ,CDAI2B,ACAJA,ELEuB,CIFnB,ACAJ,gBLEuBZ,OIFnBY,ACAJA,CLEuB,EIFnB,ACAJ,YDAIpB,ACAJA,KLEuBD,IIFnB,ACAJ,OLEuB,qDIFnBkB,ACAJA,IDAI,ACAJ,gBDAIF,ACAJA,MDAI,ACAJ,GDAI3F,ACAJA,MDAI,ACAJ,EDAI4F,ACAJA,KDAI,ACAJ;AMalC,ACAA,AZXyD,AaMzD,ATRsC,AUSsC,AjBP5E,AWMA,AHRkC,AIOxB,AVJV,ADDA,CgBO6E,CAAC,APF5E,AGCA,EGAFwO,APP4B,EIOtBvS,EJPQmL,CNC2C1H,AIFnBY,AGO7B,ADNM,ADDmBA,CEOxB,CGCC,CJPI7E,CCMF,CGCCyS,CGAd,CNDgBpG,EMChB3J,CTRsCoC,ACAJA,EEOb,ADNN,CAAA9G,ENC0CoG,COKhC,AGCA,CAACtE,CVN+B,AIFnB,ACAJ,CEON,ADNb,CFDuBiF,ACAJA,KKQA,CVNuB7H,CMD1C8C,AIOqBwS,EVNqB,CIFnB,ACAJ,CQQlC,CbNyDnO,AaMzD1B,IPPe,GOOf,AHAgD,CAAC,IVNQ,AMD1C1C,CNC0CmE,AIFnBW,ACAJA,GLEuB,KMD1C,EFDuB,ACAJ,CCCnB/E,SAAA,GNC0CgD,GMDvC,CAAC,EFDmB+B,ACAJA,CLEuB,CAAA7H,GAAA,KIFnB,ACAJ,YLEuBA,GAAA,GAAAoH,KIFnBf,ACAJA,CLEuB,CAAArG,GAAA,IIFnB,ACAJ,0DDAI4H,ACAJA,QDAI,ACAJ,CDAI1B,ACAJA,SDAI,ACAJ,GDAInC,ACAJA,MDAI,ACAJ,CDAI+D,ACAJA,MDAI,ACAJ,CDAID,ACAJA,UDAI,ACAJ,IDAIA,ACAJA,UDAI,ACAJ,CDAI3B,ACAJA,SDAI,ACAJ,IDAID,ACAJA,WDAI,ACAJ,IDAIhG,ACAJA,KDAI,ACAJ,EDAI2H,ACAJA,QDAI,ACAJ,EDAIf,ACAJA,QDAI,ACAJ,QDAID,ACAJA,YDAI,ACAJ,aDAI7C,ACAJA,MDAI,ACAJ,CDAI+C,ACAJA,cDAI,ACAJ,CDAIc,ACAJA,QDAI,ACAJ,iBDAIf,ACAJA,QDAI,ACAJ,gBDAIgB,ACAJA,UDAI,ACAJ,EDAIE,ACAJA,eDAI,ACAJ,CDAIH,ACAJA,QDAI,ACAJ,EDAIC,ACAJA,UDAI,ACAJ;AMclC,ACAA,AZZyD,AaM1B,ATRO,APGtC,AUKA,ACCA,AHTkC,AIQhCuM,AVJF,ADDA,AIAA,CKKC,GDPkB,IAAE1F,CNCoCvH,AaM1B3B,ATROuC,AEChB,ADDYA,EIQrB,CHPSjF,SAAA,CNCmCuE,AMDnCvG,GFDgBkH,ACAJA,CDAI,ACAJ,CLEuB,CIFnBC,AEChB,ADDYA,CLEuBX,AIFnB,ACAJ,GQQH1B,CbN0B,AIFnBmC,ACAJA,EQQH,CPPTjF,KNCmCgD,IMDnC,COOSF,EbN0B,AIFnB,ACAJ,CLEuByB,AaM1B,ETROtD,ACAJA,EQQH6B,APPT7C,CNCmC,EaM1B,CAAA8C,ATRO,ACAJ,CDAIqC,ACAJA,ICCZ,GAAApF,EOOS,GAAA8C,EbN0ByB,AIFnB,ACAJ,CQQH,CPPT,CFDgBtD,ACAJA,ELEuB,CaM1BzC,EPPN,CFDa,AECZ,ADDQ,CDAI4G,ACAJA,GQQH,EAAAtC,GAAA,KbN0ByB,CIFnB,ACAJ,CDAIc,ACAJA,GLEuB,CIFnB,ACAJ,KLEuBZ,IAAA,GAAAF,EIFnBU,ACAJA,GLEuB,CAAAhC,MAAA,CAAAyB,KIFnBQ,ACAJA,CDAI,ACAJ,EDAIC,ACAJA,CDAI,ACAJ,ELEuB,EIFnBD,ACAJA,CDAI,ACAJ,CDAII,ACAJA,GLEuBb,IAAA,EIFnB,ACAJ,GLEuBxE,AIFnBkF,ACAJA,CDAI,ACAJ,QLEuB,CIFnBD,ACAJA,CDAI,ACAJ,MLEuBP,GAAA,GAAAF,AIFnBQ,ACAJA,ILEuB,CAAAL,IAAA,CAAAL,KAAA,AIFnB,ACAJ,CDAIW,ACAJA,CLEuBV,AIFnB,ACAJ,EDAIW,ACAJA,CDAI,ACAJ,CLEuB,oBAAAnC,OAAA,CAAA2B,GAAA,uBAAAA,GAAA,YAAApB,SAAA,4DAAAiB,IAAA,gBAAAF,MAAA,GAAA3F,MAAA,EAAA4F,KAAA;AWazD,ACAA,AZbyD,AaM1B,ATRO,AUWtC,AjBXA,AWUA,AHVkC,AIQnB,AVHR,ADDP,AIAA,EQME,EbLmB1H,ASJKC,KNC+B+H,AaM1B7B,ATROuC,ACAJA,ANKlB1D,KFAe,GgBGAiB,EbN0BgC,AMD/B,COOK,ETROU,ACAJA,ENKH3D,CAACC,COJN4J,CNC+B,EAAA3G,AIFnB,ACAJ,KCCR,APIe,EAAE,CKLLU,ACAJA,ELEuB,eAAAV,IaM1B/B,ITRO,ACAJ,ELEuB,CaM1B,ATRO0C,ACAJA,kBLEuBX,MaM1B9B,CTRO,ACAJ,GLEuB,EaM1B,eTRO0C,ACAJA,MLEuBpC,EaM1BN,MAAA,CbN0B,AaM1BC,MTRO,ACAJ,EQQH,MTRO0C,ACAJA,KDAI,ACAJ,EQQH9C,CTRO+C,ACAJA,EQQH,aTRO,ACAJ,CDAIL,ACAJA,IQQH1C,GAAA,ATRO,ACAJ,GDAIgD,ACAJA,MDAI,ACAJ,ILEuBhB,EIFnBW,ACAJA,CQQH3C,GAAA,EbN0B,CAAAM,QaM1BN,CbN0B,EaM1B,CbN0B7B,MAAA,AIFnB,ACAJ,CLEuB+D,MAAA,CAAAD,AIFnBgB,ACAJA,SDAI,ACAJ,CLEuB,AaM1B9C,ETRO4C,ACAJA,ELEuBd,EaM1B,IAAAjC,GAAA,CbN0B,AaM1BK,CbN0BC,EIFnB,ACAJ,OLEuB,AIFnBD,ACAJA,CQQH,GbN0BA,EaM1BF,KTRO,ACAJ,CQQH,CTRO6C,ACAJA,ELEuB,CaM1BhD,GbN0B3F,AaM1B,ATRO,ACAJ,GDAI6I,ACAJA,ELEuB,AaM1B/C,EbN0B6B,GIFnB,ACAJ,CQQH,ATROmB,ACAJA,CQQH7C,GbN0B,EAAAW,GIFnB,ACAJ,CQQH,ATRO6B,ACAJA,ILEuB,CIFnB,ACAJ,EDAI5F,ACAJA,KLEuB8D,IIFnB,ACAJ,EDAIiC,ACAJA,GQQHjD,GbN0B,AaM1B,GTRO,ACAJ,EQQHE,OAAA,CbN0B/B,AaM1B6B,ETROgD,ACAJA,CQQH,GbN0B,CAAA9B,CIFnB,ACAJ,GDAI4B,ACAJA,KDAI,ACAJ,CDAIM,ACAJA,ILEuB,CAAApB,AIFnB,ACAJ,ODAI9E,ACAJA,CLEuB,QIFnB,ACAJ,SLEuB+D,GIFnBoC,ACAJA,KLEuB,gBAAApB,KIFnB,ACAJ,KLEuB,EAAAE,AIFnBa,ACAJA,MDAI,ACAJ,SLEuB,CAAAhB,QAAA,EAAAC,UAAA;AWczD,ACAA,AZdyD,AaM1B,ATRO,AUYtC,APFA,ACCA,AHXkC,AIShCwM,AXJF,EDCE,AEAA,AWKA1Q,EICIwV,ARVF,IAAI,CNAiDpR,AaM1BnI,ATROqJ,AEE7BwF,ADFyBxF,AISvB,CHPD,GAAGwF,CAAC,IQUM,GAAGwK,EJDA,CAAC,CVTiCjR,AaM1B7B,CbN0B,EAAA8B,CAAA,AcU1B,CAACmR,GdVyBrR,AaM1B,EAAA3B,CTRO8C,ACAJA,AKWJ,INXQ,ACAJ,EDAIxB,ACAJA,ESYY,CAAC,CDJhB,ATRO,ACAJ,ELEuB,GAAA3D,GIFnB2D,ACAJA,EQQHvB,CbN0B,CAAA+B,AIFnB,ACAJ,GSY6B,CAAC,CVZ1BpC,ACAJA,CQQH,MTRO,ACAJ,CDAI4B,ACAJA,CLEuB,GAAA3D,AIFnB,ACAJ,CQQHqC,KbN0B,CAAA8B,KaM1B,SbN0B,CAAAC,GIFnBT,ACAJA,CLEuB,CaM1BrB,ETRO,ACAJ,OQQH,IbN0B0B,gBAAAC,AIFnBN,ACAJA,CLEuB,EAAAO,CAAA,AIFnB,ACAJ,ILEuBD,CAAA,CAAAI,OIFnBV,ACAJA,ELEuB,EIFnB,ACAJ,CLEuBO,CAAA,SAAAD,CAAA,YAAAD,CIFnB1B,ACAJA,SDAI,ACAJ,KLEuB,CAAA2B,CAAA,EAAAC,CAAA,6DIFnBkB,ACAJA,sBDAI,ACAJ,CDAID,ACAJA,IDAI,ACAJ;AMiBlC,ACAA,AZfyD,AaM1B,ATRO,AUatCiQ,AjBNA,AUIA,ACCA,AHZkC,AISrB,AXHb,AIAA,EHCE,EOJE,AISA,IJTI,CNDiD9Q,AaM1B/B,ATRO6C,AEG7BuF,ADHyBvF,CCGxB,GAAGuF,CQUC,ARVA,CQUC2K,OdX0C/Q,KaM1B/B,EbN0B,EcW1B,CVbO2C,AUaN,ATbEA,CQQH,EAAA1C,CTRO,ACAJ,CLEuB+B,EcWlB,CDLR,CCKU,GVbHW,ACAJA,IDAI,ACAJ,KQQHzC,ACKgB,CDLhB,MAAAA,CAAA,CbN0B,EaM1BD,CbN0BgC,IaM1B,CAAA1H,GTROsI,ACAJA,GQQH,EAAA3C,CAAA,QTRO,ACAJ,EQQHC,CbN0B,SaM1B,GAAAF,KAAA,CAAAC,CAAA,CbN0BgC,EaM1B/B,UAAA,CAAAC,QbN0B,EaM1B,GAAAD,GbN0BgC,KAAA,EaM1B,CbN0BC,AaM1BhC,UAAA,ETROuC,ACAJA,GLEuB,CAAAZ,AIFnB,ACAJ,KQQH5B,EbN0B,GAAAkC,KaM1B,CbN0B,AaM1BhC,MbN0B2B,MaM1B,mBbN0B,KaM1B7B,GbN0BmC,OaM1B,EbN0B,AaM1BnC,GbN0BiC,OaM1B,CAAA9B,ObN0B,CaM1B,MbN0BZ,GaM1BlC,MAAA,CAAA+C,CbN0B,EAAA8B,MAAA,GAAAE,EaM1B,CAAAvC,IbN0B,CAAAwC,CaM1B,EAAAhC,MbN0B,CAAA2B,KAAA,EAAA5F,AaM1B,CAAA4D,QbN0B,EAAAmC,AaM1B,CAAA7I,GAAA,GAAA0G,EbN0B,QaM1B,IbN0BkC,MAAA,GAAAF,KAAA,CAAAM,KAAA,OAAAlG,SAAA,YAAAmG,0BAAA,OAAAL,MAAA;AWgBzD,ACAA,AZhByD,AaM1B,ATRO,APQtC,AUIA,ACCA,AHbkC,AIUhC0L,AXHF,AIAA,EYOE,ARVA,APIA,EWKE,EICIgF,AfNAzU,EWKAvB,CVXiD2F,AaM1BlJ,ATROyI,ACAJA,AIUvB,CVFC,GAAG,AWKF,CXLG,CAAC,AWKF,EICI,CfNC9G,EeME6X,EDNSnT,AdAP,CAACjE,GAAG,CAACyC,GeMG,CAACuU,EDNF,EAAAnS,ATRO,ACAJ,CLEuBkC,ADMnB,GAAG,CCNgB,EAAAxB,GaM1B,ACMgB,CdZU,AcYTzH,AfNA,CcAjBgH,CdAmB,EKRZ6B,ACAJA,CScmB,CAAC,EdZGpB,EDMC,CKRpB,ACAJ,ANQyB,CCNF,AaM1B,GdAgC,ECNN5B,GaM1BkB,IbN0B,ADMe,CCNfU,IAAA,CaM1B,EAAApB,ATROwC,ACAJA,ODAI,ACAJ,CDAIC,ACAJA,SQQH,ATRO,ACAJ,CQQH3C,IbN0BsB,IAAA,GaM1B,CAAAxB,OTRO4C,ACAJA,EQQH,EAAA9B,GTRO,ACAJ,CDAI+B,ACAJA,MQQH,EbN0BrB,CIFnB,ACAJ,CDAI2B,ACAJA,ELEuB,CaM1BpC,CTRO,ACAJ,UQQH,CbN0BS,CaM1BpB,GbN0B,YIFnBgD,ACAJA,EQQH,CAAAlD,ETRO,ACAJ,QLEuBC,CaM1B,EAAAY,MbN0B,KaM1B,GAAAlD,MAAA,CAAA+C,ITROyC,ACAJA,ODAI,ACAJ,CDAIrD,ACAJA,EQQH,CAAAE,MTRO,ACAJ,CDAIoD,ACAJA,IQQH,GTRO,ACAJ,CDAI9B,ACAJA,IDAI,ACAJ,CDAIoB,ACAJA,ODAI,ACAJ,CQQHjC,ATROkC,ACAJA,QQQH,CTRO,ACAJ,CDAIQ,ACAJA,GLEuBJ,IIFnB,ACAJ,UQQH/C,QbN0B,CAAA8C,EaM1B,EbN0B,uBIFnBO,ACAJA,CDAI,ACAJ;AMmBlC,ACAA,AZjByD,AaM1B,ATRO,APStC,AUIA,ACCO,AHd2B,AIUrB,AXFb,AIAA,EYOE2E,ARXCrO,APKD,ESKWuQ,EEAP1N,GVZmDuG,AaM1BpC,ATRO4B,ACAJA,ANSzB9D,CeMC,ANDS,CMCR+G,ENDW,ATLT,COLV,AIUW,CJVX4C,AIUY,CAAC,MICM,ANDT8B,CMCUgJ,ARXpB,COI4BpS,CTROc,ACAJA,CDAI,ACAJ,CQQH,CLMZsI,CACjBC,CJfoC5H,ACAJA,ELEuBO,CQanD,CMA4B,CDPHlJ,ACOI,ANCjCyP,CRduD,EaM1B,GAAAtI,ALQvB,EACNuI,CRfuDxG,CIFnB,ACAJ,GLEuB,AIFnBnF,ACAJA,CGiB1B,EACNyM,EKV6B,CAAAtJ,ATRO,ACAJ,CDAIgB,ACAJA,EQQH,ALUvB,EACNuI,UJnBoC,ACAJ,CGmBrB,EJnByB1M,AIqBjC,AHrB6BA,CLEuBqF,IaM1BtD,CTRO,ACAJ,CDAI4D,ACAJA,KQQH,CAAA1J,EbN0B,CaM1B,KTRO,ACAJ,CDAImI,ACAJA,IDAI,ACAJ,OQQHnI,GAAA,GAAAoH,CTROuB,ACAJA,KQQH,CAAA3I,GAAA,OTROgI,ACAJA,CDAI,ACAJ,WDAIA,ACAJA,CDAI,ACAJ,CDAII,ACAJA,SDAI,ACAJ,IDAIrE,ACAJA,ILEuBmF,EIFnB,ACAJ,CDAIQ,ACAJA,CLEuB,aIFnB,ACAJ,CDAI1B,ACAJA,CDAI,ACAJ,aDAIW,ACAJA,eDAI,ACAJ,CDAIX,ACAJA,CDAI,ACAJ;AMoBlC,ACAA,AZlByD,AaM1B,ATP/B,APSA,AUIA,AFZA,AISEkG,AVDF,ADDO,EgBOL8K,ANKG,EFjBFhZ,ARKUuB,AYMT,CDJG,CDSLmP,ACTM,CHPL,ENFsDlI,AaM1BrB,AfCb,CUWZ,EVXe,CUWfrE,MMJa,CAACoV,ChBPP3W,CeDkB8F,ALYzB,CAAAvG,GVXYS,CeDa,AfCTtB,EeDSqH,ACQF,ANIvB,CMJwBgS,EhBPH,CeDI,CfCF9X,CEP4B,EQkBnDsB,IKZyBgD,ACQU,CAAC,AhBPL,EAAK,EUWpC,EKZyB,CAAAuB,CbN0ByB,IaM1B,ALYzB/F,GRlBmD,MQkBnD,GAAAD,MKZyBuE,GLYzB,EKZyB,CbN0ByB,GQkBhD,IRlBgD,CAAAC,CQkB1C,QRlB0C,AaM1B1B,KAAA,MAAAE,IAAA,GAAAF,EbN0ByB,GaM1B,CAAA/C,GbN0B,CAAAgD,EaM1B,CAAAvB,MbN0B,CAAA6B,IAAA,AaM1B,OAAA9B,IAAA,KAAAxE,SAAA,EbN0BuG,KAAA,CaM1B7B,GAAA,GAAAF,IAAA,CAAAG,IAAA,CAAAL,KAAA,EAAAC,IAAA,QbN0BiC,OAAA,CAAArD,IaM1BJ,KbN0B,CAAA0D,CaM1B,CAAA/B,GAAA,EbN0B,CAAAC,IAAA,CAAAoB,OAAA,CAAAC,OaM1BtB,EbN0B,CAAA8B,AaM1B,ObN0B,KaM1BlD,SAAA,gCbN0BoD,CAAA,2BaM1BnC,IAAA,gBAAAF,MAAA,GAAA3F,MAAA,EAAA4F,KAAA;AFa/B,ACAA,AZnByD,AaM1B,ATN/B,AUeA,AjBNA,AUDAhG,AFPA,AIQQ,APDR,CYOC,CAAC,ANKA,ACVG,AXFH,AYMA,CAAC,CJZApB,AIYC,GHNJ,CAAAiP,CPRyDvG,AaM1BhB,APJ5B,AEkBM4I,AVZA9O,ESAT,ADJE,EEgBW,CDZbyN,ACYcoB,CVZC,CAAC5O,CSAhB,EMF+BkG,CPF7B+G,AEgBkB,AVZA,CUYCc,AVZAlO,IERoCyG,CAAA,AMIvD,ARIwB,CeFK,ALcJ,AVZA/H,CQJjB,AEgBkBwO,CKdG5G,ALcF,CRpB4Bc,CQoB1B8G,CVZC,GAAG,EUYE,CAACf,AVZA,CeFP,ALcQ,EAAEgB,AVZAlO,IERgB,EQoBV,CRpBUuC,AQoBT,CAAC4M,AVZA,CAAC,GUYG,AVZA,CERI,AaM1B9I,ALcuB,CRpBGK,EFQA,GAAG1G,IeF7B,IfEqC,CERX,AFQY,GERZuC,MAAA,CAAA2F,IaM1B7B,UbN0B,AaM1B,CbN0BM,IAAA,cAAAQ,IaM1BtC,SAAA,GbN0B2B,CAAA,WAAAA,CAAA,CAAAI,SAAA,IAAArE,MAAA,CAAA2F,cAAA,CAAA1B,CAAA,KaM1BJ,QbN0Be,AaM1B,CAAAzC,SAAA,GAAAnC,EbN0B,CAAAiE,CAAA,EaM1B,CAAAF,MAAA,CAAAD,UAAA,IAAAA,UAAA,CAAA3B,SAAA,IAAAD,WAAA,IAAAhG,KAAA,EAAA2H,QAAA,EAAAf,QAAA,QAAAD,YAAA,aAAA7C,MAAA,CAAA+C,cAAA,CAAAc,QAAA,iBAAAf,QAAA,gBAAAgB,UAAA,EAAAE,eAAA,CAAAH,QAAA,EAAAC,UAAA;AFc/B,ACAA,AZpByD,AaM1B,ATL/B,AGYO,AFXP,ANQA,ADDA,AIAA,CJAC,CDCC,AYCA,ETTmB8B,AOWRyF,ACQTqB,EFhBA,AGMEnB,CFEU,AEFT,EILwBvH,CNOZ,CVHjBpI,CGR2B,CMGlB,EEgBI,EFhBA6O,AEgBXiC,ACVa,EFEJrB,GVHX,AUGcA,CAAGD,CVHH,CgBJenH,APDR,COCQ,APDP,EOCOC,ANOP,ACQT,CKfgB,CNOH,ADRA,CAACwG,CAAC,COCC1G,CPDC,INHH6B,AMGO,CAAC8E,CAAC,CAAC,OOCR,CbJF,EaIE3K,MAAA,CAAAmE,cAAA,GAAAnE,MAAA,CAAAmE,cAAA,CAAAC,IAAA,cAAAJ,gBAAAC,CAAA,EAAAC,CAAA,IAAAD,CAAA,CAAAI,SAAA,GAAAH,CAAA,SAAAD,CAAA,YAAAD,eAAA,CAAAC,CAAA,EAAAC,CAAA;AFe/B,ACAA,ACf+B,ATP/B,ACCA,ANWA,AGDA,EFR6BN,AOY3B,AEFA2H,ACIA,CDJC,CLVkB1B,APQLhO,ASJd,AEgBE4Q,AHnBiBzC,KQGU1F,ANQtB,CAAC8G,ACQA,CRpBmB,CAAAxF,AIAA,AIoBzB6G,CCVD3B,CJT4B,CEWhB,GAAG,ACQR,CXZM,AYEb,CTV0B,AOYT,AEFPuF,ETVgBxK,AaIEtB,CXIhB,CKIS,EVJR3I,CUIW,EMRI,EJMP,ETVK,GHQb,CgBJe4I,CTJFqB,AKUD,EJTGoE,SDDF,ACCE,aQGA,GAAAxF,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,GAAAC,eAAA,CAAAL,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,GAAAF,eAAA,OAAA1C,WAAA,EAAA2C,MAAA,GAAAE,OAAA,CAAAC,SAAA,CAAAL,KAAA,EAAA5F,SAAA,EAAA+F,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAAM,KAAA,OAAAlG,SAAA,YAAAmG,0BAAA,OAAAL,MAAA;AFgB/B,ACAA,AChB+B,ANS/B,ARHA,ADDA,AIAA,CKIC,CPb4B,AIAAjB,AEI1B,ADH4BA,AIU7B2H,ACIA,CDJC,CZFC,AWYAoB,ERrByB7G,EHSrB,AWYA,CKjBuBZ,AhBKtBpJ,AaMA,CFML6Q,CJrByB,ACCE,CLDF,AIAA9C,ACCEG,AIU5Bc,GTX0BxG,GSW1B,CAASgM,CLXiB,CMed,CNfczK,ACCE,EAAAoE,CRQN,EGTI,CAAArE,AHSD,AYEP,EZFS,CYEN2K,ELXK,ACCE,GLDF,AaIEpL,IAAA,AJOE,EIPFxB,IAAA,CJOM,OIPNA,IAAA,KAAA5B,OAAA,CAAA4B,IAAA,yBAAAA,IAAA,2BAAAA,IAAA,aAAAA,IAAA,yBAAArB,SAAA,uEAAA8C,sBAAA,CAAAD,IAAA;AFiB/B,ACAA,ACjB+B,AdO/B,ADDA,AIAA,EFTE,AID2B,AIsB3B,AHrB6B,AIW7BoG,CDUC,ACVA,CZFC,ASNDtP,AEkBC,AENAwV,ENhByB3L,ACCEA,CCG5B,CTMK,CgBNuBV,AhBMtBrJ,EGTP6J,CID2B,ACCE,AIW5BkF,GLZ0BxG,ACCEA,EKed,CbNC,AYEf,ACIe/E,CDJN+Q,CTXV,CHSmB,CGTL,CHSO,AaMA,CAAC,GNhBK,ACCE,CDDFzG,ACCEG,AIWV,IIRU7E,GJQV2F,CIRU,ATJF,ECCE,GIWV,CAAIX,EIRMhF,GJQD,CIRC,EJQE,GAAG,CAAE,mBIRPE,cAAA,wEAAAF,IAAA;AFkB/B,ACAA,AClB+B,ANW/B,ACQA,ATXA,ADDA,AIAA,CMYC,CJtBC,APUA,AQTA,AIWAoG,CAAC,CTZa,AMGbrP,AIaCqD,IVhBYnC,CaGeqH,APA5B,AIaM,EJXP,CGOCqG,ACIS,CVhBI,AUgBH,KDJV,CAASa,CHPVd,KGOgB,GAAGwF,CHPnB,EAAW,IOFkB,IJSC,GAAGE,QITJxL,CJSa,MITb,CJSa+F,MAAA,CAAIX,KAAK,GAAG,GAAG,CAAE,CIT9BpF,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAM,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAArD,SAAA,CAAAsD,OAAA,CAAA9B,IAAA,CAAAoB,OAAA,CAAAC,SAAA,CAAAQ,OAAA,8CAAAE,CAAA;AFmB/B,ACAA,ACnB+B,ATF/B,AGcA,AFbA,ANUO,ADDP,EWGE6F,ACGA,CDHC,ACGA,CVjBa1P,EMMZ,GOH2B+I,AdSf7D,GUEb+J,MHRCA,AGQD,CTda,AScJa,IVFkB5K,CON1B,APM2BC,CcTAiD,APGf,AGQE,CTdF2B,AaGe,EJWVyK,CHRD,COHWzL,APGV8F,CAAC,CPMiB,ECZvB,ADYyB,KUET,CHRVI,EGQayF,GIXJ,CPGT,CAAM,COHGvQ,GPGC,AGQY,CHRX2K,CAAC,COHH,CAAAxG,GJWa2G,MAAA,CAAIX,IIXjB,CJWsB,EIXtBnK,CJWyB,CAAC,CAAE,GIX5B,CAAA2F,cAAA,CAAAvB,IAAA,cAAAQ,gBAAAX,CAAA,WAAAA,CAAA,CAAAI,SAAA,IAAArE,MAAA,CAAA2F,cAAA,CAAA1B,CAAA,aAAAW,eAAA,CAAAX,CAAA;AFoB/B,ACAA,AClBA,ATHA,AGcA,ACQA,AHrBA,APSA,AYMA,ARNA,CQMC,CbNC,AYIAsH,AVHA,CUGC,CTfCnO,AMMF,KNNE,ADYKwD,GCZLkF,ASeDgF,MTfC,ASeD,CTfCnH,ASeQgI,ITfR,CDYoB,CUGN,AVHO1K,GUGJoP,WAAW,GAAGE,EVHS,CAACvP,MUGD,EVHS,CAAC,CAAC,GUGX8J,MAAA,CAAIX,KAAK,GAAG,GAAG,CAAE;AEQ7D,ACAA,AClBA,AhBOA,AUIA,ACQA,AHrBA,ANUA,ADDA,AYKE7M,ARLF,EEVE,AEIC,AGUDiO,CAAC,CTfC,GUgBF,CAAA+F,GNfAzH,CKcCiB,ICCD,EDDC,CAASwF,ACCVgB,CNfA,EAAc,KMed,CDDmB,OAAAxG,MAAA,CAAIX,KAAK,GAAG,GAAG,CAAE;AEQtC,ACAA,AClBA,AhBOA,AUIA,ACQA,AVZA,EOTE,AIaAoB,CAAC,CTfCvL,AIAY,AEIb/D,GAAA,CFJamB,EJAN,CAAC6C,AKET+J,CIaCc,CLfa,IJAC,CAAA1F,ASed,CAASkL,GJbEpG,MAAM,AIaC,EJbC,CIaEqG,STfP,ASegB,CTfhBnT,KAAA,CSegB0N,ETfT,ISeS,CAAIX,KAAK,CAAE;AEQ5C,ACAA,AClBA,AhBOA,AUDA7M,ACaA,ATXA,ADDA,AIAA,EOIEiO,CIdF,AJcG,CITH,ATPgB1P,AEIbK,ADFmB,ELDhB,COUN,CAAAmP,AFTsBjO,CCEnB,ECOH,ADLE,EDJoB,AIcnB0N,CFLHO,GAAA,EHXgB,AKgBb,CHVDN,AGUWsF,IHVPrF,EFNUnB,GEML,EAAE,AGUW,GLhBR,IKgBQiB,MAAA,CAAIX,KAAK,CAAE;AEQnC,ACAA,AChBA,AhBKA,AUGO,ACSP,ATXA,ADDA,AIAA,EOKEoB,CAAC,CIVGwG,ATPF3U,AGeSkO,AFdSzP,CQMf,CbNDkK,AMKF,CCSY,CMRN,CbND,AaME,ATPP,CGee,CPdR,CIDPD,CJCS,AMKF,EGWRgF,EHXYL,CFNX,CAAA9G,AGeS2H,AFdS,EIgBnB,CFFaA,AEEDnB,CLjBX,AGeeoB,CAAC,CDTG,CCSC,ADTA,ADLFvB,CIgBF,GHXQ,CAACU,CAAC,EGWN,CHXSM,CDLX,ICKgB,CAACN,CAAC,EAAE,IAAI,CAACC,CAAC,GAAGK,KAAK,CAACL,CAAC,CAAC;AKkB3D,ACAA,AChBA,ALiBA,ATXA,ADDA,EDLE3O,AUQA,AEGA,ELlBEoB,AEMF,ADLEA,ELAE4I,ASiBEwK,GTjBC,AIDL,AGeKjF,AFdL,CDDK5D,AGeC,CPdC,CKAP7B,AIiBU,CTjBD,CHMX,AUQYnI,CHfA,APOZ/B,AYWe4Q,GLlBA,AGeC,AFdd,CDDc,AGeC7M,AFdfgE,AIiBiB,CLlBF,AKkBGoK,CFHD,EFdjB,CEcoB,AEGE,CZXxB,AYWyBxC,CAAC,CFHD,AEGE,CFHD;AIS5B,ACAA,AChBA,ANQA,ACSA,ATXA,ADTAjO,AIQA,CKGC,CDVE,AGaDkT,EIXIwB,ATPF5U,APMFnB,AQLE+D,CQMG,CbNDiG,CHKJ,ACFF,CEHQ,AaME,AJWF,AXdRzI,CMJI,AKkBKoP,CTjBC,AIDDzQ,ACCC,CQMG,ARNF8D,CLAC,CSiBC,AXdb,CWcc,EXddzC,COHiB,CAAA4H,GPGjB,EMJsB,CAAC,gBCCN,CAAAhI,KAAA,GAEX;AMqBN,ACAA,AChBA,ALiBA,ATXA,ADFO,AICP,IWLM6U,AhBFJ/V,ASDCD,AGcC0Q,AXPS/O,CeJN,CbNDsI,AIFiB,ACIfiE,CCCL,COGO,AJWF,CZbN,CGJQ,ASiBAqC,CIXG,AhBGX,AQPW,CLFD,CIFiBpP,ACId,CLFD,AKEE,AIeF,CAACqT,GLnBc,ANYF,CMZO3G,CPWhC3N,CCC4B,EWOP,OXPVyB,GMZmC,CAAC,APWjCxB,COXkC,GPW9B,EAAE,ICCKwB,CAAIC,UAAU,EAAEC,MWOoB,CAAC,CXPb,EAAEC,QAAQ,EAAK;AaalE,ACAA,AChBA,ANQA,ACSA,ATXO,AGDP,EJDE,EMbgD,AEK/C7B,AGeCuQ,ETjBEtG,AIH6C,APY/C9J,AQPI+N,APQFpM,GEVG,AMEN,APUakD,CUKN,CTjBC,AMIT,CDFY,AIeFsL,CTjBC,AHSF,CAAClQ,AQPI,CAAC,CIeD,CAACmU,AXPA,GDDC,ASLhBxF,CTKiB7O,GSLb4O,CTKiB,AYQE,GVLU9J,CFHR,ASLhB,APQyBL,EORvB,KTKqBzE,EEGW,EFHP,AEGS,KFHJ,UAAU,EAAE,QYQU,CAAC,YZRU,CAAC;Acc7E,ACAA,AChBA,ANQA,ACSA,ETXE,ADFAC,EeJI6V,ATV8C,AKqBhD,CIXG,CbND9L,AHSF/J,ASLA,ADFIgO,ELFA,AaME,CAAC1M,AdMF,ADFA,CEVC,AFUArB,CMd0Cc,CJIxC,CaMG,AhBGJ,ASLA,COEKkD,AhBGJhE,AQPI,EDNoC,ACMlC,ANUF,ADFA,CeJG,APFJmO,AROX5M,CeLgBmU,AJWF,CIXG,AdMFnR,CFHD,AQPI,AIeF,CIXGoR,AhBIjB,CgBJkB,CAAC,EhBIf,ASNa,COEKF,AhBIjBjW,ASNa,COEK,AfKf,CCCc,EORA,COEK,APFJ4O,AROX,CeLgB,APFJ,AROX,GQPcM,CROVnN,IQPe,CAAC6M,CTMZ,ASNa,CTMZnO,CSNc,EROT,EQPa,CAACoO,CTMZ,ASNa,AROX,CDDDvO,ACCE,EQPa4O,ARQ/C,EDFoC,CAAC,ESNe,CTMZ,ASNaL,CTMZ,ASNa,CAAC,CTOrD,iBCEJ,CAAC,WDDC,CAAC;AcWL,ACAA,AChBA,ANQA,ACSA,ATXA,EKhBE,AKqBA,AXJAtO,CWIC,CHbD,AGaE,ETjBEgK,AHYF,AQVIiE,GLFC,AFaA,CDDD,ACCEhO,CEbC,AHYFR,GGZK,AKEE,EAAE,APWF,CACZgC,QAAQ,EDFa,CAACtB,ACEX,CAAC,GDFc,CAACJ,ACEX0B,IDFe,CAAC,GCER,GAAGC,QAAQ,EACnC,wDACF,CAAC;AaOH,ACAA,AChBA,ANQA,ACSA,ANZA,EIRG,AGcD,EIXIoU,AhBMJ,AQVI,CAAC,CLFD7L,AaME,CRHF4D,ELHG,AaME8H,CAAC,CbND,EaMI,ARFX,CLJU,AaME,ARFX;AMmBL,ACAA,AChBA,ANQA,ACSA,ATXA,AGDA,EEfE,AEMC,AGeD,AXDA,EeVId,ARFF7U,ELHE,AaKE,GAAG4V,APJRxH,AGeM,CIXG,CRFD,CAACnO,CQEG,CAAC,GPJb,CDEe,CACZc,KAAA,CAAK+M,KAAK,IAAI/M,KAAA,CAAKgN,MAAM,IAAIhN,KAAA,CAAKiN,QAAQ,EAC1C,0CACF,CAAC;AMgBL,ACAA,AChBA,ATVA,AGaA/M,ADRG,AEsBH,ATXA,EDIE,EeVI8U,AhBMJ,AQNI,AIWF5B,EThBEjK,AFeEtI,CSPR,ATOS,CSPTqN,EMHY,AJWF,AXDEvN,CSPZ,AFHMX,CIWFoT,CIXW,CNGflF,EFHM,CQAab,ANGnB,CEQU,AXDU,GAAG3M,IEfE,EAAE,EFeI,CEfD,IaKH,CAACqU,EAAE,EAAEjB,EAAE,CAAC;AFiBnC,ACAA,AR1BA,APgBA,AUCO,ADbJ5T,AESHA,ATGA,AGDA,EGLE,APUA,ESHWkO,AEITkF,ETfE,AFcExS,CSHQ,ADbb,AESH,AVOS,CQhBNX,AESHgP,EDImB,ATGP5O,IUPZ,AVOgB,CQhBb,ARgBcQ,EUPjBoO,CFTG9B,ARgBiB,CSHPe,ATGQ7N,EWCA,CFJL6N,CAAGnC,ACJnB,ACQuB,AXDE,CSHL,ATGMjL,ESHF,ADbrB,CRgB0B,CAACH,CAAC,GWCRyS,AXDW,CAAC,EAAE,CAAC,CAAC,CAAC,YWChBC,EAAE,EAAEC,EAAE,EAAExF,KAAK,EAAK;AEM1C,ACAA,AChBA,ATVA,APgBA,AWUO,ATVP,AGDA,EKEE,AFRCpP,APWD,EUMW6Q,ERpBPrG,ASeAgK,AXDEnS,CAAC,ESHAgL,CAAC,ATGEtL,EWCA,CDKU,ACLT6O,CFJC,AFRX,CAAA5C,CGiBsB,CDTR,AEIA,CAAC,AXDE,ESHArM,CPXC,CFcGA,CEdD,COWC,CAACgC,ACSZkN,AHjBV,CPWyB,CSHD,ATGEvO,CEdD,AOWA,ETGI,CAACJ,CAAC,CAAC,CUMb2O,CACpBL,CVPoC,CAAC,CAAC,CUOlC,EACJ9B,CAAC,EACDC,CAAC,EACDmC,CAAC,EACDC,CAAC,EACDN,MAAM,EACNC,WAAW,EAIR;AGVL,ACAA,AChBA,ATVA,APgBA,AUCA,ARDA,CQCC,CCmBI,AVhBH,EeVI2F,ARFHpW,ELDG,AQ0BJ0Q,AVbMpO,COZL,APYM,CWCDsS,CIXG,CLuBL,AVbM,CAAC,CeVC,AfUA,CeVC,ALuBT9R,EVbWV,CAAC,CWCD,KDYX,CAAAtB,CCZW+N,KDYX,CCZW,CAAO6F,EAAE,GAAGN,CDYvBtR,SAAA,CCZkC,ODYlCC,ACZkC8L,MAAA,CAAI8F,EDYtC,ACZwC,GDYxC7R,ACXIoL,KAAK,GAAG,CDWZ,ACXa,MDWV,GCXUW,GDWJ,GCXI,CAAMM,KAAK,OAAAN,MAAA,CAAIuF,WAAW,OAAAvF,MAAA,CAAIX,KAAK,GAAG,CAAC;AEK1D,ACAA,AChBA,AdMO,AGDP,EEpBEnO,APiBA,AWoBa,AVZbgC,EeVIsU,ARHHpW,ELAGuK,AQ0BJuG,ACXI,CAAC,CDWH,ACXI,CIZG,ARHR,ANSa/L,ESiBZlC,AHxBF,CQCY,CfUD,CEbC,AaGE,ATfd,CAAA8K,CJYc,AFaAtL,CEbC,AFaA,GUab,AHxBFgM,APWkBlM,CUahBtB,AVbiB,EMzBnB,CNyBsBY,GUapB,CTjB+BsD,ADIP,CCJQE,ADIP7C,COX3B,EAAY,APWkB,CAACJ,CAAC,CUa9Ba,ETjBwC,ADIPlB,ECJS,KSiB1C,GVb2C,CAAC,IUa5CmB,SAAA,GAAAD,SAAA,MAAG,CAAC;AGNR,ACAA,AChBA,ANOA,ALFA,EMiBQ,AThBN,ADIA,EeVIwT,AThBJtW,APiBAA,AYWE,ETfE,AQ0BJgR,AHxBE5Q,CDfF,APiBA,CWsBE,CKvBO,AdMF8E,ESiBLpC,CKvBU,CRDH,CQCK,ARDJzC,GNOK,GSiBb,AHxBc,ANOE,CSiBhBS,AHxBe,KAAK,CGwBpB,ATjBuB,CMPD,OGwBtBgC,SAAA,QAAAC,SAAA,EHxByD,CGwBzDD,AHxB0D,SGwB1D,MAAG,CAAC;AGNR,ACAA,ALTA,ARDA,ESkBE,ACZA,AXFA,CWEC,CL7BD7C,APiBAA,AQDA,ELFIwK,AFaAlI,GM3BJ,APiBA,AWwBOgO,EJpCP,APgBA,ACMS,CAACxO,CUcC,CAACkP,IR3BI,AQ2BA,CAACxC,CR3BC,AITlB1C,APgBAvL,AWoBkB,CR3BC,CQ2BCkO,CAAC,AVdA,CAAC,CUcCmC,CAAC,AVdA,EMtBhB7Q,AIoCkB8Q,CAAC,CAAC,CJpCjB,AIoCkBH,EJpChB/N,EIoCoB,CAAC,CXpBjBzC,IOhBI,APgBA,EOhBE,APgBA;AcazB,ACAA,AChBA,ANOA,AEKA,APPA,COOC,CJdE,EG0BCsQ,AVdA,EEbE,AITF,APgBArQ,IOhBI,CAACoE,ANsBE1C,EDNA,CAACzB,CWoBG,EAAXoQ,EVde,CDND,COhBC,APgBAtQ,COhBCH,ANsBE4B,GMtBC,APgBA,COhBC,EIoCT,CXpBY,GCMK,IDNEzB,IAAI,KAAK,UAAU,EAAE,qBAAqB,CAAC;Aca7E,ACAA,AChBA,ANOA,AEKA,AVNA,AGDA,EJKE,EeVIoW,ALwBF/F,AH3BDxQ,ELAG0K,AITF,APgBAtK,CQPD,EQGQ,CTZH,AIoCE,CJpCDsL,CSYKuK,ALwBVzF,CKxBW,AhBIJ,CGPG,AHOFnQ,EGPI,AITF,CJSG,AaGE+V,ATZJpW,CIoCL,EJpCQ,APgBA,COhBC,APiBb,CgBLkB,ETZF4C,CSYKyT,AhBKjB,CAACxW,IgBLqB,ETZF,CSYKyW,KAAK,CAAC,GhBKd,CAAChW,OAAO,CAACH,IAAI,CAAC,IAAI,CAAC,EACxC,4BACF,CAAC;AcUL,ACAA,AChBA,ANOA,AEKA,AVNA,EDIE,EMtBA,AIoCEuQ,AH5BDzQ,ELCG,AHUF,EWiBI,CH5BL,APcM8B,CDHD,AWiBJ2O,CXjBK7Q,AQTP,GG0BM,MH1BN0O,APYkB,ODHK,EQTvB,CRS0B,CQTf,GRSmB,CAAC1O,gBAAgB,CAACY,MAAM,CAAC,UAAAC,CAAC;AcU1D,ACAA,AChBA,ANOA,AEKA,AVNA,ADIA,CAAC,GeVK8V,ALwBFzF,ER3BEpG,AQ2BA,AH1BFvK,ERQsD,AWkBtD2Q,CKxBO,CLwBL,EKxBQwF,CRFH,CAAClW,CRQkDK,CAAC,CgBN5C,CbHD,EAAE,AaGE,ARFJ,CLDG,AHS+CP,AQRjD,CQEK,GhBMgD,CQRhD,EAAE,mCAAmC,CAAC;AMmB9D,ACAA,AChBA,ANOA,AEKA,AVNA,IKlBE,AIoCE6Q,AH1BF,ELDI,AHQkE,AWmBlE,EXnBmE,AWmBrEA;AGPJ,ACAA,AChBA,ATZA,AGYA3P,AEQAA,AVFA,ADIA,EUcE,AH3BC,CG2BA,CKxBGoV,AhBKJ,AWmBE,ER3BE7L,COGN,AEQA,CFRA2E,AEQA4E,CIRW,ENAX,CMAcoC,ENAdhH,GMAmB,ANAnB,GPHoB,AaGE,CJQtB,CTXsBjK,AaGE,EJQxB6O,aAAA,gBTXwC;AWoBxC,ACAA,AChBA,ATZA,AGkBO,ACkBP,ACbO,AVLA,ADIP,CUcC,CH5BE,EEUU3E,AEKAqF,ETdP,COSU,EFVb9G,ANUa5I,CQAG,SAANqK,AFVV,GEUaA,AEKe,CFLXC,EEKc,IFLR,EAAEC,GEKfmF,CVL6B1P,CAACC,CQAT,EAAE+J,ARAU,EAAE,GQAP,EAAK,MEKf0F,CAC7BtE,IAAI;AEKN,ACAA,AChBA,ARLG,AIgBK,AXDR,EMzBE,AGqBA,AFxCsC3C,ANwCtC,EcNI8I,AhBKJ,EGRI7L,ADSAxF,GQAG,CRAC,GQAGmJ,ARAApJ,ECTE,CaGG,AdMF,CCTCE,EaGImR,ARlC2B,KQkCtB,GAAG,EAAE,CNMV,CACjBhH,MAAM,CAAChB,CAAC,GAAGiB,MPVoB,AOUd,GAAGhO,IAAI,CAACiO,GAAG,CAACN,GAAG,CAACF,KAAK,CAAC,CAAC,EACxCM,MAAM,CAACf,CAAC,GAAGgB,MAAM,GAAGhO,IAAI,CAAC+B,GAAG,CAAC4L,GAAG,CAACF,KAAK,CAAC,CACzC,CAAC;AIQH,ACAA,AfXA,AUIA,ACeA,AH3DgD9N,AI8C9CqO,AXDF,CSDC,CRHC,EKtBA1P,EJaI,AScE,AVLFqF,CKtBJ,ACnB8C,CAAA/D,ENyCtC,GAAG,CAAC,CMzCkC,CNyChC,EMzCgCyM,UAAA;AMoDhD,ACAA,AChBA,AhBKA,AWmBA,ACdU,AXAV,IM3BE9N,ALuBEoF,ECTEyF,EDSE,CKvBN,EAGA,ALoBS,ECTE,CDSC,CCTC,CAAC,CDSCzF,GKpBfb,CLoBmB,UKpBRxE,GAAG,EAAE;AO+BlB,ACAA,AChBA,ANSA,ACeA,ACdEoU,AXAF,EDRE,AEIA,EcNIuC,EbHA,AIXF,IAAI,CKwBK,EIVE,CTdH,CAACjL,CScK,EAAE,ETdF,CAAC1L,GAAG,CAAC,EAAE;AO+BzB,ACAA,ALPA,ACeA,ACfe,AXCf,ECJEqF,EFLArF,EGJI+K,ADSA,CFLJ,COfI,CLoBG1F,GKpBC,CAACqG,ALoBE,GAAG,CCTC,CIXD,CJWG,AIXF1L,ALoBE,CCTC,EIXA,CAAC,CAAC,CAAC;AO+BvB,ACAA,AChBA,ANSA,ACeA,ACfEqU,AXCF,ECJE,EFNApU,EGHI,EIXA,CPcJ,AYSS,AVHFoF,EFHP,EEGW,EKpBA,IAAI,CAACqG,APiBhB/K,KOjBqB,CAACX,EPiBtB,COjByB,CAAC,APiBhB;AccZ,ACAA,AChBA,ANSA,ACeA,AChBa,AVFb,ADIA,IeVM4W,EbHA5L,AIXF,APiBA5K,KGNO,EAAE,AHMF,CGNG,AHMFC,IgBHQ,EhBGF,CgBHK,AhBGJ,CAAC,CgBHK,GhBGD,CAACO,QAAQ,EAAE,kBAAkB,CAAC;AcctD,ACAA,ALPA,ACeA,AChBE0T,AXEF,IMxBE,EJWI,AHMF,GYKO,CZLH,CAAC1T,QAAQ,GAAG,IAAI;AccxB,ACAA,AChBA,ANIAS,ACoBA,ACjBa,AVDb,ADNAA,MEHM4J,AHMF,CUCJ,ATJA,CSIAuE,ATJA7N,EDGQ,CAAC9B,AUCT,GAAA2P,CPPe,EAAE,AOOjB,CPPkB,IFGlB,GAAA7N,EDGyB,CAACd,OAAO,CAAC,GCHlC,ODGkCH,CAAC;AccnC,ACAA,AChBA,ANQO,ACgBP,ACjBEoU,AVDF,ADGO,IeTD+B,ATdJ,AGsBWjH,ATCApN,EEZP,EHK6B,ACOlB,GAAG,ESDE,AEDP,CAAC,CZLuB9B,CAAC,AUMf,CVNgB,CAAC,CM4dlB,CU9dF,AfST8B,A,GeTYiU,CfSRjU,CSDJoN,ATCQnN,GeTS,CfSL,EeTQkU,AfSNjU,EAAE,CSDPkN,CAAIH,ATCK9M,IAAI,CeTO,CNQV,ATCKC,EeTQ,ANQXiN,CMRY,GAAG8G,EfSJ,ESDH,ATCqB,ESDhB,GMRW,GAAG,CAAC,GAAG,CAAC;AFiBlE,ACAA,AChBA,ATdA,AIsCA,AClBgB,AVAhB,EQEE,AEDG,AXC0D,IEXzDzL,AHIoC,AUOpC4E,ATAyCjN,CSAxC,CVPoC,EGJjC,AOYLnB,ATD8C,EEXvC,CAAC,AFWsCoB,CSC1C,CAACiN,KAAK,CAACF,CTDmC,CAAA/O,MSC3B,ATD2B,CSC1B4N,CAAC,GAAGe,GTDsB3M,GSChB,CAAC4L,CAAC,EAAEmB,ETDY,MSCJ,CAACpB,CAAC,ATDE1L,GSCC0M,MAAM,ATDP,CSCQhB,CAAC,CAAC,ATDV3L,GSCa,GAAG,GAAIpB,ATDpB,ISCwB,CAACgC,CTDtB,CSCwB,GTDpB;AaS1D,ACAA,AChBA,ATdA,AI4BArC,ATRA,EQGE,AEFA,AXCAjB,EeRI0W,EbHA,AHIF,CWaJ,CAAAlG,CVNS,CDPD,ACOEvQ,CDPDR,GgBDO,EfQA,CeRG4W,ALcnB,AVLIzT,GUKJ4N,EKdwB,GAAG+F,AfSf,CAAClU,CDRY,CAAC3B,CWa1B,CVLiB,CAAC,GeTkB,AhBCJ,CCQVkC,EeTiB,AhBCJ,CgBDK,AhBCJ,KCQN,CAACN,EAAE,CAAC,IAAIM,QAAQ,CAACL,IAAI,CAAC,IAAIA,IAAI,GAAG,CAAC,EAC5D,oBACF,CAAC;AaMH,ACAA,AJOO,ATjBA,EKvBL,AG0BA,AEFA,EZNA,AWsBWuO,ATjBA5L,ECTP6F,AOYA2E,AEFEiF,CFED,GAAG,CAAC,EAAE,CPZC,CSUG,CTVD,AQ0BS,CR1BR,CSUGD,CDgBQ,GTjBG,GAAG,GSiBrB5D,ETjB0B,CUCN,GAAG,IAAI,EDgBfA,CACvBX,IAAI,EACJd,MAAM,EACN0B,MAAM,EACNT,IAAI,EAID;AGdL,ACAA,AChBA,AdKwCrP,ESyBnC,ACvBH,AXIA,EM7BArB,AG2BE8P,CAAC,CPZC,AQ8BJsB,ACpBM4D,CLzBN,ALuBsC,CQIhC,ARJgC1P,GQI7B,GCkBD,CDlBK,ECkBLxC,ACpBS,CFED,EEFIiS,CFEDjF,CAAC,CAAC,GCkBb,ATtB8B,CSsB9BhP,ECpBqB,AVFSwE,GUEN,CDoBxB,ACpByB,QDoBzBxC,MTtB8B,GSsB9B,QAAAC,SAAA,GAAAD,SAAA,MAAG,MAAM;AGVnB,ACAA,AChBA,ENSE,ACiBiB,ACnBjB,AXIA,EeXIiU,ATnBJ9W,APoBA,EGJImL,AQ8BJiG,ACpBM4D,AXIAhS,EWJE,CTVD,AIhBP,EJgBS,AIbT,AKuBW6R,CTVD,GFcK,CUgBL,EVhBQ5R,CeXC,AL2BTJ,CJ3CV+K,ESgBsB,AfWA,CAAC1K,CWJC,CIPC,CfWC,CWJC,AXIA,CUgBjB,ACpBkB,AXIA,CUgBlBrC,MJ3CV,AI2CU,EJ3CO,MI2CPgC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,SAAS;AGVxB,ACAA,AChBA,AhBCA,EUQE,ACiBsB,AClBtB,AXGA,IEdI,AIbFiB,AI2CFuN,ACnBIhC,AXGElM,CWHD,EFCE0M,CAAC,EHzBA,CAACnE,AN2BI,GUgBH,AVhBM1I,CWHX4L,ELxBU,AI2CL/L,CJ3CM,GKwBX,CLxBe,AKwBLmS,CLxBMvJ,AN2BI,CWHR,EDmBP,AVhBkB/I,CUgBlB7B,ACnBUiU,CLxBM,CAAC,CAAClU,AN2BI,GUgBtB,GCnBmB,CLxBM,CAAC,CKwBJ,CAAC,CDmBvBiC,ACnByB,OLxBCpC,CAAC,CI2C3B,QAAAqC,SAAA,GAAAD,SAAA,MAAG,QAAQ;AGVvB,ACAA,AChBA,AhBCA,AUQA,CAAC,CCmBC,ACnBAwM,AXGA,CWHC,CITG0H,EbHA3L,AFeAhI,EM7BiC,CI6C9BkN,GCnBN1B,CTZU,AaGE,AL4BF,CAAC0C,CR/BC,AId4B7Q,AN6B5B,CEfC,AaGE,ATjB0B,CAAC,CAAC,AI6C5B,ACnBf,AXGe,CeZG,AL4BF+O,ACnBP4E,AXGO,MUgBM,CAAC5F,CAAC,CCnBN,CDmBQgB,ECnBL6E,IDmBW,CAAC5F,CAAC,EAAEyC,CCnBN,KDmBY,CAACvC,CCnBbC,MAAA,CDmBqB,ACnBjBoG,CDmBkB,CAAC,ACnBjB,CDmBkB,CAACtE,CCnBhBoE,GDmBoB,CAAC,KCnBZ,GAAG,CAAC,CAAE;AEQzD,ACAA,ACfA,AhBAA,EYSEzF,AXGA,CWHC,CITG2H,AL2BFvG,ER9BE,AIhBwC,AN+BtCpN,EM/BuC,AI8CvC,EAAJoN,CVfS,CWHV7B,EDkBK,AVfQ,IWHb,CAASwF,IXGJ/Q,CeZkB,GAAG,CJSR,AXGRA,CeZkB,AfYlB,EAAS,IWHDuL,MAAA,CAAIoG,EAAE,GAAGD,WAAW,GAAG,CAAC,CAAE;AEO/C,ACAA,ACfA,ANQA,EVZE,AYcA1F,CAAC,CIVG4H,AL2BF,AVfA,EEfE5L,AIhBF,EN+BIrL,EEfE,AIhBF,CAACyL,CJgBG,ASaTmD,CXEU,GEfG,AIhBF,AN+BEnM,CeZG,AL2BF,CCjBd,AXEe,CM/BD,AI8CE,ACjBPgN,CIVU,ATnBJ,CAAC,CSmBK,GJUN,EDiBS,CCjBN0E,WAAW,GAAGE,SAAS,GAAG,GAAG,OAAAzF,MAAA,CAAIoG,EAAE,GAAGD,WAAW,GAAG,CAAC,CAAE;AEM5E,ACAA,ACfA,ANQA,EEGE1F,CAAC,CIXG6H,ATnBJ,APcAnX,AWgCE,AVfA,EEfE,CHFJ,CCiBQmD,GAAG,CWDV0L,EXCa3L,GeZG,CJWhB,AXCiB,CWDRwM,AXCSvM,CeZC,CAAC,CfYC,CUeD,AVfE,CAAC,CUeD,AChBP,GAAGiR,MDgBa,KChBF,GAAGE,SAAS,OAAI;AEKhD,ACAA,ACfA,ANQA,EH5BG,AK+BDhF,CAAC,CIXG8H,AhBNJnX,AWiCE,AVfA,EEfEsL,EFeEpI,CDlBN,EAIA,ACcS,CWDR0L,CTdU,CFeCzL,CEfC,AQ8BA,EAAEgO,CK3BG,AJWjB,CTdgB,AScP1B,CZbV3O,CgBEqB8V,AfYF,EAAE,EUeE,AChBP,GAAGzC,IZbPjU,IAAI,CgBEqB,ChBFnB,CYaY,CIXUyW,EJWPtC,SAAS,GIXY,GAAG,CAAC,AJWhBzF,GIXmBsI,GJWnB,CAAIrC,SIX4B,IJWf,CAAE;AEK/D,ACAA,ACfA,ANQA,EH7BG,AKiCDxF,CAAC,CIZG+H,AL2BF,ER9BE,AHCFjX,ACcE,GMjCHwN,CNiCSrK,EWATsL,CZdQ,CAACxO,CgBEK,AfYA,EMjCd,AIgDc,CK3BG+W,AJYjB,AXAiBjU,CUeDkO,ACfP3B,CZdM,CAACvP,ACcI,GAAG8C,CDdH,AYcL,GAAGmR,CZdM,AW6BE,GK3BK,CfYC,EeZE,ChBFHjU,GgBEO,AJYT,CZdM,EYcHmU,GZdQ,MYcC,GAAG,CZdM,EAAE,AYcL,OAAAzF,MAAA,CAAIoG,EAAE,GAAGD,EZdiB,CAAC,QYcP,GAAG,CAAC,CAAE;AEI5E,ACAA,AChB0C,ATrBvC,AG8BH,EHlEsCrV,AKuEpC2P,CAAC,CIZkBgI,AL0BjB,ER9BE9L,AHCFpL,ACcE,IAAMoD,EWCTqL,CZfQ,CGDG,AHCFxO,EGDI,CQ8BC,CK1BkB,AJYhC,CDcgBiR,ACdP+C,CThBQ,AHCF,ACcI,CMtE0B,APyD1C,ECamBxR,EDbf,CAAC/C,CCakB,CWCR,EXAX4B,IAAI,CDdM,AYcCmN,AXANpL,CDdMnD,ECcH,CAAEiD,EWAC,CAAI0R,CZdG,CgBEOsC,AhBFNpX,AYcF,AXAF,GWAK6U,AXAFrS,CDdK,CAAC,ECcF,CDdK,CAAC,EgBEH,AhBD7B,ACa+BjB,GWAI,CXAA,CAACgC,CWAE,CAAC,AXAD,CWAG,EXAA,CAAC,CAAC,CAAC,GACxCH,KAAK,GAAGZ,IAAI,CDblB,CAAC;AceL,ACAA,AR1EgDtB,AG8DhDA,EMHmCsG,AL2BjC,ACbA2H,CDaC,ACbA,CDaC,ER9BE,AHIF,ACaErP,CMzE0C,AG8DhD,CH9DgDqB,AG8DhDsO,EVFQ,CgBD2B,AhBC1B9P,ACaE,CedwBwX,AJchCzI,EXAWpM,CMzEkC,EG8DhD,CH9DgDmL,AKyE7C,AXAe,CWANyG,CZbM,AUElBzE,CVFmBrP,ACaEiD,IDbE,CgBDY,AT3Da,AP4DxBrD,EgBDWoX,AJcd,CFXrB,CVF4B,CAAC,AYaLjD,AXAO,IAAI5R,EAAE,EedF,CJcF,AXAOD,IAAI,CAAC,EWAZoM,MAAA,CAAIoG,EAAE,GAAGF,SAAS,GAAG,CAAC,CAAE;AEEzD,ACAA,ALRO,ACoBP,CAAC,CK5BkC,AJgBjCzF,CAAC,CZdD,AUMWU,EPVPvE,AaE6B5B,Afe7BxG,GEjBG,EAAE,CAAC,AaEuB,EJgBhCwL,CIhBgCxG,AfepB,CSPU,ETOP1E,CSPU,CEQzB,CAAWsR,EAAE,GAAGF,CIhBgB,CAAAuC,ANQtBtH,OEQe,GAAG,CAAC,AXDO,CSPdA,ATOe1M,CSPX2M,CMRM,GfeU,CWCT,AXDU,KSPP,EAAEC,WAAW,EAAK;AISzD,ACAA,EChBE,ANQA,AESA,EXFE,CAAC,CEhBC,AOSAC,AESEoE,KIjBN+C,AfeS,CWEG,GAAG/G,CFTD,GAAGL,AESE,CAAC4B,IAAI,CAACxC,CIjBbxL,AJiBc,CAAC,GFTC,GMRT,ANQYmM,EMRV,QNQoB;AIS3C,ACAA,AJYA,EDpBE,AESAsE,EIlBqB,AhBGrB,EGHIzU,AFgBAuD,EehBiBlC,AJkBf,CFTCgP,AESAQ,IIlBc,AJkBV,CAAC,CTlBC,AFgBA,EEhBE,CFgBC,CEhBC,AOSA,ATOA,GSPG,CAAC,GAAG,EAAER,UAAU,IAAI,GAAG;AIS7C,ACAA,AfdA,AW0BA,EDpBE,EMVqBvQ,AJmBnB8Q,AXFA,EEfE,ESiBE,CFTCP,CESCI,IAAI,CAACiE,IInBQ,ANUJ,GAAG,CESC,EFTE,CMVF8C,CNUInH,UAAU,GMVd,CNUkB,GAAG,mBESmB,CAAC;AEAhE,ACAA,AfdA,AW0BA,EDpBE,EMVEhP,AJmBAqP,AXFA5N,EEfE8I,GaFF,ANUKyE,CESC,CTjBC,CaFPtG,AJmBQ0G,AXFA,CEfC,AFeAtQ,CEfC,ESiBE,CAACuU,CInBb,AfiBc,CejBd9M,ANUe,ATOA,IejBf,EJmBqB,KIlBnB3D,MAAM,CAACC,MAAM,CACX,qBJiByD,CAAC;AEAlE,ACAA,AfdA,AUMA,ACoBA,CDpBC,CTOC,CAAC,CEfC,ASiBA,CTjBC,CAAC,AaAIkK,KAAK,EAAE6H,CAAC,IJiBA,EAAE;AEApB,ACAA,ALTE1U,ACqBF,EX9BE,AYmBA,AXDAgC,CWCC,CAAC,EIjBM8K,CNOR,CAAA6B,GTSS,CehBK,EAAEgG,AfgBJrS,MSTZ,GAAAqM,YAAA,ATSiC,CAAC1M,KAAK,CAAC;AaC1C,ACAA,AJYA,ECXE,AXAA,EEjBE,AaAI,AhBHNtD,CgBGO,EACD8D,AhBJN,ECoBO,KefH,CAAC,MfeQ;AaAf,ACAA,AJYA,ECXE,ETjBE3C,AaIAf,AhBRFH,ACqBE,IAAIoD,CEjBJ,AHJF,AYqBO,CTjBAnD,CaIE,AhBJT,CgBIUG,KfaK,CebC,CACZc,AfYa,CDjBjBH,GGAoB,CAAC,AaKjB,CAAKwW,UhBLMrX,CGAY,EaKL,ChBLH,CgBMf,ChBNiB,0CgBOnB,CAAC;AFUL,ACAA,AJYA,IKpBIgB,AJSAoT,ETjBExQ,AHAF3D,ACiBEwD,GeTF,CAAK6T,AJSC,ETjBE,ASiBRlD,CTjBS5I,AHAF,CAACtL,IgBQK,AJSP,CTjBS,CAACc,AHAF,CgBQE,AhBRDhB,IGAC,AaQAqT,AhBRG,CGAE9H,AFiBC,CAACrI,EDjBA,EGAG,CAAC,CAACxC,GHAEV,ACiBE,CAAC,GEjBE,AHAD,CGAE,CaQnB,GhBRsB,MGAHO,CAAC,GHAY,EAAE,qBAAqB,CgBQvDmO,AhBRwD,MgBQxD,CACQkH,CAAC,iBAAAlH,MAAA,CAAYmH,CAAC,yDACtC,CAAC;AFON,ACAA,AJYA,IKlBI7U,AJOAsT,AXAA,EDjBArU,EGDqC,CaWrC,CAAKqX,GhBVE,CAACpX,CGDiCK,CAAC,CAAC,CAAC,AaW/B,CAACgX,ChBVA,CACZ,AYgBe,CIPA,CAAAvO,AJOE,EZhBb,CAACrJ,MYgBY2U,GZhBH,CAACnU,OAAO,CAACH,CgBSR,CAAAgB,EhBTY,CAAC,CYgBVuT,CIPH,CAAK,AJOA,CIPC,AhBTW,CAAC,AYgBXC,EZftB,AYewB,EAAExF,KAAK,EAAK,mBZdtC,CAAC;AccL,ACAA,AJYA,EVXE,CAAC,CePChO,EbZ4C,AHK5C,AYcEoT,ETnB2C,CaY7C,CAAKhE,AhBPD,CAACzQ,CYcG,CAAC6Q,CIPA,GAAG,AJOC,CAAC,EZdA,CgBOE4C,EhBPC,IAAI,CAACzT,SAAS,CAACW,EgBOZ,CAACU,GhBPiB,CAAC,CgBOlB,CAAKwW,GAAG,CAAClE,EAAE,CAAC,ChBPM/S,CAAC;Acc5C,ACAA,AJEAW,AVDA,CAAC,KEnBKF,CQoBN,CXhB4C,AWgB5C+P,ACDQ0D,GTnBF,CAAKlJ,GHIqChL,CAAC,CGJjC,ASmBC,GTnBE,AQoBnB,CRpBoB,AHIkCP,CGJjC,CQoBrB+Q,CCDiBrC,CZfyC,KYezC,CAAO6F,EAAE,EDC1B,CCD6BN,WAAW,OAAAvF,MAAA,CAAI8F,EAAE,GACpCG,aAAa,GAAG,CAAC,SAAAjG,MAAA,CAAMM,KAAK,OAAAN,MAAA,CAAIuF,WAAW,OAAAvF,MAAA,CAAIiG,aAAa,GAAG,CAAC;AED1E,ACAA,AJWO,IR7BH,AaYA,ALiBStD,CR7BR,CAAC,AHGoD,AYiBpD,CAAC,CZjBoD,AYiBnD,IDSa,GAAG,SAAXA,QAAQA,CACnBjB,IAAI,EACJd,MAAM,EACN0B,MAAM,EACNT,IAAI,EAID;AGlBL,ACAA,AdCA,EUiBK,ERrCE,AaaHvP,AhBTF,AYiBE,EDaFiQ,GKrBE,CAAKwG,CbbFzW,GQkCG,ERlCH,CQkCG2B,SAAA,CAAAhC,MKrBsB,ALqBtB,GKrByB,CAAC,ILqB1BgC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,MAAM;AGdnB,ACAA,AdCA,EEpBE,AQiCiB,ACZjB,CAAC,CIRC,ELqBFuO,EKrBMwG,OAAO,CLqBH,EKrBMpW,CLqBNqB,KKrBY,CAACoB,GLqBb,CAAApD,KKrBsB,CLqBtB,QAAAgC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,SAAS;AGdxB,ACAA,AHEA,AXDA,CWCC,CDYuB,EKpBpB,AhBTF,EW8BAwO,GKrBO,IAAI7K,CAAC,ELqBF,CKrBKtF,ELqBL2B,GKrBK,CAAKsL,KLqBV,CAAAtN,EKrBkB,CAACgJ,GAAG,ALqBtB,EKrBwBrD,CAAC,IAAI,CAAC,ALqB9B3D,EKrBgC2D,CAAC,IAAI,ELqBrC,CKrBwC,EAAE,KLqB1C1D,SAAA,GAAAD,SAAA,MAAG,QAAQ;AGdvB,ACAA,AffA,ACaAzB,EEjBE,AQmCA,IKtBI,CfIN,CAAAmB,CUkBS+N,CKtBGpB,EfIZ,CUkBa,CAACoC,CKtBG,AfIjB/O,GeJoBrB,ALsBF,CAACsO,AVlBnB,IeJoB,CAAKqI,CLsBA,CAACrJ,CAAC,EAAEgB,MAAM,CAACf,CAAC,EKtBG,ALsBDyC,CKtBE1K,CAAC,CAAC,GLsBE,CAAC,CAACkK,IAAI,CAAC;AGfpD,ACAA,AZnBA,AHIA,AYiBA,AXLA,IUmBID,AVhBS7M,EeNP,ELsBE,EKtBEnC,ALsBNgP,IKtBU,ALsBN,CKtBOqH,EfMW,CeNR,CAAC5I,KAAK,GAAG,GAAG,CAAC,GAAG0I,OAAO,EAAE;AFO3C,ACAA,AZnBA,ASqBA,EZpBE,ACkBA,EUgBE,IKtBI1W,GfMN0C,EeNM,CAAK+T,GLsBI,EAAE,MAAM,AVhBX3X,KAAK,EAAgB,KeNC,GAAGwG,CAAC;AFOxC,ACAA,AZnBA,ASqBA,ANrGA,INgFEzG,AWmCE,AVjB+B,GDlBjC,CgBaM6X,AfKa/T,OeLN,AfKa,GeLVpC,AfKUoB,IeLN,CAACiV,ALsBA,EAAE,CKtBC,CAAC5I,AfKC,CAAArO,IeLI,ELsBE,AVjBN,CeLO,GAAG,CAAC,GfKXgC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC,CAAC;AaEjC,ACAA,AHDAzB,ETtBEtB,EHGAE,AWoCE,AVlB6BL,EeJ3B,CJKN,CAAAiV,CZnBE,EAGA,GGNA,CAAAlL,AQuCa,EAAEyH,EVlBgB,CDf/BnQ,GGNA,EQuCuB,CCjBzB,AXDiC4C,GWCjCgR,UZhBE,ACe+B,EDfV,MYgBvB;AEEA,ACAA,AHCO,ITzBL7U,AakBE,ALsBA,ACfSkV,AXHT,EDfA,CGPF,GHOM,CAACpV,IYkBe,EDeP,CCfU,CDeRuR,CXjCD,CAACvQ,MAAM,AYkBZoU,EDegB,CXjCD,CAAC,OYkBLA,CACtB3E,IAAI;AEDN,ACAA,AHCQ,IT1BNtQ,AHQA,AWiCE,AVlBA8D,KEvBF,CFuBQ,CEnBR,AFmBSC,MUkBM,AVlBA,CAAC,CUkBCsN,CRrCjB1F,EFmBoB,EAAE9H,OAAO,CEnBjB+H,CFmBmB,GEnBf,EAAE;AWsBpB,ACAA,AHCE6D,ANpGF,EKmHE,CAAC,CKtBC,ALsBA,CLnHE,CH6Ec,ASuBZ,AXHFzL,IEpBc6H,IFoBN,EEpBM,AFoBJ,AKjGC,CLiGArK,GKjGI,GLiGE,CAACyC,EKjGP,CAAW,MLiGK,QKjGhB,CAAjB;AQoGA,ACAA,AJgBA,AChBU,CDgBT,GKtBG/C,AhBXF,EGLE,AFoBEgD,GeJF,CbhBI0H,AagBCmM,GfII,CEpBD,CFoBGvW,IEpBE,EFoBI,CAACyC,CEpBD,CAACsG,CagBE,CAAC,CAAC,IfIK,CEpBD,EAAE;AWuBhC,ACAA,AfjBA,AYiBE4J,ANnGF,IU6FIjT,EfIEwB,EEpBA,CagBF,CAAKsV,AfIC,CWEG,CTtBH,AFoBE,CEpBDlM,GFoBK,IEpBE,CACV,Caea,CAAC,CAAC,ObfL,EACV,IAAAvJ,UAAI,EAAC,IAAI,CAACgI,QAAQ,EAAEqB,IAAI,EAAE,IAAI,EAAE,UAAAG,KAAK,EAAI;AWqBjD,ACAA,AfjBA,AWiCA,ACjBe,MXDTpJ,IElBIkJ,IFkBI,EElBA,AFkBE,CElBDtB,QAAQ,AFkBP5H,GElBUoJ,KAAK,CFkBf,EAAM,CAAC;AaGvB,ACAA,AJgBA,ACjBEsI,EZnBA,EgBcE,AfIA,CAAC,CAAC,GWCK,CTnBDxI,MAAI,CAAC5K,aAAa,CAAC,CAAC;AWqB9B,ACAA,AJgBA,AClBa,IIJTC,AhBfFnB,ACmBE,GDnBF,CGCM,CAAC,AacL,CbbE,AaaGkY,CbbF,QaaW,CAAC/W,KAAA,CAAKiN,QAAQ,CAAC5D,QAAQ,CAAC;AFO1C,ACAA,AJgBA,AClBE0D,IZpBAjO,ACoBE,CWAG,CTjBH,ASiBI,EXAA,CDpBN,ACoBOA,EDjBP,GCiBY,GAAGyB,GDjBfR,CCiBmB,CAACkD,GAAG,CAAC,IAAI,CAACH,GDjB7B,EAAgB,GCiBqB,EAAEvC,IAAI,CAAC2C,GAAG,CAAC,IAAI,CAACF,OAAO,EAAElE,KAAK,CAAC,CAAC;AaGvE,ACAA,AJgBA,ACnBQ,EACH,ETjBH,AaaE,AfIA,EDlBc,IAAAkB,KAAA;AcqBlB,ACAA,AJgBA,EClBE,EIJEA,AfIA,EDlBA,AYkBEmO,CAAC,CXAC,CeJJ,AfIKhL,CeJA6T,AhBdD,CAACrY,MYkBQ,GZlBC,CAACe,ACkBE,GAAGZ,GeJE,ChBdA,CAAC,ACkBE,CeJAkB,KAAA,CAAKgX,GhBdP/W,CAAC,agBcuB,CAAC+G,IAAI,CAAAgB,sBAAA,CAAAhI,KAAA,CAAK,CAAC;AFO9D,ACAA,AJgBA,EClBEmO,AXAA,CWAC,CTjBD,AaaEnO,IhBfwB,CgBexB,CAAKiN,GJINS,EZnB6BzN,CAAC,CAACD,CgBejB,CAACJ,AJIf,CAAUqT,EZnByB,CAAC,OgBeV,CAACjT,AJIN,KIJM,CAAKgX,CJIP,gBIJwB,CAAC;AFOrD,ACAA,AZnBA,AQmCA,EClBE7I,CAAC,CIJCnO,EhBhBmC,EAAC,CgBgBpC,CAAKjB,EJIN2O,MAAA,CAASa,IIJU,CAAC,CJIL,GAAG0E,WAAW,GAAGE,SAAS,OAAI;AEGhD,ACAA,AZnBA,AQ2BAjT,AL3GA,EMkGEiO,AXDA,CWCC,CZrBD,CM7EI,CU4FiB,CLevB,CAAAkC,ICTG3C,CILG1N,GLcN,EKdM,AJKH,ANlGgB,CU6FRiN,ALcXoD,ACTY9B,MAAM,EILC,ALcnB,CKdoB1O,AJKCoT,WAAW,GILE,AJKCE,CILAnT,KAAA,CAAKgX,EJKI,OAAAtJ,MAAA,CAAIX,CILS,CAAC,GJKL,GAAG,CAAC,CAAE;AEE3D,ACAA,AZnBA,AQkCO,AVjBP,AKjGE,EN4EC,AYsBDoB,CAAC,CINuD,ALsB7CmC,CKrBT,CAAC,ELqBY,GAAG,CChBjB5C,MAAA,CAASa,CDgBC+B,IAAIA,CAAIlB,AChBH,GAAG6D,CDgBI,EAAE1C,EAAE,EAAEC,EAAE,EAAEnB,AChBH,GAAG8D,GDgBM,EAAE7D,IChBC,ODgBU,AChBV5B,EDgBe,IChBf,CAAIX,KAAK,CAAE;AEEvD,ACAA,AdFA,AKjGE,EH4EA,AHDC,AWuCD,ACfAoB,CAAC,CILCnO,KAAA,AhBnBDxB,AWuCM4Q,CKpBAkH,GLoBI,ACfV5I,CDeW4C,CLpHK,EAGjB,CU6Fe,ALoBC,CKpBA2G,AhBnBf,AWuCgB1G,ACfhB,CAAU0C,CDeQ,CAAC3F,CAAC,EAAEiD,EKpBC,ALoBC,CKpBAvQ,ALoBCuN,CAAC,EAAEiD,ACfP,ANrGL,EUgGQ,ALoBM,ALhH/B,CU4F8B6F,ALoBE/I,CAAC,EAAEkD,CCfb9C,CDee,CAACH,CAAC,CAAC,CAACiC,CCfnB,CAAIzC,CNrGT,CUgG0B,ALoBE,CKpBD,ALoBE,AL/G9C,EMgG+B,CAAE,YNrGhB,EAMjB,mBANiB,EAOjB,YAPiB,EAQjB,YARiB,EASjB,WATiB,EAUjB,iBAViB,EAWjB,iBAXiB,EAYjB,cAZiB,EAajB,aAbiB,EAcjB,WAdiB;AQsGnB,ACAA,AfzBG,ACuBH,AKrFE,EMwFAoB,CAAC,CTzBDtP,AamBEmB,ALoBAsP,GRvCF,EamBE,CAAKvQ,KLoBM,ACdZ2O,EDcC4B,ICdD,CAAYvC,CINO,CAAC,GJMH,CDcL,MCdS;AEAxB,ACAA,Af1BG7M,AM7DD,EMyFA,AXRAtB,EEnBAE,AQwCEuQ,EKrBmB,AJQf+D,CZ5BL,CAAAjT,CGCD,CQwCQ,CRpCR,CQoCEkP,ACbU,CIRerP,CfA3B,CDpBC,AY4BcoP,AXRf1M,AKjGiB,EAiBjB,CUgF2B,AhBpB1BlE,CgBoB+B8X,AJQb,CTvBnBxL,ASuBoB6F,IAAI,CAACxC,CAAC,CTvBnB7D,AaeiC,AJQb,CIRc4M,AhBpBxC,ACoBD,EEfU,EAAE,EaemC,CAAC,CAAC,EVjGhC,EAkBjB,YAlBiB,EAmBjB,qBAnBiB,EAoBjB,oBApBiB,EAqBjB,aArBiB,EAsBjB,WAtBiB,EAuBjB,aAvBiB,EAwBjB,cAxBiB,EAyBjB,eAzBiB,EA0BjB,gBA1BiB,EA2BjB,IA3BiB,EA4BjB,WA5BiB,EA6BjB,WA7BiB,EA8BjB,WA9BiB,EA+BjB,WA/BiB,EAgCjB,aAhCiB,EAiCjB,eAjCiB,EAkCjB,gBAlCiB,EAmCjB,WAnCiB,EAoCjB,YApCiB,EAqCjB,MArCiB,EAsCjB,OAtCiB,EAuCjB,OAvCiB,EAwCjB,SAxCiB,EAyCjB,OAzCiB,EA0CjB,UA1CiB,CAAnB;AQwGA,ACAA,EJeE,ACbA9D,CDaC,CKtBgD,ALsB/C,AVtBFvU,EEfY,AaesC,CfAlD,CWSM,CAAC2Q,CTxBKzE,GSwBD,CAAC,ETxBA;AWuBd,ACAA,AJeA,AL3EA,CK2EC,GKvBoD,AJUjDwE,AXVFzQ,EEdE,ESwBI,CXVN,CEdMwL,ASwBE8E,CIV2CpP,AfInD,EElBS,CSwBG,CAACqT,CIVsC,EbdrC,EFkBdjQ,EElBkB,CAACkH,ASwBE,GTxBC,EAAE,CFkBfxL,KAAK,EAAE,2BWM6C,CAAC;AEDhE,ACAA,ECRE,EJUEuQ,EXPc,EEjBZ,ESwBI,AXPQrP,EEjBR,ASwBEoP,CTxBDxE,EFiBO,CWOF,CAACyI,GTxBC,CACV,ISuBiB,CTvBZ,EACL,IAAAhS,UAAI,EAAC,IAAI,CAACiJ,GAAG,EAAEA,GAAG,EAAE,IAAI,EAAE,ASsB+B,CAAC,STtBhCA,GAAG,EAAI;AWqBzC,ACAA,AJeA,ICbI,EXPA,IEfMS,AFeFjM,KAAK,CEfC,CAACwL,CSsBG,ETtBA,ASsBE,AXPF,GEfGA,CFeC,CAACxL,CEfC,IFeI,EAAE;AaM9B,ACAA,AJeA,EKvBE,AJUA,CAAC,CAAC,IXPE,EEfIiM,EFeA,CAAC1H,GEfG,CAACtD,MFeM,CAAC,CAAC,KEfK,CAAC,CAAC;AWqB9B,ACAA,ACRA,ALuBA,ECbE,MTtBM,AFeF,CEfG,CACH,CAAC,CFcG,CAACjB,KAAK,GAAGyB,IAAI,CAAC0C,GAAG,CAAC,IAAI,CAACH,QAAQ,EAAEvC,IAAI,CAAC2C,GAAG,CAAC,IAAI,CAACF,OAAO,EAAElE,KAAK,CAAC,CAAC;AaMzE,ACAA,ACRA,ALuBA,AL3EA,EM8DE,GN9DI,CHyCF,EFcE,CWOG,GXPC,CAACuC,EKvDK,CACd,CLsDa,GAAGA,IAAI,CAAC,IAAI,AKvDX,CLuDY8B,CKrD1B,WLqDsC,EAAE,AKvD1B,EAGd,ELoD4C,CAACrE,KAAK,EAAE,IAAI,AKvD1C,CLuD2C0C,CKnDzD,GLmD6D,EAAE,EKvDjD,EAKd,MLkD+D8B,CAAC,EAAI,EKvDtD,EAMd,yBANc,EAOd,UAPc,EAQd,eARc,EASd,cATc,EAUd,uBAVc,EAWd,cAXc,EAYd,gBAZc,EAad,cAbc,EAcd,gBAdc,EAed,iBAfc,EAgBd,mBAhBc,EAiBd,kBAjBc,EAkBd,qBAlBc,EAmBd,WAnBc,EAoBd,OApBc,EAqBd,MArBc,EAsBd,eAtBc,EAuBd,kBAvBc,CAAhB;AQ6DA,ACAA,AJeA,EK1BE1E,EbRA,ASqBEwU,MAAM,AXPFpT,EWOJoT,EIbF,CAAA+C,AfMU,CAAChT,EWOH,UXPe,CeNvB,EfM0BG,CAAC;AaM7B,ACAA,AJeA,ALnDA,IUwBEzE,AJcEyU,GIdF,GfOMtT,KAAI,CAACyB,KWOQ,EAAE,CXPF,CAACzB,KAAI,CAACmD,CWOJmQ,WXPgB,EAAEtT,KWOjBuT,AXPqB,CAACzU,CWOpB,EAAE0U,EAAE,AXPqB,CAAC,CWOpBxF,KAAK,EAAK;AED1C,ACAA,AJeA,IRlCE,AaMAlP,EJeIsU,EXPA,CeRJ,AfQK,CAAC,CeLN,CJYU,CAAC5D,IAAI,CAAC,EIZhBrC,UAAA,EAAY;AFWd,ACAA,AZnBA,AQkCA,MK1Bc,AfMV,EWOIsG,EIbM9I,MAAA,CJaG,OAAA+C,MAAA,CAAO6F,EAAE,GAAGN,WAAW,OAAAvF,MAAA,CAAI8F,EAAE,GACpCzG,KAAK,GAAG,CAAC,SAAAW,MAAA,CAAMM,KAAK,OAAAN,MAAA,CAAIuF,WAAW,OAAAvF,MAAA,CAAIX,KAAK,GAAG,CAAC;AEF1D,ACAA,AZnBA,AQkCA,IVpBE,EeNE,AJcE,CAAC,CAAC,EIdA1D,QAAQ,GAAG,EAAE,CAAC,CAAC;AFYvB,ACAA,AZnBA,AQkCA,ICZI,CNvCE,Q;AQqCN,ACAA,AJKAnJ,ER5BE,AS0BA,CAAC,CXRD,EeNE,CLgBJ,CAAAoQ,EKhBU6G,ELgBV,GAAA7G,IAAA,GKhBsB,GAAG8D,WAAW,CAAC,YAAM;AFY3C,ACAA,AJcO,ACXP,AXRA,CWQC,GT3BCvV,AQsCW4R,GRtCX,CaaI9F,ILyBe,EKzBX,CAACsC,ALyBa,QKzBL,CAACxC,ALyBPgG,QAAQA,CAAIrB,EKzBM,CAAC/F,CLyBH,EAAEkH,EAAE,EAAEC,CKzBK,CAAC,ALyBJ,EAAEE,EAAE,EAAErB,MAAM,EAAEC,WAAW,EAAEC,IAAI,EAAK;AGbzE,ACAA,AdLA,AKjCE,EKoDA,ERvCAzQ,EQuCMqP,CAAC,ERvCP,EAIA,IQmCOT,KRnCP1C,CQmCO,CAAQuF,CLpDM,CKoDJ,CAACjD,CAAC,MRnCP5J,CQmCOgK,GRnCH,EAAE,CQmCC,CAAI6C,EAAE,CAAChD,CAAC,SAAAG,MAAA,CAAM8C,EAAE,CAAClD,CAAC,OAAAI,MAAA,CAAI8C,EAAE,CAACjD,CAAC,SAAAG,MAAA,CAAMgD,EAAE,CAACpD,CAAC,OAAAI,MAAA,CAAIgD,EAAE,CAACnD,CAAC,OAAI;AGbrE,ACAA,AHGA,AXRA,AKlCuB,EKqDrB,IRpCkB,AQoCZoD,EKzBF,EbXc1F,AQoCR,GAAGmE,GRpCK,CQoCD,CAACuB,IAAI,CAACxC,CAAC,CAAC;AGb3B,ACAA,AHGA,EDWEwC,AVvBA,IEbE,AQoCE,CAACnB,CKzBDnG,EbXE3F,CQoCG,CAAC,ERpCA,EaWE,GbXG,CaWC,EAAE,CbXC,CAAC6F,QAAQ,EAAE;AWuBhC,ACAA,AHGA,AN1CI,IKqDAgG,AVxBF1Q,GAAA,CEZI,AQoCE,EAAJ0Q,ERpCM,CAAC3E,CQoCH,MRpCU,CACV,UAAU,EACV,IAAAvJ,UAAI,EAAC,IAAI,CAACkI,QAAQ,EAAE7F,IAAI,EAAE,IAAI,EAAE,UAAA6F,QAAQ,EAAI;AWqBpD,ACAA,AHAArJ,AN1CuB,IKwDnBmP,AVzBFvQ,GWWF,CIXM,AJWNiV,CXXE,CETQ9I,AQkCA,CVrBR,CUqBEoE,IRlCU,CAAC9F,CQkCL,CCdV,CXPEhG,EWOFwQ,GTpBuB,GAAGxK,KSoB1B,GTpBkC,EFadzK,KAAK,EAAE;AaQ3B,ACAA,AHEO,IDYH,ACZSkV,EXTT,EeJE,EbTI/I,AFaF,CAACnM,CeJCuK,IbTI,ASsBW,AXTX,CEbCtJ,CQkCG,CCZU,AXTXQ,CeJC,ALyBE+O,GKzBC,AfIA,CAACrM,EeJE,CfIC,CeJC,AJab+Q,AXTa,EEbE,CAAC,CAAC,AFaA,CAAClR,OWSNkR,CACvB5E,AXVqC,EAAE7O,EWUnC,EXVuC,CAAC2C,GAAG,CAAC,IAAI,CAACF,OAAO,EAAElE,KAAK,CAAC,CAAC;AaQvE,ACAA,AHEQ,AN9Ce,EK0DrB,CAAC,CAAC,EVrBA,EEbI,CAAC,CACH,AaQEuK,AfIA,CEZD,AFYElG,OeJO,GAAG,EAAE,AfIA,GAAGrE,KAAK,QKrCZ,IAAM;AQ6CvB,ACAA,AHEEyP,AN/Ce,EK2Df,IRjCE,ASqBI,AXTJ,EeJE,CLyBGoC,CVrBD,CAACtN,AKtCc,EK2DV,QVrBM,CAAC,CAAC;AaQrB,ACAA,AJcA,ACbU,AN/Ca,CK4DtB,GRjCC,EaQE,AfIA,CeJC,EAAE,CfIC,CAAC5B,EeJE,CAAC,CAAC,CAAC,GfIG,CAAC,IAAI,CAAC0B,YAAY,EAAE,IAAI,CAACrE,KAAK,CAAC;AaQhD,ACAA,AHCEmU,IXRA,OWQW;AEAb,ACAA,AJcA,ACde,AN7CX,IH0BF,EaQE,GVlCM,WAAW,OAAO,KAAK,CAAL,CAAP,KAAoB,QAArC;AQ8CJ,ACAA,AZnBA,AQiCA,ACdEE,AN7CE,ILsCF,EeJE,GJWO,CIXH,CAACvI,OAAO,CAAC,MAAM,EAAE;AFYzB,ACAA,AZnBA,AQiCA,ACfa,AXNb,AKtCI,QUiCqB,CVjCf,MUiCqByJ,EVjCb,WUiC0B,CAAC8C,AVjCf,SAAS,GUiCkB,CAAC,AVjC5B,CAAc,KAAK,CAAL,EAAQ,IAAR,EAAd,CAA1B;AQ8CJ,ACAA,AZnBA,AQiCA,ACfEpK,AXNF,KWMO,CIZmD,AJYlD,EIZmD;AFc3D,ACAA,AJcA,AChBQ,AN3CJ,EHsBF,ASsBG,AXTH,EeHA;AFcF,ACAA,AJcA,AL3DI,EM4CF,ETvBAlO,AFaAA,GEbA,AFaA,EKlCM,CAAC,KAAK,MAAL,KAAgB,CAAhB,IAAqB,KAAK,MAAL,IAAe,CAArC,KAA2C,QAA3C,IAAuD,CAAC,KAA5D,EAAmE;AQ8CvE,ACAA,AJcA,AL3DM,EM4CJ,ETxBAC,AaaA,AfAAA,EWWMmV,GTxBN,AFaA,EETA,AFYA,CWQY,CN5CH,EM4CM,IAAI,CTpBnB/I,AFYA7H,WAAA,EAAa,CKpCT,CAA2B,CHwBf8H,IGxBoB,CAAL,CAA3B,EAAoC,KHwBX,AGxBgB,CAAL,CHwBT,AGxB3B;AQ8CN,ACAA,ACZA,AL0BA,AL3DK,EM6CH,ITtB+B,ASsB3BgD,AXTF,AKtCA,CM+CG,GTtB0B/C,AFazB,EKpCG,ELoCC,CAAC/J,CEboB,CSsBhB,EXTA,EAAE;AaUnB,ACAA,ACZA,ALkBAnB,ALnDM,EM6CJiO,CAAC,GTtBC,CQ4BJ,CAAAsC,AVfM,EEbEtF,EFaE,CWSPuC,AXTQrM,GUeX,CVfe,CAAC,CUehBoP,ACNG,AXTc,CWSJwC,GTtBQ,IQ4BrB,CR5B0B,GSsBF,CTtBM,CAACzJ,KSsBPkE,MAAA,CTtBmB,ASsBfX,ETtBiB,GSsBZ,GAAGkH,MAAM,CAAE;AEC5C,ACAA,AJaO,AL1DD,EU8BJ,AJgBA9F,CAAC,CDYUyC,IRnCP,AFaA,GUsBc,CRnCV,ASuBPlD,AXVO,CEbC9C,AFaAvJ,CUsBY,GVtBR,CWUZ,CAASkN,CTvBM,AFaA,CEZV,EQkCKqC,CVtBS,CWUJ,GAAGqC,EDYDrC,CAAIxB,IAAI,CRlCL,CQkCOtI,CRjCtB,AQiCuB,CCZC,CDYCuI,ERjCzBhO,ASqB2B8R,IDYI,EAAE7D,GCZG,CTrBhC,EAAC,IAAI,ASqB+B,CTrB9B9F,AQiCkC,EAAE+F,IAAI,EAAK,IRjCjC,EAAEpE,aAAa,EAAE,IAAI,EAAE,UAAAE,IAAI,EAAI;AWqB7D,ACAA,AT7CM,EK0DJ,ACXA8C,CAAC,CIlBDtP,EL6BIsP,AVtBF,CePF,AL6BK,GRjCG/C,CGzBA,CM+CPsC,GDWIA,CRjCO,AGzBC,CHyBAlE,CSsBZ,CAAS+E,EDWL,CAAQzH,AL1DL,CK0DM,CAAC,CAAC,ACXA,CDWC,CAACwG,AL1DM,CK0DL,ACXA2F,AN/CX,CHyBiB,GAAG5H,AGzBC,GK0DVqC,CRjCa,CGzB5B,EM+C0B,AN/CM,EK0DjB,CAAI5G,ACXUqM,CDWT,CAAC,CAAC,CAAC,CAAC5F,CAAC,CAAE,ECXW,OAAAG,MAAA,CAAIX,KAAK,GAAG,CAAC,CAAE;AED3D,ACAA,AT7CQ,EK0DN,ACXAoB,CAAC,CInBDrP,AfQA,GUsBK,EK9BL,CbHQsM,CaMR,AL2BS9F,CAAC,ACXToI,GDWY,AL1DF,CHyBC,AQiCE,CRjCD3N,CQiCGuF,ACXf,CDWgB,ACXPiJ,CIhBVnB,EL2BoBtG,CAAC,CAACnH,CCXN,GAAGsT,CIhBnB,CbN0B,AQiCE,CRjCD,AaMhB,CbNiB,AQiCE3N,CAAC,IAAI,CAAC,AL1D9B,CM+CwB,AN/CK,CK0DG,ECXL6N,EN/CO,CAAL,CAA7B,KM+CoC,OAAAzF,MAAA,CAAIX,KAAK,CAAE;AEDvD,ACAA,AT7CO,EMgDLoB,AXbC,CWaA,CDUCA,CAAC,CK3BD,EbNI,AG3BF,CH2BG,CACH,AaKE,CbLD,AaKE9K,EJiBNqK,CNhDU,CK0DRA,ICVF,CAAUuF,CIjBM,AL2Bd,CK3Be,AL2BLnM,CAAC,CAACxB,CAAC,CAAC,CAACgI,CK3BM,AL2BL,CK3BM,EJiBH,IDUHI,GCVGA,GDUH,CAAI5G,CAAC,CAACxB,ACVH,CDUI,ACVAyH,CDUC,CAACQ,CAAC,CAAE,CCVA,GAAGR,KAAK,GAAGkH,MAAM,CAAE;AEFpD,ACAA,AT7CQ,EK0DN,ACTA9F,AXfC,CWeA,CIlBD,EbLE,GFQDzL,MWeAgL,MAAA,CAAYX,AXfZ,KWeiB,OAAI;AEHxB,ACAA,AdZG,AKjCK,EK0DNoB,ACRA,CDQC,CRhCD,ESwBMiF,CDQD,IAAI,CCRG,GAAGhE,ANlDJ,IMkDQ,CAACuB,IAAI,CAACxC,CAAC,CAAC,MNlDrB,cAA2B,IAA3B;AQ8CR,ACAA,AdbGjO,AKhCI,EK0DL,ACRAkT,EInBA,EL2BMzC,CV1BL,CWkBK,AXlBLjO,CWkBM8M,CDQG,GAAGJ,ACRF,CAAC,GDQK,CAACuB,GV1BjB,CU0BqB,CAACxC,CAAC,AV1BvBzL,CU0BwB,YV1BxB;AacH,ACAA,ACdA,AV/BK,EK0DHiO,ERhCA,ASwBEpB,EDQE,CAACC,CCRC,EAAEJ,CDQC,CAAC,ECRE,CAACiE,QAAQ,wCAAwC,CAAC;AEJhE,ACAA,AZnBA,AaKA,AV/BI,IK0DA9D,ACRAF,IDQI,EAAJE,ACRM,EAAEH,EDQJ,ECRQ,CAACiE,QAAQ,wCAAwC,CAAC;AEJlE,ACAA,AZnBA,AG1BI,EU4BF,EL8BEhE,ACRA,MDQM,CL1DD,CK0DLA,MAAM,ACRQ,EAAE,iBNlDhB;AQ8CJ,ACAA,AZnBA,AGhDuB,EMwErB,CAAC,CIvBDxQ,AL+BE,ACRA,GIvBF,WL+BgB,EAAEyQ;AGZpB,ACAA,AT9CG,EHuBD,AQoCA,ACRA,CDQC,CKhCDxQ,ALgCE,KKhCF,EAGA,SAAA+X,gBAAA,EAAkB;AFiBpB,ACAA,EJaE,ACRA,ET7BAhY,EaQE,CbRF,EQqCO8R,ACRA,CIrBD,CAACyG,EL6BI,QK7BM,CAAC,CAAC;AFiBrB,ACAA,AJaA,AL3DE,CK2DD,GRtCCtY,AS8BEsU,EIrBA,GbTF,CaSM,AJqBE,CT1BR,AaKOiE,CJqBLjE,MAAM,ET1BR9H,MaKsB,CAAC,CAAC,KbLXC,eAAe,EAAqB;AWsBnD,ACAA,IHKI+H,ET3B+C,AaM/C,IbN+C9H,AaM3C,CAAC8L,KbN0C,KaMhC,AJqBE,CIrBD,CAAC,AJqBE,SAAAhE,kBAACC,EAAE,EAAEC,EAAE,EAAExF,KAAK,EAAK;AEJ1C,ACAA,AJaA,MRpCmD,AaO/C,AJqBEoF,IT5B0B3H,AaOxB,CAAC8L,CJqBG,CAAC/H,IAAI,CAAC,CT5BuB,GAAA7N,AaOrB,CAAC,CAAC,ObPmB,CAAAhC,MAAA,QAAAgC,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,KAAK;AWwBjD,ACAA,AJaA,MRpCI,AaOA,EJqBI8R,ET5BAhI,AaOA,CAAC+L,MJqBQ,ET5BA,EAAE,GS4BF9J,EIrBO,CAAC,CAAC,EJqBT,CAAO6F,EAAE,GAAGN,WAAW,OAAAvF,MAAA,CAAI8F,EAAE,GACpCzG,KAAK,GAAG,CAAC,SAAAW,MAAA,CAAMM,KAAK,OAAAN,MAAA,CAAIuF,WAAW,OAAAvF,MAAA,CAAIX,KAAK,GAAG,CAAC;AEL1D,ACAA,AJaA,MK7BI,AJsBE,CAAC,CT7BD,AS6BE,EItBA,CAAC0K,CbPC,CAAC/N,SAAS,CaOC,CAAC,CbPC6B,AaOA,ebPe;AWwBtC,ACAA,AJaA,IK7BE,AJsBE,IT7BE,IAAI,CAACxL,aAAa,CAAC,CAAC;AWwB1B,ACAA,AJaA,ECPE,CAAC,GT7BC,CAAC,MAAM;AWwBX,ACAA,AJaA,ACPA,CAAC,GItBC,IbPI,IAAIwL,eAAe,KAAK,IAAI,CAAC7B,SAAS,EAAE,EG3Bf;AQmD/B,ACAA,AChBA,AL6BA,ACRExJ,ANxD6B,OMwD7B,CAAA8T,ET5BM,IAAI,CAACpJ,KS4BX,ET5BkB,CACV,AS2BRoJ,WT3BmB,CS2BnB,CT1BQ,IAAA3S,UAAI,EAAC,IAAI,CAACqI,SAAS,EAAE6B,eAAe,EAAE,IAAI,EAAE,UAAAG,GAAG,EAAI;AWsB7D,ACAA,AChBA,AL6BA,YRlCYF,MAAI,CAAC9B,SAAS,GAAGgC,GAAG;AWsBhC,ACAA,AJaA,ALjEI,EUiCF,UbFUF,MAAI,CAACzL,aAAa,CAAC,CAAC;AWsBhC,ACAA,AJaA,ALjEI,IUgCFlB,GAAA,GbDQ,CAAC,CACH,CAAC,KGhCM,OAAX,CAAmB,aAAK;AQqD5B,ACAA,AJaA,ALjEM,IU+BJC,IbCI,CaDJ,EAGA,SAAAsY,WAAA,EAAa;AFmBf,ACAA,AJEAlX,ALtDM,MHgCF,AaEA,CLoBJ,CAAA0Q,KLtDY,EKsDZ,GAAAA,ILtDqB,EAAE,CKsDvB,ILtDqB,CAAQ,GAAR,CAAf;AQqDN,ACAA,AJYO,ALhED,IHgCJ,AQgCWC,EK9BT,EL8Ba,EK9Bb1B,CL8BgB,ELhER,OKgEC0B,IAAIA,ALhEM,CKiErBzB,GK/BQ,CL+BJ,CK9BA,CL+BJd,ALlE4B,GUmCpB,CAACc,EL+BH,ALlEe,EUmCR,ALgCbpB,EK/BIgH,CVpCmC,CAAlB,CKmEhB,EACLlE,CKhCU,AVpCkC,EUqCxCgE,CAAC,GAAGG,CVrC2C,CAAP,EKoEjC,CK/BE,CLgCblE,EKhCgB,AVrC0C,CUqCzC,EACb,AVtCA,IUsCI,CAAC3B,CL+BE,EACX4B,CKhCa,CAACqC,OLgCL,CKhCa,CLiCtBpC,KAAK,EACF,+BKlC0D,CAAC,EAC1DgE,KAAK,EACL,OACF,CAAC;AFYL,ACAA,ATpDM,EKwEJ,IK/BE,AL+BI1E,EAAE,EK/BNpB,CL+BS,ELxED,EKwECd,KLxEM,KKwEH,EAACC,CK/BP,EACJ,CV1CwB,EKwEP,CK9Bb,CAACc,AL8Bc0B,GLxEY,CU0CtB,AV1Ce,CAAX,CU2CbkE,EV3CoC,GKwEN,CK7BxB,CL6B0BhH,CK5BhC8G,CAAC,AV5C0C,CAAP,CAApC,CKwEqC,CK5BhCG,AL4BiC,KK5B5B,GAAGC,KAAK,GAAG,CAAC,CAAC,EACvB,IAAI,CAAC9F,IAAI,CAACiE,QAAQ,yBAAyB,CAAC,EAC5C6B,KAAK,EACL,OACF,CAAC;AFKL,ACAA,ATpDM,EKwEJ,ERxCA,EagBE,ALwBI1E,EAAE,EKxBNrB,CLwBS,IAAAd,UAAG,EAACC,CKxBP,EACJ,GLuBiB,CKvBb,CAACc,ALuBc2B,IKvBV,EACTiE,KLsB8B,CKtBxB,CLsB0BhH,CKrBhC8G,CAAC,GLqBoC,CKrBhCG,ALqBiC,KKrB5B,GAAGC,KAAK,GAAGC,KAAK,GAAG,CAAC,CAAC,EAC/B,IAAI,CAAC/F,IAAI,CAACiE,QAAQ,uCAAuC,CAAC,EAC1D8B,KAAK,EACL,IAAI,CAAC/F,IAAI,CAACiE,QAAQ,CAAC,8BAA8B,CACnD,CAAC;AFFL,ACAA,AZpBA,AGhCM,EKwEJ,EKjBA,KLiBO/C,IAAI,ALxED,CKwEElB,IAAI,EAAEmB,EAAE,EAAEC,EAAE,CLxEA,CKwEES,KAAK,CLxEA,CKwEED,KLxET,CAAc,GKwEI,CAAC;AGnB7C,ACAA,AZpBA,AQwCA,ALxEQ,CKwEP,eLxEY,OAAK,aAAL,CAAmB,IAAnB,SAA8B,IAA9B;AQqDb,ACAA,AZpBA,AGlCwC,IUyDtC,MVzDwB,EAEjB,WAAW,EAAX,GAAgB;AQqDzB,ACAA,ACGA,ALiBA,ALxEQ,EH4BN,cG5BW,OAAK,aAAL,CAAmB,IAAnB,SAA8B,IAA9B;AQqDb,ACAA,ACGA,ALiBA,AL1EyB,IH6BvBnS,GAAA,GG/BwB,CAApB;AQyDN,ACAA,AJoBA,ALxEM,EUoDJ,Eb1BAC,KAAA,EAIA,KG9BW,IH8BX6M,UG9BI,CH8BOC,QG9BqB,IAA5B,EAAkC,CH8BZ,EAAE,QG9BxB;AQqDN,ACAA,AJoBA,ALxEK,IUmDH/M,EbtB4B,CasB5B,CV/DE,EHyC0BgN,MAAA;AWwB9B,ACAA,AJoBA,IKtBE/M,EbrBE,GaqBF,CbrBM8M,CawBN,SAAAyL,KbxBqB,KAAK,IAAI,CAAC1N,CawB/B,EAAkB,IbxBoB,EAAE;AWwB1C,ACAA,AJoBA,ALxEI,MUqDA,EbxBE,IAAI,CAACiB,OAAO,CACV,SAAS,EACT,IAAAvJ,UAAI,EAAC,IAAI,CAACsI,OAAO,EAAEiC,eAAe,EAAE,IAAI,EAAE,UAAAjC,OAAO,EAAI;AWsB7D,ACAA,AJoBA,ALxEI,MUqDA,IbtBMkC,AasBNqF,KVrDQ,CH+BE,CAACvH,KG/BX,CAAgB,CH+BE,CasBf,EbtBkBA,AauBnB,IAAI,CAACyF,EbvBqB,EauBjB,EACT4F,CVvDsB,KUuDhB,EACNU,gBAAgB,EAChBF,SAAS,EACT,CAAC,EACD,OAAO,EACP,OAAO,EACP,IAAI,CAACmB,eAAe,CAAC,IAAI,CAAC1J,QAAQ,CAACtE,GAAG,CAAC,EACvC,IAAI,CAACgO,eAAe,CAAC,IAAI,CAAC1J,QAAQ,CAAClE,GAAG,CAAC,EACvC,IACF,CAAC;AFXL,ACAA,AJoBA,ALxEM,MUiEF,IblCM8C,AakCNqF,MblCU,AG/BH,CH+BInR,GG/BT,IAAa,CUiEZ,EACD,GbnCsB,CAAC,AamCnB,AVlEc,CH+BM,AamCnBqP,IAAI,EACT4F,MAAM,AVnEO,CAAmB,CUoEhCW,GVpEa,OUoEH,EACVH,AVrE2C,IAA9B,CAAb,IUqES,EACT,CAAC,EACD,aAAa,EACb,SAAS,EACT,IAAI,CAACmB,eAAe,CAAC,IAAI,CAAC1J,QAAQ,CAACrE,GAAG,CAAC,EACvC,IAAI,CAAC+N,eAAe,CAAC,IAAI,CAAC1J,QAAQ,CAAChE,GAAG,CAAC,EACvC,IACF,CAAC;AFvBL,ACAA,AJoBA,ALxEK,MU6ED,Eb9CI,AGjCJ,CHiCK,CACH,Aa6CFiI,Cb7CG,ca6CA,EACD,IAAI,CAAC9B,IAAI,EACT4F,MAAM,EACNW,UAAU,EACVH,SAAS,EACT,CAAC,EACD,aAAa,EACb,SAAS,EACT,IAAI,CAACmB,eAAe,CAAC,IAAI,CAAC1J,QAAQ,CAAChE,GAAG,CAAC,EACvC,IAAI,CAAC0N,eAAe,CAAC,IAAI,CAAC1J,QAAQ,CAAC/D,GAAG,CAAC,EACvC,IACF,CAAC;AFnCL,ACAA,AJoBA,ALxEG,IUwFD,EbxDE;AWqBJ,ACAA,AJoBA,IRxCE;AWqBF,ACAA,AJoBA,ALxEE,IUwFA;AFnCF,ACAA,ACoCA,ALhBA,IRxCE;AWqBF,ACAA,AZpBA,AawDA,AL7BAhJ,OAAA,CAAA2Q,IAAA,GAAAA,IAAA;AGNA,ACAA,AZpBA,AQuCO,EKcL,ELdWK,GAAG,GAAG,SAANA,GAAGA,CACd9B,IAAI,EACJd,MAAM,EACNC,MAAM,EACNyC,SAAS,EACT1B,WAAW,EACXD,MAAM,EACNE,IAAI,EACJ4B,UAAU,EACVC,QAAQ,EACRC,SAAS,EACN;AG7BL,ACAA,AZpBA,EQkDE,EKEAxS,GAAA;AF/BF,ACAA,EZxBE,AQsDA,EKCAC,KAAA,EAGA,SAAAwY,WAAA,EAAa;AFjCf,ACAA,EJ8BE,ERvDAzY,Ea2DE,ALJIyS,CRvDN,OQuDc,GAAG,SAAXA,QAAQA,CAAIC,KAAK,EAAEC,GAAG,EAAEC,EAAE,EAAK;AG7BvC,ACAA,IZ1BE3S,AQwDE,EKIA,ELJMsD,CRxDR,Ca4DE2N,CbxDF,EQoDa,GAAG,IRpDhBjE,AQoDgBsC,QRpDRrC,EQoDW,EACfxL,EKGU,CbxDC,CayDX,ALJI,CRrDS,AQqDRqO,GKID,CAACQ,CLJK,CAAC7O,EKIF,EACT,ALLe,CAAC+B,GKKZ+K,ALLe,CAAC,IAAAa,UAAG,EKKX,ALLYsD,CKKXuD,EAAE,ALLY,EKKVjB,CLLavC,CKKX,GAAG,CLLa,CKKX,ALLY,CKKX,ALLY,EKMrC,ALNuChR,IAAI,CAACiO,EKMrC,CLNwC,CKO/C,ALPgD,IAAAN,GKOzC,EACP,KLRmD,CKSrD,CAAC,ALTqDsD,GAAG,GAAGD,KAAK,CAAC,CAAC,CACnE,CAAC;AG/BL,ACAA,IJgCI,ERvDe,Aa+Df,ELRIE,ERvDWzF,Aa+Df+D,ALRM,EAAE,IRvDO,kBa+DH,EAAC,IAAI,CAACX,IAAI,EAAE,IAAI/B,iBAAQ,CAAC0H,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC;AFvCzE,ACAA,MZvBI,Aa+DA,ALRE,IRvDEhJ,Aa+DJgE,GLRS3N,IRvDE,CQuDG,IRvDE,AQuDE,GAAG,CRvDD,CAAC2H,EQuDI3H,ERvDA,EAAE,Ca+Df,ALRkB,EKQjB,ELRqB,CAAC,CKQlB,CAACgN,CLRoB,CAAC,ALvFnB,EU+FE,CLRoB,CKQlB,ALRmB,IKQf/B,A,EV/FE,W,EAAa,EU+FP,CAAC0H,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC;AFvC3E,ACAA,ATvDI,IU+FF,ALRE,IRvDE,IAAI,CAACnK,OAAO,CACV,MAAM,EACN,IAAAvJ,UAAI,EAAC,IAAI,CAAC0I,IAAI,EAAEgC,OAAO,EAAE,IAAI,EAAE,UAAAE,CAAC,EAAI;AWsB5C,ACAA,ATvDI,IKuFA,MRrDMD,CQqDC5J,ALvFD,KHkCI,AQqDE,CRrDD2H,CGlCE,EKuFG,CRrDD,EQqDI,CRrDDkC,CAAC,EQqDI7J,KAAK,ALvFD,IKuFK,CAAC,ALvFD,GKuFI,CAAC,GAAG,ALvFb,CKuFc,ALvFD,WAAb,CAAd,GAA0C,QAAvD;AQwDJ,ACAA,ATvDI,EKuFF,CAAC,CKQD,Mb7DQ4J,MAAI,CAACjM,aAAa,CAAC,CAAC;AWsB9B,ACAA,ACwCA,AV/FI,EKwFF,IAAM2R,ERtDA,CAAC,CACH,CAAC,CGnCE,CKwFM,GAAG,ALxFd,SKwFIA,OAAOA,CAAIC,EAAE,EAAEC,EAAE,EAAE3F,CAAC,EAAEwF,EAAE,EAAK,ALxFpB,KAAK,gBAAL,CAAsB,QAAtB,CAAb;AQwDJ,ACAA,ACwCA,AV/FG,IKwFC,ERrDA,EQqDItD,CAAC,GAAG,KAAK,GAAGlC,CAAC,GAAG,GAAG,GAAGA,CAAC,CAAC,CAAC;AGhCjC,ACAA,ECqCE,EbzDA,AQqDEkC,CAAC,IAAI,IAAI,CAAC,CAAC;AGhCf,ACAA,ATvDE,IU2FAtP,ALHE,GKGF,CLHQgT,KAAK,GAAGP,QAAQ,CAACK,EAAE,EAAEC,EAAE,EAAEH,EAAE,CAAC;AGhCtC,ACAA,IZpBE,AauDA3S,ALFEqP,CAAC,IKEH,ALFO,EKKP,CLLU,GAAG0D,KKKb0F,ALLkB,CAAC,CAAC,UKKpB,EAAc;AFrChB,ACAA,AZpBA,IQqDIpJ,CAAC,CKKD,GLLKsD,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;AGhC3B,ACAA,AZpBA,IQqDItD,CAAC,CKKD,GLLK,EKMH,CLNM,GKMF7I,ALNK,CKMJ,GAAG,ALNC+I,IKMG,CAACpB,KLND,EAACqB,CKMQ,CAAC3F,GAAG,CLNN,CKOnBrD,CAAC,ALPoB2G,CAAC,EAAE2F,CKOnB,CLPqB,CAAC,CAACtE,CKOnB,ALPoB,CKOnBL,ELPsB,GAAG,GKOjB,ALPoB,CKOnB9D,GLPmBkF,UAAG,EAACC,IKOJ,EACtChJ,ALRgD,CKQ/C,CLRiD2G,CAAC,EKQ9C,ALRgD2F,EKQ9C,ALRgD,CAAC,CKSxD,ALTyDrE,CAAC,CAAC,CAAC;AGhClE,ACAA,AZpBA,IQqDI,IKSE,GLTKY,CKSL0C,ALTM,gBKSF,EACF,IAAI,CAACzB,IAAI,EACT4F,MAAM,EACN,IAAI,CAAC2B,eAAe,CAACrR,CAAC,CAAC,EACvB8P,KAAK,EACLE,KAAK,EACL,CAAC,EACD,OACF,CAAC;AFjDP,ACAA,EZxBE,AQyDA,CAAC,GKiBC;AFjDJ,ACAA,IZzBEzW,GAAA;AW0BF,ACAA,EJiCE,ER3DAC,Ea4EE,Gb5EF,EAIA,SAAAoN,YAAYC,aGpCY,GHoCI,EAAE,G,EGpCI;AQ2DpC,ACAA,AT1DI,EK2FF,IRxD8B,AayE5B,ALjBI2F,EAAE,ERxDsB1F,Ca0E1B,ALlBOmC,IKkBHjJ,Cb1EsB,Ca0ErB,ALlBQ,GKkBL,ALlBQ0L,IKkBJ,CAAC/D,ILlBY,GAAG,CKkBP,ALlBQ,CKkBPtE,GAAG,GAAG,CAAC,EAC7BrD,EAAC,IAAI,IAAI,CAAC2H,QAAQ,CAAC9D,mBAAmB,GAAG,CAAC,EAC1C7D,EAAC,IAAI,EAAE,EACP;AFrDN,ACAA,AT1DI,EK2FF,IRxDE,AQwDIyM,EKqBF,ALrBI,ERxDF5F,CQwDKoC,AL3FH,CUgHJsC,GVhHQ,EK2FK,GAAGG,IL3FC,EHmCC,Ea6Ed,CLrBqB,CKsBvB,Cb9EqB,CQwDK,CAAC,CKsBvB,Cb9EqB,Aa8EpB5B,Cb9EqBpF,CGnCpB,CAAuB,CUiHpB,EACTgL,EVlHM,CHmC4B,AGnCtC,EHmCwC,Ca+E9B,EACN,IAAI,CAAC2B,eAAe,CAACrR,EAAC,CAAC,EACvB8P,KAAK,EACLC,KAAK,EACL,CAAC,EACD,OACF,CAAC;AF7DP,ACAA,AT1DI,MUwHA,EbrFE,CGnCA,GHmCI,CAACzK,OAAO,CACV,MGpCJ,CAAqB,IHoCN,EACX,IAAAvJ,EGrCJ,EAAmC,MHqC3B,EAAC,AGrCT,IHqCa,CAAC2I,QAAQ,EAAEmC,gBAAgB,EAAE,IAAI,EAAE,UAAAF,CAAC,EAAI;AWsBzD,ACAA,AT1DI,EK2FF,QRtDQG,MAAI,CAACpC,QAAQ,GAAGiC,CAAC;AWsB3B,ACAA,AT1DI,EK2FF,IK6BE,AL7BEkC,CAAC,EL3FD,CHqCI/B,AQuDN,IAAI,ERvDM,CAACrM,AQuDJ,CL5FP,GK4FOsO,SRvDiB,CAAC,AQuDf,CRvDgB,CQuDfC,MAAM,EAAEwD,EAAE,EAAEX,UAAU,CAAC,CAAC7D,CAAC,GAAG,GAAG,GAAG,IAAAe,UAAG,EAACC,MAAM,EAAEwD,EAAE,EAAEX,UAAU,CAAC,CAAC5D,CAAC;AGjC9E,ACAA,AT1DI,MUwHA,EbnFI,CAAC,CACH,AakFFsD,CblFG,eakFC,EACF,IAAI,CAACzB,IAAI,EACT4F,MAAM,EACN,IAAI,CAAC2B,eAAe,CAAC,IAAI,CAAC1J,QAAQ,CAAC/D,GAAG,CAAC,EACvCkM,KAAK,EACLE,KAAK,EACL,CAAC,EACD,KACF,CAAC;AFrEL,ACAA,AT1DI,EK4FF,EKoCA,Eb1FE;AWqBJ,ACAA,AT1DI,EK4FFnH,CAAC,CRtDD,GQsDK,GAAG,EL5FD,CK4FIuD,GL5FT,IK4FgB,CAACP,UAAU,EAAEC,QAAQ,EAAEU,EAAE,EAAET,CL5F9B,KAAK,GK4FkC,CAAC,OL5FxC,CAAiB,CAAjB,CAAb;AQ2DJ,ACAA,AT1DI,IUgIF;AFrEF,ACAA,ACsEA,AVhII,EK4FF,ERtDA,UGtCS,EAAE,UAAT;AQ2DJ,ACAA,AZpBA,Aa0FA,AVjIyB,EK6FvBlD,CAAC,IAAI,IL7FoB,CK6Ff,GAAG,IAAAE,GL7FU,CAAc,EAAE,IK6FvB,EAACC,IL7FM,EK6FA,EAAEyD,EAAE,EAAEX,QAAQ,CAAC,CAAC9D,CAAC,GAAG,GAAG,GAAG,IAAAe,UAAG,EAACC,MAAM,EAAEyD,EAAE,EAAEX,QAAQ,CAAC,CAAC7D,CAAC;AGjC9E,ACAA,AZpBA,AGxCI,EU+HF;AFlEF,ACAA,AZpBA,AGxCG,EK8FD,EKgCA1O,GAAA;AFjEF,ACAA,EZxBE,AQ0DAsP,CAAC,CK+BDrP,GL/BK,EK+BL,CL/BQ,CKkCR,ELlCW4S,OKkCX8F,ALlCkB,CAACpG,QAAQ,EAAED,KKkC7B,EAAkB,GLlCqB,EAAEY,EAAE,EAAE,CAACV,SAAS,CAAC;AGjC1D,ACAA,AT5DE,IHmCAxS,Ea6FE,Cb7FF;AW0BF,ACAA,EJkCE,ER5DAC,Ea8FE,Gb9FF,EAIA,Aa2FI,IAAIwG,CAAC,GAAG,Cb3FZ+G,Ga2FgB,CAACY,Kb3FRlB,Ga2FgB,CAACpD,Gb3FV,Aa2Fa,Eb3FX,Aa4FdrD,CAAC,IAAI,IAAI,CAAC2H,QAAQ,CAAC9D,mBAAmB,EACtC7D,CAAC,IAAI,EAAE,EACP;AFvEN,ACAA,EJkCE6I,CAAC,GRzDiB,CQyDb,CKsCD,Eb/Fc7B,CQyDT,CKsCCoC,Kb/FQ,Ga+FA,GAAG,IAAAL,UAAG,EAAC2G,MAAM,EAAEO,YAAY,EAAE,IAAI,CAACoB,eAAe,CAACrR,CAAC,CAAC,CAAC;AFvEzE,ACAA,EJmCE,IR1DE,AQ0DIqL,EKqCF,Eb/FE5E,AQ0DI,EKqCNgE,CLrCSX,IR1DA,AQ0DI,CAACuB,IR1DA,AQ0DI,CAACxC,CAAC,CAAC,CR1DH,CAACtE,KAAK,EAAE,Ea+Fd,EAAC,IAAI,CAACuF,IAAI,EAAEV,QAAQ,EAAEpJ,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,CAAC;AFvE9E,ACAA,EJmCEqL,IKqCE,ALrCE,CAACnB,CR1DD,GQ0DK,CR1DD,AQ0DE,CR1DD5E,OAAO,CACV,OAAO,EACP,IAAAvJ,UAAI,EAAC,IAAI,CAACwI,KAAK,EAAEkC,OAAO,EAAE,IAAI,EAAE,UAAAjF,CAAC,EAAI;AWsB7C,ACAA,ICwEE,ALrCEyI,IAAI,ERxDEjD,AQwDNiD,IAAI,GRxDM,CAAC1F,KAAK,GAAG/C,CAAC;AWsBxB,ACAA,IJmCIuI,MRxDM/C,AQwDA,EAAN+C,KRxDU,CAACtP,AQwDL,aRxDkB,CAAC,CAAC;AWsB9B,ACAA,ICwEE,ALrCE,IRxDI,CAAC,CACH,CAAC,OQuDW,EAAEuP,sBLlGU;AQgE9B,ACAA,ACwEA,AVxI8B,EKmG5B,CAAC,CAAC,ERvDA;AWqBJ,ACAA,ACwEA,ELrCE,ERvDA,KQuDOqB,IAAI;AGlCb,ACAA,ACwEA,ALrCA,ALrG8B,CKqG7B,yCLrGuB,IAAM;AQmE9B,ACAA,ATnEwB,EUuItB,EbxFA,SG/C4B;AQoE9B,ACAA,AZpBA,AQuDA,ALvG8B,IUuI5B9R,GAAA;AFlEF,ACAA,AZpBA,AQuDA,IK+BEC,KAAA,EAIA,SAAA2Y,aAAA,EAAe;AFrEjB,ACAA,AZpBA,AQuDA,ALxGI,MU2IA;AFrEJ,ACAA,AJmCA,ALxGI,EH6CF,Ia8FE,IAAAtI,EV3IK,OAAL,CAAa,QU2IP,EACJ,IAAI,CAACC,AV5Ia,IU4IT,EACT4F,MAAM,EACNF,CAAC,IAAIG,KAAK,GAAGC,KAAK,GAAGC,KAAK,CAAC,EAC3B,aAAa,EACb,CAAC,EACD,IAAI,CAAC/F,IAAI,CAACiE,QAAQ,iDAAiD,CACrE,CAAC;AF5EL,ACAA,AJmCA,ALxGM,IH4CJxU,AasGA,GbtGA,MG5CQ,eAAe,QAAnB,EAA6B;AQsEnC,ACAA,AJmCA,ALxGQ,IH2CNC,KAAA,EAIA,OG/CW,EH+CXyN,EG/CM,KH+CCR,OAAO,EAAE,oBG/CG,GAAb;AQsER,ACAA,AJmCA,ALxGO,IUkJL,EbpGgB,IAAAS,AGhDZ,MAEO,CH8CK;AWwBlB,ACAA,AC6EA,AL1CA,ALxGQ,MH8CJ,IAAIT,OAAO,CG9CF,IH8CO,AG9CZ,CAAU,GH8CM,AG9ChB,CH8CiB9B,GAAG,EAAE;AWwB9B,ACAA,AC6EA,ALlDA/J,ALhGO,OKgGP,CRlDM,AQkDNgR,GAAA,CRlDU,CAACtG,CQkDXsG,GAAA,GRlDkB,CACV,KAAK,EACL,IAAA7P,UAAI,EAAC,IAAI,CAAC4I,GAAG,EAAE8B,OAAO,EAAE,IAAI,EAAE,UAAAjF,CAAC,EAAI;AWsB3C,ACAA,AJkCO,ALvGF,EU+IH,ELxCWkL,IL7GT,EHsDMxF,OAAI,CAACvC,GAAG,CQuDa,ERvDVnD,CAAC,AQuDY,SAArBkL,kBAAkBA,CAC7BC,OAAO,EACPC,OAAO,EACPnF,KAAK,EACLC,MAAM,EACNsC,WAAW,EACXD,MAAM,EACNE,IAAI,EACD;AGzCL,ACAA,ATrEG,EK+GD,EK+BA1Q,EL/BMsT,CK+BN,AL/BO,GR/DC3F,OAAI,CAACzM,aAAa,CAAC,CAAC,uEQ+DrB2N,MAAA,CAIEuE,OAAO,GAAGlF,KAAK,GAAG,CAAC,oBAAAW,MAAA,CACnBwE,OAAO,GAAGlF,MAAM,GAAG,CAAC,wBAAAU,MAAA,CAChBX,KAAK,kBAAAW,MAAA,CAAaV,MAAM,gjDAAAU,MAAA,CAKrB6B,IAAI,wBAAA7B,MAAA,CAAmB4B,WAAW,kBAAA5B,MAAA,CAAa2B,MAAM,2BAE9D;AGtDT,ACAA,EJuDE,EKiBAvQ,Ib7FM,CAAC,Aa6FP,ALjBO,CR3EH,CAAC,Aa+FL,ELpBWsT,IAAI,CAAC,EKoBhB0E,ELpBgBzE,WKoBhB,EAAe,ILpBE,EAACF,CAAC,CAAC,CAACG,EAAE,CAAC;AGtD1B,ACAA,AJuDA,AL5HE,CK4HD,KR3EG,Aa+FA,IAAI,CAACc,MAAM,GAAG,IAAAJ,sBAAa,EACzB,IAAI,CAAC5D,IAAI,EACT6G,cAAc,EACdH,oBAAoB,EACpBI,WAAW,EACXF,aAAa,EACbD,aACF,CAAC;AFjFL,ACAA,IZpBE,EasGE,IAAA5G,kBAAM,EAAC,IAAI,CAACC,IAAI,EAAE4F,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC;AFjFpD,ACAA,AJuDA,IK2BE;AFjFF,ACAA,AJuDA,IR3EE;AWqBF,ACAA,AZpBA,AQ2EA,IK2BE;AFjFF,ACAA,AZpBA,AasGA,AL3BA;AGtDA,ACAA,AZpBA,AasGA,AL3BA;AGtDA,ACAA,ACkFA,AL3BA,ER/EE;AWyBF,ACAA,AJuDA,EKuBE,EbvGAnW,GAAA,4BG/Cc,I,EAAe;AQyE/B,ACAA,AJgDAqB,ALzH+B,IH+C7BpB,AauGAD,GAAA,AL7BF,CAAAmT,CR1EE,EAIA,SAAApH,MQsEF,ERtEU/L,CQsEVmT,ERtEa,EAAEvQ,QAAQ,CGnDE,CHmDA,GGnDM,CKyH/B;AG/CA,ACAA,AJsDO,ALhIkB,IUsJvB3C,ALtBWyT,ER5ET,GakGF,CblGM,CAAClP,AasGP,EV1J6B,OU0J7B0T,AL1B2B,CR5EV,CAAClY,CQ4EY,ER5ET,CAAC,IasGZwK,EL1BCkJ,MK0BO,EAAE,QL1BOA,CAAInD,IAAI,EAAEd,MAAM,EAAEvB,KAAK,EAAEwC,IAAI,EAAK;AGrD/D,ACAA,AT3E+B,EKiI7B,IR5EE,AasGA,IbtGI,AasGEvB,CbtGDzD,IasGM,CbtGD,CAAC1L,CasGG,EbtGA,CAAC,CasGG,CAAC8X,CbtGDlV,QAAQ,MasGQ,CAChClB,IAAI,CAAC0C,GAAG,CAAC,IAAI,CAACwT,uBAAuB,EAAEpN,QAAQ,CACjD,CAAC;AFjFL,ACAA,EJsDE,ER5EA,EawGE,AL5BImJ,EAAE,EK4BF,CAACY,AL5BIrG,KAAK,CK4BH,CAACuG,CL5BK,EAAE,cK4BU,CAACyB,EAAE,EAAEjB,EAAE,EAAE9F,KAAK,CAAC;AFjFhD,ACAA,AT5EI,EKkIF,EK4BA,EL5BMyE,GAAG,ELlIH,CKkIM1F,ILlID,CKkIM,GAAG,EAAE,ALlIhB,KAAgB,CAApB,EAAuB;AQ6E3B,ACAA,AT5EM,EKkIJ,ER5EA,EQ4EM2F,GAAG,GAAG3F,ILlID,CKkIM,GAAG,CAAC,ILlIjB;AQ6EN,ACAA,AZtBA,AGtDK,EKkIH,EK4BA,EL5BM4F,EAAE,GAAG5F,KAAK,GAAG,EAAE;AGrDvB,ACAA,AZtBA,AawGA,AV9JI,WAAI,KAAK,MAAL,KAAgB,CAApB,EAAuB;AQ6E3B,ACAA,ACkFA,AV/J2B,EHoDzB,AQ+EA;AGrDF,ACAA,ACkFA,EL5BEoC,ERhFAtQ,GAAA,CQgFM,CAACuQ,IAAI,EAAEd,MAAM,EAAEkE,EAAE,EAAE,CAAC,EAAE,aAAa,EAAEjD,IAAI,CAAC;AGrDlD,ACAA,ACkFA,AVhKM,IHmDJzQ,KAAA,EAGA,KGtDW,IHsDXuE,WAAWxE,EGtDK,CHsDF,CGtDH,CHsDK,AGtDG,IAAR,GAAc,IAAd,kBAAmB,KAAK,EAAxB,SAA+B,IAA/B,EAAP;AQ+EN,ACAA,AT9EK,EU2JH,ALvBA,IR9EE,IAAI,IAAI,CAAC0L,KAAK,CAAC1L,GAAG,CAAC,EAAE;AWyBzB,ACAA,AT9EI,EKoIF,EKsBAA,ELtBM+T,CKsBN,CbpGI,EQ8EM,ER9EF,CAACrI,AQ8EIkF,CLpIJ,IHsDK,CAAC5Q,AGtDD,GHsDI,AQ8EI,ALpIb,CHsDU,AQ+EjBuQ,ALrIgB,CHsDE,CAAC,EQ+Ef,EACJd,MAAM,CAAChB,CAAC,GAAGP,KAAK,GAAG,CAAC,EACpBuB,MAAM,CAACf,CAAC,GAAGoF,EAAE,GAAG,CAAC,EACjB5F,KAAK,EACL4F,EAAE,EACF,aAAa,EACb,CAAC,EACDpD,IAAI,EACJ,CAAC,EACD,CACF,CAAC;AGhEH,ACAA,AT/EoB,IU0JlBzQ,IbnGI,CamGJ,EAKA,IbxGW,IAAI,CAACyL,AawGhBoM,KbxGqB,CAAC9X,GAAG,CAAC,MawGVwK,QAAQ,EAAE;AF/E5B,ACAA,EJiEE,IRzFE,AawGApK,OAAO,CAACC,MAAM,CACZmK,QAAQ,IAAI,CAAC,IAAIA,QAAQ,IAAI,IAAI,CAAC4D,QAAQ,CAAC9D,mBAAmB,EAC9D,uBACF,CAAC;AFlFL,ACAA,ATjFoB,EKkJlB,ERzFA,Ea2GE,ALlBI0J,EAAE,GAAGpD,KLlJe,IKkJN,CAClBL,IAAI,EACJd,MAAM,CAAChB,CAAC,ALpJqB,GKoJlBmF,CLpJa,EKoJV,CLpJqB,EKoJlB,CAAC,CLpJM,CKqJxBnE,MAAM,CAACf,CAAC,GAAGmF,GAAG,GAAGF,EAAE,ALrJqB,GKqJlB,CLrJE,EKqJC,EACzBC,GAAG,EACHC,ALvJiD,GKuJ9C,CLvJqB,EKuJlB,ALvJU,CKuJT,EACP,aAAa,EACb,CAAC,EACDnD,IAAI,EACJ,CAAC,EACD,CACF,CAAC;AG3EH,ACAA,ATlFoB,EHyDjB,Ia4GC,EVrKO,CAAP,CUqKMlN,UAAU,GAAGgH,QAAQ,GAAG,IAAI,CAAC4D,QAAQ,CAAC9D,mBAAmB;AFlFnE,ACAA,ATlFG,EHwDA,AQsGD,IKOE,Gb7GDX,QAAA;AW2BH,ACAA,AZ3BG,EA/PmChK,AQsWpC,IKOE,ALPIsU,EAAE,EKOA4E,CLPGjI,QKOM,CLPG,CRtW0B,AQuW5CL,CKMkB,GLNd,CKMc5O,CLLlB8N,MAAM,CAAChB,CAAC,GAAGoF,GAAG,GAAG,CAAC,CKKc,CLJhCpE,CKKEjM,KLLI,CAACkL,CAAC,GKKI,ALLDiF,EKMTqD,ALNW,EACbnD,GAAG,EACHD,EKIW,CLJR,CKKD,CLJF,GKIM,CAACxF,QAAQ,CAAC9D,ALJH,EACb,CAAC,EACDoG,IAAI,EACJ,CAAC,EACD,CACF,CAAC,GKAC,CAAC;AFtFL,ACAA,AZ3RgDrP,AGyM9C,EK0KA,IKDE,CblX4C,CAAAC,CQmXvCiP,IAAI,CAAC2D,CRnXkC,AQmXjC,CAACH,ERnXgCpK,EQmX5B,EAAEqK,EAAE,ERnXwB,AQmXtBC,EAAE,CAAC;AGvF7B,ACAA,AJwFA,CAAC,KKDG,IAAM3D,MAAM,GAAG,GAAG,IAAIuI,SAAS,GAAG,IAAI,CAACzK,QAAQ,CAAC9D,mBAAmB,CAAC;AFtFxE,ACAA,AJuFEjJ,MKAE,CLAF,CAAAqS,KKAS,IAAAxE,OLAT,GKAY,ALAZwE,EKAa,CAACqD,aLAd,EKA6B,GAAGzG,MAAM,IAAI,GAAG,CAAC;AFtFhD,ACAA,ICuFE;AFtFF,ACAA;ADCA,ACAA,ICuFE;AFtFF,ACAA,ACuFA;AFtFA,ACAA,ACuFA,mCV5KgB,I,EAAM;AQsFtB,ACAA,ACuFA,AV5KI,WAAI,KAAK,MAAL,KAAgB,CAApB,EAAuB;AQsF3B,ACAA,ATrFM,EUwKJ,cVxKW,SAAP;AQsFN,ACAA,ATrFK,IUuKHtQ,GAAA;AFjFF,ACAA,ATrFI,IUsKFC,KAAA,EAIA,AV1KM,KAAK,IU0KXkY,EV1KM,KAAgB,CAApB,EAAuB,QU0KP/J,QAAQ,EAAE;AFpF9B,ACAA,ATrFM,MU0KFhO,OAAO,CAACC,EV1KC,IU0KK,CAAC+N,AV1KD,EAAL,CAAQ,IAAR,CU0Kc,AV1KrB,KU0K0B,IAAI,CAACA,QAAQ,EAAE,kBAAkB,CAAC;AFpFlE,ACAA,ATrFK,MU0KD,IAAI,CAAC8J,SAAS,CAAC,IAAI,CAAC9J,QAAQ,CAAC5D,QAAQ,CAAC;AFpF1C,ACAA,ATrFI,IU0KF,UV1KS,KAAK,GAAL,CAAS;AQsFpB,ACAA,ATtFoB,EU0KjB,cV1KyB,KAAK,IAAL,CAAR;AQuFpB,ACAA,ATvFoB,EU0KjB,MV1KQ,CU0KR8M,AV1KC,cU0KD;AFlFH,ACAA,ACkFG,AVzKA,EU1JyCvJ,mBAAU;AFkPtD,ACAA,AClPsD1M,OAAA,CAAAC,OAAA,GAAAgW,cAAA;AFmPtD,ACAA,ATvFE;AQwFF,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA,mCT1FgB,I,EAAM,K,EAAO;AQ2F7B,ACAA,AT1FI,YAAK,OAAL,CAAa;AQ2FjB,ACAA,AT3FiB,gBAAK,EAAE,IAAF,IAAU,KAAf;AQ4FjB,ACAA,AT5FiB,QAAb;AQ6FJ,ACAA,AT5FG;AQ6FH,ACAA;ADCA,ACAA,AT5FE;AQ6FF,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA,+BT/FY,I,EAAM;AQgGlB,ACAA,AT/FI,YAAK,OAAL,CAAa,mBAAW;AQgG5B,ACAA,AT/FM,aAAI,QAAQ,QAAR,KAAqB,KAAK,YAA9B,EAA4C;AQgGlD,ACAA,AT/FQ,kBAAO,IAAP,CAAY,IAAZ,EAAkB,OAAlB,CAA0B,eAAO;AQgGzC,ACAA,AT/FU,qBAAQ,KAAR,CAAc,GAAd,IAAqB,KAAK,GAAL,CAArB;AQgGV,ACAA,AT/FS,YAFD;AQkGR,ACAA,AT/FO;AQgGP,ACAA,AT/FK,QAND;AQsGJ,ACAA,AT/FI,cAAO,IAAP;AQgGJ,ACAA,AT/FG;AQgGH,ACAA;ADCA,ACAA,AT/FE;AQgGF,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA,6BTlGU,G,EAAK;AQmGf,ACAA,ATlGI,WAAI,eAAe,QAAnB,EAA6B,OAAO,IAAI,CAAJ,CAAP;AQmGjC,ACAA,ATlGI,cAAO,GAAP;AQmGJ,ACAA,ATlGG;AQmGH,ACAA;ADCA,ACAA,ATjGE;AQkGF,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA,ATlGE;AQmGF,ACAA;ADCA,ACAA;ADCA,ACAA,6BTlGU;AQmGV,ACAA,ATlGI,YAAK,OAAL,CAAa,mBAAW;AQmG5B,ACAA,ATlGM,gBAAO,QAAQ,UAAf,EAA2B;AQmGjC,ACAA,ATlGQ,mBAAQ,WAAR,CAAoB,QAAQ,UAA5B;AQmGR,ACAA,ATlGO;AQmGP,ACAA,ATlGK,QAJD;AQuGJ,ACAA,ATlGI,cAAO,IAAP;AQmGJ,ACAA,ATlGG;AQmGH,ACAA;ADCA,ACAA,ATlGE;AQmGF,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA,8BTrGW,M,EAAQ;AQsGnB,ACAA,ATtGmB;AQuGnB,ACAA;ADCA,ACAA,ATvGI,YAAK,OAAL,CAAa,gBAAQ;AQwGzB,ACAA,ATvGM,gBAAK,OAAL,CAAa,MAAb,EAAqB,WAArB,CAAiC,IAAjC;AQwGN,ACAA,ATvGK,QAFD;AQ0GJ,ACAA,ATvGI,cAAO,IAAP;AQwGJ,ACAA,ATvGG;AQwGH,ACAA;ADCA,ACAA,ATvGE;AQwGF,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA,8BT1GW;AQ2GX,ACAA,AT1GI,YAAK,OAAL,CAAa,gBAAQ;AQ2GzB,ACAA,AT1GM,aAAI,KAAK,UAAT,EAAqB;AQ2G3B,ACAA,AT1GQ,gBAAK,UAAL,CAAgB,WAAhB,CAA4B,IAA5B;AQ2GR,ACAA,AT1GO;AQ2GP,ACAA,AT1GK,QAJD;AQ+GJ,ACAA,AT1GI,cAAO,IAAP;AQ2GJ,ACAA,AT1GG;AQ2GH,ACAA;ADCA,ACAA,AT1GE;AQ2GF,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA;ADCA,ACAA,yBT7GM,Y,EAAc;AQ8GpB,ACAA,AT9GoB;AQ+GpB,ACAA;ADCA,ACAA,AT/GI;AQgHJ,ACAA,AT/GI,WAAI,KAAK,MAAT,EAAiB;AQgHrB,ACAA,AT/GM,eAAM,IAAI,KAAJ,CAAU,kCAAV,CAAN;AQgHN,ACAA,AT/GK;AQgHL,ACAA,AT/GI,YAAK,MAAL,GAAc,IAAd;AQgHJ,ACAA;ADCA,ACAA,AT/GI;AQgHJ,ACAA,AT/GI;AQgHJ,ACAA,AT/GI;AQgHJ,ACAA,AT/GI,YAAK,QAAL,CAAc,mBAAW;AQgH7B,ACAA,AT/GM;AQgHN,ACAA,AT/GM,aAAM,OAAO,QAAQ,YAAR,CAAqB,GAArB,CAAb;AQgHN,ACAA,AT/GM,aAAI,IAAJ,EAAU;AQgHhB,ACAA,AT/GQ,eAAI,aAAa,IAAb,CAAJ,EAAwB;AQgHhC,ACAA,AT/GU,mBAAM,IAAI,KAAJ,CAAU,uDAAV,CAAN;AQgHV,ACAA,AT/GS;AQgHT,ACAA,AT/GQ,wBAAa,IAAb,IAAqB,IAAI,QAAJ,CAAa,OAAb,CAArB;AQgHR,ACAA,AT/GO;AQgHP,ACAA,AT/GM;AQgHN,ACAA,AT/GM,sCAAI,QAAQ,UAAZ,GAAyB,OAAzB,CAAiC,gBAAQ;ASgH/C,AT/GQ,eAAM,SAAS,KAAK,SAAL,CAAe,KAAf,CAAqB,GAArB,CAAf;ASgHR,AT/GQ,eAAI,OAAO,MAAP,KAAkB,CAAlB,IAAuB,OAAO,CAAP,MAAc,GAArC,IAA4C,OAAO,CAAP,CAAhD,EAA2D;ASgHnE,AT/GU;ASgHV,AT/GU,iBAAM,SAAS;ASgHzB,AT/GY,wBAAS,aAAa,KAAK,KAAlB,EAAyB,IAAzB,CAA8B,YAA9B,CADI;ASiHzB,AT/GY,sBAAS,OAAO,CAAP,CAFI;ASkHzB,AT/GY,wBAAS,KAHI;ASmHzB,AT/GY;ASgHZ,ATpHyB,cAAf;ASqHV,AT/GU,oBAAK,WAAL,GAAmB,OAAK,WAAL,IAAoB,EAAvC;ASgHV,AT/GU,oBAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAtB;ASgHV;AACA,AT/GU,qBAAQ,gBAAR,CAAyB,OAAO,KAAhC,EAAuC,OAAO,OAA9C,EAAuD,OAAO,OAA9D;ASgHV,AT/GS;ASgHT,AT/GO,UAfD;AS+HN,AT/GK,QA1BD;AS0IJ,AT/GI,cAAO,IAAP;ASgHJ,AT/GG;ASgHH;AACA,AT/GE;ASgHF;AACA;AACA;AACA;AACA;AACA,2BTlHQ,Y,EAAc;ASmHtB,ATnHsB;ASoHtB;AACA,ATpHI,WAAI,CAAC,KAAK,MAAV,EAAkB;ASqHtB,ATpHM,eAAM,IAAI,KAAJ,CAAU,iCAAV,CAAN;ASqHN,ATpHK;ASqHL,ATpHI,YAAK,QAAL,CAAc,mBAAW;ASqH7B,ATpHM;ASqHN,ATpHM,aAAM,OAAO,QAAQ,YAAR,CAAqB,GAArB,CAAb;ASqHN,ATpHM,aAAI,IAAJ,EAAU;ASqHhB,ATpHQ,kBAAO,aAAa,IAAb,CAAP;ASqHR,ATpHO;ASqHP,ATpHM;ASqHN,ATpHM,aAAI,OAAK,WAAT,EAAsB;ASqH5B,ATpHQ,kBAAK,WAAL,CAAiB,OAAjB,CAAyB,kBAAU;ASqH3C,ATpHU,oBAAO,OAAP,CAAe,mBAAf,CAAmC,OAAO,KAA1C,EAAiD,OAAO,OAAxD,EAAiE,OAAO,OAAxE;ASqHV,ATpHS,YAFD;ASuHR,ATpHQ,kBAAK,WAAL,GAAmB,IAAnB;ASqHR,ATpHO;ASqHP,ATnHK,QAdD;ASkIJ,ATnHI,YAAK,MAAL,GAAc,KAAd;ASoHJ,ATnHI,cAAO,IAAP;ASoHJ,ATnHG;ASoHH;AACA,ATnHE;ASoHF;AACA;AACA;AACA;AACA;AACA;AACA,8BTtHW,Q,EAAU;ASuHrB,ATvHqB;ASwHrB;AACA,ATxHI,YAAK,OAAL,CAAa,gBAAQ;ASyHzB,ATxHM,aAAI,QAAQ,CAAC,IAAD,CAAZ;ASyHN,ATxHM,gBAAO,MAAM,MAAb,EAAqB;ASyH3B,ATzH2B;AS0H3B;AACA,AT1HQ,eAAM,UAAU,MAAM,GAAN,EAAhB;AS2HR,AT1HQ,oBAAS,IAAT,SAAoB,OAApB;AS2HR,AT1HQ,mBAAQ,iBAAM,MAAN,kCAAgB,OAAK,WAAL,CAAiB,OAAjB,CAAhB,EAAR;AS2HR,AT1HO;AS2HP,AT1HK,QAPD;ASkIJ,AT1HI,cAAO,IAAP;AS2HJ,AT1HG;AS2HH;AACA,AT1HE;AS2HF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCT7Hc,O,EAAS;AS8HvB,AT7HI,WAAI,QAAQ,QAAZ,EAAsB;AS8H1B,AT7HM,gBAAO,MAAM,IAAN,CAAW,QAAQ,QAAnB,CAAP;AS8HN,AT7HK,QAFD,MAEO;AS8HX,AT7HM;AS8HN,AT7HM,aAAI,QAAQ,UAAZ,EAAwB;AS8H9B,AT7HQ,kBAAO,MAAM,IAAN,CAAW,QAAQ,UAAnB,EAA+B,MAA/B,CAAsC;AS8HrD,AT9HqD,oBAAK,EAAE,QAAF,KAAe,SAAS,YAA7B;AS+HrD,AT/HqD,YAAtC,CAAP;ASgIR,AT/HO;ASgIP,AT/HK;ASgIL,AT/HI,cAAO,EAAP;ASgIJ,AT/HG;ASgIH;AACA,AT/HE;ASgIF;AACA;AACA;AACA;AACA;AACA,gCTlIa,O,EAAS;ASmItB,ATnIsB;ASoItB;AACA,ATpII,eAAQ,KAAR,CAAc,GAAd,EACC,MADD,CACQ;ASoIZ,ATpIY,gBAAa,UAAU,IAAV,GAAiB,MAA9B;ASqIZ,ATrIY,QADR,EAEC,OAFD,CAES,qBAAa;ASqI1B,ATpIM,gBAAK,OAAL,CAAa,mBAAW;ASqI9B,ATpIQ,mBAAQ,SAAR,CAAkB,GAAlB,CAAsB,SAAtB;ASqIR,ATpIO,UAFD;ASuIN,ATpIK,QAND;AS2IJ,ATpII,cAAO,IAAP;ASqIJ,ATpIG;ASqIH;AACA,ATpIE;ASqIF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCTvIgB,O,EAAS;ASwIzB,ATxIyB;ASyIzB;AACA,ATzII,eAAQ,KAAR,CAAc,GAAd,EACC,MADD,CACQ;ASyIZ,ATzIY,gBAAa,UAAU,IAAV,GAAiB,MAA9B;AS0IZ,AT1IY,QADR,EAEC,OAFD,CAES,qBAAa;AS0I1B,ATzIM,gBAAK,OAAL,CAAa,mBAAW;AS0I9B,ATzIQ,mBAAQ,SAAR,CAAkB,MAAlB,CAAyB,SAAzB;AS0IR,ATzIO,UAFD;AS4IN,ATzIK,QAND;ASgJJ,ATzII,cAAO,IAAP;AS0IJ,ATzIG;AS0IH;AACA,ATzIE;AS0IF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCT5IqB,O,EAAS,S,EAAW;AS6IzC,AT5II,WAAI,SAAJ,EAAe;AS6InB,AT5IM,cAAK,UAAL,CAAgB,OAAhB;AS6IN,AT5IK,QAFD,MAEO;AS6IX,AT5IM,cAAK,aAAL,CAAmB,OAAnB;AS6IN,AT5IK;AS6IL,AT5II,cAAO,IAAP;AS6IJ,AT5IG;AS6IH;AACA,AT5IE;AS6IF;AACA;AACA;AACA;AACA;AACA;AACA,6BT/IU;ASgJV,AT/II,WAAM,SAAS,KAAK,GAAL,CAAS;ASgJ5B,AThJ4B,gBAAK,EAAE,SAAF,CAAY,IAAZ,CAAL;ASiJ5B,ATjJ4B,QAAT,CAAf;ASkJJ,ATjJI,iDAAW,QAAX,mCAAuB,MAAvB;ASkJJ,ATjJG;ASkJH;AACA,ATjJE;ASkJF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBTpJK,K,EAAO,O,EAA0B;ASqJtC,ATrJsC,WAAjB,OAAiB,yDAAP,KAAO;ASsJtC;AACA,ATtJI;ASuJJ,ATtJI;ASuJJ,ATtJI,YAAK,SAAL,GAAiB,KAAK,SAAL,IAAkB,EAAnC;ASuJJ,ATtJI,YAAK,SAAL,CAAe,KAAf,IAAwB,KAAK,SAAL,CAAe,KAAf,KAAyB,EAAjD;ASuJJ,ATtJI,YAAK,SAAL,CAAe,KAAf,EAAsB,IAAtB,CAA2B,EAAC,gBAAD,EAAU,gBAAV,EAA3B;ASuJJ,ATtJI,YAAK,OAAL,CAAa;ASuJjB,ATvJiB,gBAAK,EAAE,gBAAF,CAAmB,KAAnB,EAA0B,OAA1B,EAAmC,OAAnC,CAAL;ASwJjB,ATxJiB,QAAb;ASyJJ,ATxJI,cAAO,IAAP;ASyJJ,ATxJG;ASyJH;AACA,ATxJE;ASyJF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBT3JM,K,EAAO,O,EAA0B;AS4JvC,AT5JuC;AS6JvC;AACA,AT9JuC,WAAjB,OAAiB,yDAAP,KAAO;AS+JvC;AACA,AT/JI;ASgKJ,AT/JI,WAAI,CAAC,KAAK,SAAV,EAAqB;ASgKzB,AT/JM,gBAAO,IAAP;ASgKN,AT/JK;ASgKL,AT/JI;ASgKJ,AT/JI,WAAI,CAAC,KAAD,IAAU,CAAC,OAAf,EAAwB;ASgK5B,AT/JM;ASgKN,AT/JM,gBAAO,IAAP,CAAY,KAAK,SAAjB,EAA4B,OAA5B,CAAoC,qBAAa;ASgKvD,AT/JQ,mBAAK,SAAL,CAAe,SAAf,EAA0B,OAA1B,CAAkC,kBAAU;ASgKpD,AT/JU,qBAAK,OAAL,CAAa;ASgKvB,AThKuB,sBAAK,EAAE,mBAAF,CAAsB,SAAtB,EAAiC,OAAO,OAAxC,EAAiD,OAAO,OAAxD,CAAL;ASiKvB,ATjKuB,cAAb;ASkKV,ATjKS,YAFD;ASoKR,ATjKO,UAJD;ASsKN,ATjKM;ASkKN,ATjKM,gBAAO,KAAK,SAAZ;ASkKN,ATjKK,QATD,MASO;ASkKX,ATjKM;ASkKN,ATjKM,aAAI,SAAS,CAAC,OAAd,EAAuB;ASkK7B,ATjKQ,eAAI,KAAK,SAAL,CAAe,KAAf,CAAJ,EAA2B;ASkKnC,ATjKU,kBAAK,SAAL,CAAe,KAAf,EAAsB,OAAtB,CAA8B,kBAAU;ASkKlD,ATjKY,uBAAK,OAAL,CAAa;ASkKzB,ATlKyB,wBAAK,EAAE,mBAAF,CAAsB,KAAtB,EAA6B,OAAO,OAApC,EAA6C,OAAO,OAApD,CAAL;ASmKzB,ATnKyB,gBAAb;ASoKZ,ATnKW,cAFD;ASsKV,ATnKS;ASoKT,ATnKQ;ASoKR,ATnKQ,kBAAO,KAAK,SAAL,CAAe,KAAf,CAAP;ASoKR,ATnKO,UARD,MAQO;ASoKb,ATnKQ;ASoKR,ATnKQ;ASoKR,ATnKQ,eAAI,KAAK,SAAL,CAAe,KAAf,CAAJ,EAA2B;ASoKnC,ATnKU,iBAAM,QAAQ,KAAK,SAAL,CAAe,KAAf,EAAsB,SAAtB,CAAgC,kBAAU;ASoKlE,ATnKY,sBAAO,OAAO,OAAP,KAAmB,OAAnB,IAA8B,OAAO,OAAP,KAAmB,OAAxD;ASoKZ,ATnKW,cAFa,CAAd;ASsKV,ATnKU,iBAAI,SAAS,CAAb,EAAgB;ASoK1B,ATpK0B;ASqK1B,ATpKY,qBAAM,SAAS,QAAK,SAAL,CAAe,KAAf,EAAsB,KAAtB,CAAf;ASqKZ,ATpKY,yBAAK,OAAL,CAAa;ASqKzB,ATrKyB,0BAAK,EAAE,mBAAF,CAAsB,KAAtB,EAA6B,OAAO,OAApC,EAA6C,OAAO,OAApD,CAAL;ASsKzB,ATtKyB,kBAAb;ASuKZ,ATtKY,yBAAK,SAAL,CAAe,KAAf,EAAsB,MAAtB,CAA6B,KAA7B,EAAoC,CAApC;ASuKZ,AT1K0B;AS2K1B,ATvKW;ASwKX,ATvKS;ASwKT,ATvKO;ASwKP,ATvKK;ASwKL,ATvKI,cAAO,IAAP;ASwKJ,ATvKG;ASwKH;AACA;AACA,yBTnbW;ASobX,ATnbI,cAAO,KAAK,CAAL,CAAP;ASobJ,ATnbG;ASobH;AACA;AACA;AACA,sBTzlBuB,K;AS0lBvB;AACA,AT/KA;ASgLA;AACA;AACA;AACA;AACA,ATjLe,UAAS,CAAT,GAAa;ASkL5B,ATjLE,6CAAW,QAAX,2CAAuB,SAAvB;ASkLF,ATjLC,G;ASkfile":"app.a6a4d504.js","sourceRoot":"..","sourcesContent":["/**\n * base class for a lot of types in the app. Provides for callbacks to be invoked when\n * its dispose() method is called. Also provides event emitter capabilities\n */\n\nexport default class Disposable {\n  /**\n   * the purpose of this class is simply to provide a way to add\n   * various functions to be called when the dispose method is\n   * called. This allows classes to create methods ( usually lambdas )\n   * juxtaposed to where an object that needs disposing is declared.\n   */\n  constructor() {\n    this.disposeFunctions = [];\n    this.listeners = [];\n  }\n\n  /**\n   * add a function to call when we are disposed\n   * NOTE: if you want to later remove a dispose function do NOT use a lambda.\n   * @param func\n   */\n  addDisposable(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.disposeFunctions.indexOf(func) < 0,\n      \"listener already registered\"\n    );\n    this.disposeFunctions.push(func);\n  }\n\n  /**\n   * remove a function that was previously added.\n   * @param func\n   */\n  removeDisposable(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.disposeFunctions.indexOf(func) >= 0,\n      \"listener is not registered\"\n    );\n    this.disposeFunctions = this.disposeFunctions.filter(f => f !== func);\n  }\n\n  /**\n   * call all our dispose methods\n   */\n  dispose() {\n    console.assert(!this.disposed, \"already disposed\");\n    this.disposed = true;\n    this.disposeFunctions.forEach(f => f());\n    this.disposeFunctions.length = 0;\n  }\n\n  /**\n   * add a change listener any changes to the airplane configuration\n   * @param func\n   */\n  addListener(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.listeners.indexOf(func) < 0,\n      \"listener already registered\"\n    );\n    this.listeners.push(func);\n  }\n\n  /**\n   * remove an existing change listener\n   * @param func\n   */\n  removeListener(func) {\n    console.assert(func && typeof func === \"function\", \"expected a callback\");\n    console.assert(\n      this.listeners.indexOf(func) >= 0,\n      \"listener is not registered\"\n    );\n    this.listeners = this.listeners.filter(f => f !== func);\n  }\n\n  /**\n   * remove all listeners\n   */\n  removeAllListeners() {\n    this.listeners.length = 0;\n  }\n\n  /**\n   * send a change notification to all listeners\n   */\n  callListeners() {\n    this.listeners.forEach(l => l(this));\n  }\n}\n","/**\n * round a real to given number of decimal places. This is much better than toFixed for the following reasons:\n *\n * round(1.005, 2) = 1.01 ( toFixed would give 1.00 )\n * round(2.00, 2 ) = 2 ( toFixed would give 2.00 )\n * @param value\n * @param decimals\n * @returns {number}\n */\nexport const round = (value, decimals) => {\n  return Number(Math.round(value + \"e\" + decimals) + \"e-\" + decimals);\n};\n\n// map an input value ( 0..1 ) to a non linear scale ( 0..maxValue ) where midvalue is the value\n// at the midpoint of the non linear scale. NOTE: Specifying a linear scale will produce an error.\n/**\n * map an input value 0..1 to a non linear scale 0..maxValue with a specified mid point\n *\n * @param inputValue\n * @param midValue\n * @param maxValue\n * @returns {number}\n */\nexport const nonLinearScale = (inputValue, midValue, maxValue) => {\n  let returnValue;\n  console.assert(\n    inputValue >= 0 && inputValue <= 1,\n    \"input value out of range\"\n  );\n  console.assert(\n    midValue > 0 || midValue < maxValue,\n    \"MidValue must be greater than 0 and less than MaxValue\"\n  );\n\n  // returnValue = A + B * Math.Exp(C * inputValue);\n  const M = maxValue / midValue;\n  const C = Math.log(Math.pow(M - 1, 2));\n  const B = maxValue / (Math.exp(C) - 1);\n  const A = -1 * B;\n  returnValue = A + B * Math.exp(C * inputValue);\n  // you will get NaN for a linear scale, so handle that edge case by returning the scaled linear value\n  if (isNaN(returnValue)) {\n    return maxValue * inputValue;\n  }\n  return returnValue;\n};\n\n/**\n * lerp from -> to over the given time. Returns a function that can be used to\n * cancel the lerp at any time. If sine based ease is used by default by can be disabled.\n * @param from\n * @param to\n * @param time\n * @param callback\n * @param ease\n * @returns {function()}\n */\nexport const lerp = (from, to, time, callback, ease = true) => {\n  console.assert(\n    isFinite(from) && isFinite(to) && isFinite(time) && time > 0,\n    \"invalid parameters\"\n  );\n\n  // time span over which to operate\n  const startTime = Date.now();\n  const endTime = startTime + time;\n\n  let requestId = 0;\n\n  const timer = () => {\n    let value = to;\n    const now = Date.now();\n    if (now < endTime) {\n      const delta = now - startTime;\n      const normalized = ease\n        ? Math.sin((delta / time) * (Math.PI / 2))\n        : delta / time;\n      value = from + normalized * (to - from);\n      requestId = requestAnimationFrame(timer);\n    } else {\n      requestId = 0;\n    }\n    callback(value);\n  };\n\n  requestId = requestAnimationFrame(timer);\n\n  return () => {\n    if (requestId) {\n      cancelAnimationFrame(requestId);\n    }\n  };\n};\n\n/**\n * TODO, gives this a shared requestAnimationFrame\n */\nexport class AnimatedValue {\n  constructor(value, options = {}) {\n    // assign our option\n    Object.assign(this, options, {\n      lowLimit: -Number.MAX_VALUE,\n      hiLimit: Number.MAX_VALUE,\n      time: 1000,\n      callback: () => {}\n    });\n    // the actual value with initial clamping\n    this.value = Math.max(this.lowLimit, Math.min(this.hiLimit, value));\n    // the current value of the animation\n    this.currentValue = value;\n  }\n\n  /**\n   * set the value and begin a lerp as necessary to reach it\n   * @param value\n   */\n  setValue(value) {\n    if (value !== this.value) {\n      this.cancelLerp();\n      this.value = Math.max(this.lowLimit, Math.min(this.hiLimit, value));\n      this.lerp = lerp(this.currentValue, this.value, this.time, v => {\n        this.currentValue = v;\n        this.callback(this.currentValue, this.value);\n      });\n    }\n  }\n\n  /**\n   * set the value with immediate effect, no animation\n   * @param value\n   */\n  setValueImmediate(value) {\n    this.value = Math.max(this.lowLimit, Math.min(this.hiLimit, value));\n    this.currentValue = value;\n    this.cancelLerp();\n    this.callback(this.currentValue, this.value);\n  }\n\n  /**\n   * cancel any current lerp\n   */\n  cancelLerp() {\n    if (this.lerp) {\n      this.lerp();\n      this.lerp = null;\n    }\n  }\n}\n","/**\n * convert millibars to feet altitude\n * @param millibars\n * @returns {number}\n */\nexport function millibarsToFeet(millibars) {\n  // 1024 = Math.pow(2, 10)\n  // reverse Math.pow(1024, 1 / 10)\n  const feet = (1 - Math.pow(millibars / 1013.25, 0.190284)) * 145366.45;\n  return feet;\n}\n\n/**\n * convert inches of mercury to feet altitude\n * @param inchesNg\n * @returns {number}\n */\nexport function inchesHgToFeet(inchesNg) {\n  return millibarsToFeet(inchesHgToMillibars(inchesNg));\n}\n\n/**\n * millibars to inches of mercury\n * @param millibars\n * @returns {number}\n */\nexport function millibarsToInchesHg(millibars) {\n  return 0.02953 * millibars;\n}\n\n/**\n * inches of mercury to millibars\n * @param millibars\n * @returns {number}\n */\nexport function inchesHgToMillibars(inchesHg) {\n  return inchesHg / 0.02953;\n}\n\n/**\n * convert a signed degrees value to positive 0->360\n * e.g. -10 becomes 350\n *      400 becomes 40\n */\nexport function signedDegreesToPositive360(vIn) {\n  let vOut = vIn;\n  if (vOut < 0) {\n    vOut = 360 + vOut;\n  }\n  vOut = vOut % 360;\n  return vOut;\n}\n\n/**\n * standard barometer in inches of mercury\n * @type {number}\n */\nexport const STANDARD_BAROMETER = 29.92;\n","import Disposable from \"./disposable\";\nimport { lerp } from \"./utils/math\";\nimport { STANDARD_BAROMETER } from \"./utils/conversions\";\n\nexport default class Airplane extends Disposable {\n  constructor() {\n    super();\n    // default configuration for an airplane, Similar to a Cessna 172\n    Object.assign(this, {\n      // V speeds KIAS\n      VS0: 40,\n      VS1: 50,\n      VR: 55,\n      VLOF: 60,\n      VFE: 85,\n      VA: 95,\n      VNO: 130,\n      VNE: 157,\n\n      // maximum airspeed that is displayed on the analog airspeed gauge\n      MAX_DISPLAYED_SPEED: 200,\n\n      // maximum altitude in ft\n      SERVICE_CEILING: 17000,\n\n      // speed in KIAS\n      airspeed: 0,\n      // rate of change of airspeed in knots per second, + or -\n      airspeedRate: 0,\n      // altitude in feet\n      altitude: 0,\n      // vertical speed in feet per minute\n      altitudeRate: 0,\n      // static pressure as measured at the static port\n      staticPressure: STANDARD_BAROMETER,\n      // barometric pressure at sea level (QNH) ( inches of mercury )\n      barometer: STANDARD_BAROMETER,\n      // magnetic heading\n      heading: 0,\n      // rate of heading change in degrees per seconds, + or -\n      headingRate: 0,\n      // pitch, degrees\n      pitch: 0,\n      // rate of pitch change in degrees per seconds, + or -\n      pitchRate: 0,\n      // roll, degrees\n      roll: 0,\n      // rate of roll change in degrees per seconds, + or -\n      rollRate: 0,\n      // yaw degrees\n      yaw: 0,\n      // rate of yaw change in degrees per seconds, + or -\n      yawRate: 0,\n\n      // idle speed of engine\n      idle: 1000,\n      // max RPM\n      redLine: 2700,\n      // lower end of green range\n      greenMin: 2000,\n      // current RPM\n      rpm: 0,\n\n      // change listeners\n      listeners: [],\n\n      // lerps for different properties\n      lerps: {}\n    });\n\n    // cancel all lerps when disposed\n    this.addDisposable(() => {\n      Object.values(this.lerps).forEach(f => f());\n      this.lerps = {};\n    });\n  }\n\n  /**\n   * set the airspeed\n   * @param kias\n   */\n  setAirspeed(kias) {\n    if (kias !== this.airspeed) {\n      this.addLerp(\n        \"airspeed\",\n        lerp(this.airspeed, kias, 1000, speed => {\n          this.airspeed = speed;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the rpm\n   * @param rpm\n   */\n  setRPM(rpm) {\n    if (rpm !== this.rpm) {\n      this.addLerp(\n        \"rpm\",\n        lerp(this.rpm, rpm, 1000, rpm => {\n          this.rpm = rpm;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the altitude\n   * @param feet\n   */\n  setAltitude(feet) {\n    if (feet !== this.altitude) {\n      this.addLerp(\n        \"altitude\",\n        lerp(this.altitude, feet, 4000, altitude => {\n          this.altitude = altitude;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the altitude\n   * @param verticalSpeed\n   */\n  setAltitudeRate(verticalSpeed) {\n    if (verticalSpeed !== this.altitudeRate) {\n      this.addLerp(\n        \"altitude-rate\",\n        lerp(this.altitudeRate, verticalSpeed, 4000, rate => {\n          this.altitudeRate = rate;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the barometer setting ( QNH ). Can be animated or immediate\n   * @param inchesOfMercury\n   */\n  setBarometer(inchesOfMercury, immediate = false) {\n    if (immediate) {\n      this.barometer = inchesOfMercury;\n      this.callListeners();\n    } else {\n      if (inchesOfMercury !== this.barometer) {\n        this.addLerp(\n          \"barometer\",\n          lerp(this.barometer, inchesOfMercury, 4000, qnh => {\n            this.barometer = qnh;\n            this.callListeners();\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * set the altitude\n   * @param feet\n   */\n  setHeading(magneticHeading) {\n    if (magneticHeading !== this.heading) {\n      this.addLerp(\n        \"heading\",\n        lerp(this.heading, magneticHeading, 3000, heading => {\n          this.heading = heading;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the roll\n   * @param degrees\n   */\n  setRoll(degrees) {\n    if (degrees !== this.roll) {\n      this.addLerp(\n        \"roll\",\n        lerp(this.roll, degrees, 3000, r => {\n          this.roll = r;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the roll rate\n   * @param degreesPerSecond\n   */\n  setRollRate(degreesPerSecond) {\n    if (degreesPerSecond !== this.rollRate) {\n      this.addLerp(\n        \"roll-rate\",\n        lerp(this.rollRate, degreesPerSecond, 3000, r => {\n          this.rollRate = r;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the pitch\n   * @param degrees\n   */\n  setPitch(degrees) {\n    if (degrees !== this.pitch) {\n      this.addLerp(\n        \"pitch\",\n        lerp(this.pitch, degrees, 3000, p => {\n          this.pitch = p;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * set the degrees left ( negative ) or right ( positive ) of neutral ( 0 )\n   * @param degrees\n   */\n  setYaw(degrees) {\n    if (degrees !== this.yaw) {\n      this.addLerp(\n        \"yaw\",\n        lerp(this.yaw, degrees, 3000, p => {\n          this.yaw = p;\n          this.callListeners();\n        })\n      );\n    }\n  }\n\n  /**\n   * add a lerp and cancel an existing one with the same key\n   * @param key\n   */\n  addLerp(key, callback) {\n    this.cancelLerp(key);\n    this.lerps[key] = callback;\n  }\n\n  /**\n   * cancel any existing lerp\n   */\n  cancelLerp(key) {\n    if (this.lerps[key]) {\n      this.lerps[key]();\n      delete this.lerps[key];\n    }\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 001accb81df17d8ee229\n **/","/**\n * simplest regex for identifying a tag string versus a selector string\n * @type {RegExp}\n */\nconst tagRegex = new RegExp('\\s*<([^>]+)>');\n\n/**\n * getters and setters are created for these properties. The class does not attempt to distinguish between\n * Node, Element, HTMLElement etc so these properties may or may not exist on any particular member of our list.\n * Read only properties are prefixed with 'r+'.\n * For DOMArray's with exactly one item, the getter returns the value returned by the native property.\n * For DOMArray's containing more than one item an array of results is returned.\n * Empty DOMArray's return null\n * @type {string[]}\n */\nconst properties = [\n  // Node, properties\n  'r+childNodes',\n  'r+firstChild',\n  'r+lastChild',\n  'r+nextSibling',\n  'r+previousSibling',\n  'r+nodeName',\n  'r+nodeType',\n  'nodeValue',\n  'r+ownerDocument',\n  'r+parentElement',\n  'r+parentNode',\n  'textContent',\n  'r+tagName',\n  // Element properties\n  'r+attributes',\n  'r+childElementCount',\n  'r+children',\n  'r+firstElementChild',\n  'r+lastElementChild',\n  'r+classList',\n  'className',\n  'r+clientTop',\n  'r+clientLeft',\n  'r+clientWidth',\n  'r+clientHeight',\n  'id',\n  'innerHTML',\n  'outerHTML',\n  'innerText',\n  'outerText',\n  'r+localName',\n  'r+scrollWidth',\n  'r+scrollHeight',\n  'scrollTop',\n  'scrollLeft',\n  'name',\n  'title',\n  'value',\n  'checked',\n  'style',\n  'disabled',\n];\n\n/**\n * methods for native Node/Element/HTMLElement objects that we create pass through functions for.\n * Rules are the same as for getter properties i.e. an array is returned for lists with items > 1\n * @type {Array}\n */\nconst methods = [\n  'appendChild',\n  'removeChild',\n  'replaceChild',\n  'click',\n  'cloneNode',\n  'compareDocumentPosition',\n  'contains',\n  'hasChildNodes',\n  'insertBefore',\n  'getBoundingClientRect',\n  'getAttribute',\n  'getAttributeNS',\n  'setAttribute',\n  'setAttributeNS',\n  'removeAttribute',\n  'removeAttributeNS',\n  'addEventListener',\n  'removeEventListener',\n  'normalize',\n  'focus',\n  'blur',\n  'querySelector',\n  'querySelectorAll',\n];\n\n/**\n * the actual elements class which inherits from native Array\n */\n\nclass DOMArray extends Array {\n  constructor(...args) {\n    super();\n    // test first argument to see if its a string\n    const isString = typeof(args[0]) === 'string';\n    // if its a string see if it a tag definition\n    const isTag = isString && tagRegex.exec(args[0].trim());\n\n    // first argument is a string but not a tag definition so we assume CSS selector\n    if ((args.length === 1 || args.length == 2) && isString && !isTag) {\n      this.createFromCSSSelector(args[0], args[1]);\n    } else {\n      // second option is that args if just a string e.g. '<div class=\"xyz\"><p>Title</p></div>'\n      // (white space is trimmed to determine if this might be a tag)\n      if (args.length === 1 && isTag) {\n        this.createFromTAGDefinition(args[0]);\n      } else {\n        // must be raw elements or other DOMArray instances\n        this.createFromElements(...args);\n      }\n    }\n    // inject native property names and function names to the list\n    this.injectMethodsAndProperties();\n  }\n\n  /**\n   * bind the read/write properties common to most HTMLElements and Node instances to this object\n   */\n  injectMethodsAndProperties() {\n    // setup read/write properties\n    properties.forEach(p => {\n      // property can be a name or 'r+' name for read only properties\n      const tokens = p.split('+');\n      const readOnly = tokens.length === 2 && tokens[0] === 'r';\n      const name = readOnly ? tokens[1] : tokens[0];\n      // create getter and optional setter\n      const newProperty = Object.assign({\n        get: this.genericGetter.bind(this, name),\n      }, readOnly ? {} : {\n        set: this.genericSetter.bind(this, name),\n      });\n      Object.defineProperty(this, name, newProperty);\n    });\n\n    // setup methods\n    methods.forEach(name => {\n      this[name] = this.genericMethod.bind(this, name);\n    });\n  }\n\n  /**\n   * create our elements list from a CSS selector and option root element ( either\n   * a native HTMLElement/Node or another DOMArray )\n   * @param selector\n   * @param rootElement\n   */\n  createFromCSSSelector(selector, rootElement) {\n    // use the given root element or the document\n    const root = rootElement ? this.getNode(rootElement) : document;\n    // return a proxy using the results of the selector as the initial array\n    this.push(...root.querySelectorAll(selector));\n  }\n\n  /**\n   * create the list from a template string e.g. '<div>A DIV<div><span>A Span</span>'\n   * @param template\n   */\n  createFromTAGDefinition(template) {\n    // use a temporary DIV and insertAdjacentHTML to construct the DOM\n    const d = document.createElement('DIV');\n    d.insertAdjacentHTML('afterbegin', template);\n    // normalize the context to remove extraneous white space / text content nodes\n    d.normalize();\n    // add children directly into our list ( we avoid childNodes because that would pick\n    // up empty text nodes which is a problem when using multiline template strings\n    this.push(...this.getChildren(d));\n    // remove all the children of the temporary div, so that the newly created top level nodes will be unparented\n    while (d.firstChild) d.removeChild(d.firstChild);\n  }\n\n  /**\n   * create from a mixed list of elements or other DOMArray instances.\n   * @param args\n   */\n  createFromElements(...args) {\n    // only remaining option is that each argument is a DOM node or possible another elements list\n    args.forEach(arg => {\n      if (arg instanceof DOMArray) {\n        this.push(...arg);\n      } else {\n        this.push(arg);\n      }\n    });\n  }\n\n  /**\n   * all generic methods redirect here\n   * @param name\n   * @param args\n   */\n  genericMethod(name, ...args) {\n    if (this.length === 0) {\n      return undefined;\n    }\n    if (this.length === 1) {\n      return this.el[name].call(this.el, ...args);\n    }\n    return this.map(node => node[name].call(node, ...args));\n  }\n\n  /**\n   * generic getter\n   * @param name - the property to return.\n   */\n  genericGetter(name) {\n    if (this.length === 0) {\n      return undefined;\n    }\n    if (this.length === 1) {\n      return this.el[name];\n    }\n    return this.map(node => node[name]);\n  }\n\n  /**\n   * generic setter\n   * @param name\n   * @param value\n   */\n  genericSetter(name, value) {\n    this.forEach(n => n[name] = value);\n  }\n\n  /**\n   * apply the key/value pairs in hash to all our elements\n   */\n  setStyles(hash) {\n    this.forEach(element => {\n      if (element.nodeType === Node.ELEMENT_NODE) {\n        Object.keys(hash).forEach(key => {\n          element.style[key] = hash[key];\n        });\n      }\n    });\n    return this;\n  }\n\n  /**\n   * if the obj is a DOMArray then return the first member otherwise assume\n   * the object is a node and return it.\n   */\n  getNode(obj) {\n    if (obj instanceof DOMArray) return obj[0];\n    return obj;\n  }\n\n\n  /**\n   * return the native el of the first element in the list\n   */\n  get el() {\n    return this[0];\n  }\n\n  /**\n   * remove all elements from the elements in our list\n   */\n  empty() {\n    this.forEach(element => {\n      while (element.firstChild) {\n        element.removeChild(element.firstChild);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * appendTo parents all the top level elements in the list to\n   * the given element. Which can be a native element or a DOMArray ( in which case\n   * the elements are append to the first element in the list )\n   */\n  appendTo(parent) {\n    this.forEach(node => {\n      this.getNode(parent).appendChild(node);\n    });\n    return this;\n  }\n\n  /**\n   * remove all our nodes from their parents\n   */\n  remove() {\n    this.forEach(node => {\n      if (node.parentNode) {\n        node.parentNode.removeChild(node);\n      }\n    });\n    return this;\n  }\n\n  /**\n   * iterate every node and all their children looking for data-ref=\"name\" attributes.\n   * Assign targetObject[name] to the matching DOM element.\n   * At the same time look for data-event-* attributes and add event listeners.\n   * e.g. data-event-input=\"onInput\" will call\n   * element.addEventListener('input', targetObject[\"onInput\"].bind(targetObject))\n   * NOTE: The event handlers are just named methods so .bind is called on the method\n   * to ensure 'this' is correct.\n   */\n  zip(targetObject) {\n    // zipping/unzipping should occur serially and once\n    if (this.zipped) {\n      throw new Error('DOMArray has already been zipped');\n    }\n    this.zipped = true;\n\n    // we could use a CSS selector to find the 'r' attributes but for\n    // event attribute (e-???) there is no available selector so\n    // we walk the tree of elements using a stack.\n    this.traverse(element => {\n      // adopt references\n      const name = element.getAttribute('r');\n      if (name) {\n        if (targetObject[name]) {\n          throw new Error('Element binding would overwrite an existing property.');\n        }\n        targetObject[name] = new DOMArray(element);\n      }\n      // add event handlers...we expect something like e-click=\"onClick\"\n      [...element.attributes,].forEach(attr => {\n        const tokens = attr.localName.split('-');\n        if (tokens.length === 2 && tokens[0] === 'e' && tokens[1]) {\n          // create a record of each handler added so we can remove when unzip is called\n          const record = {\n            handler: targetObject[attr.value].bind(targetObject),\n            event  : tokens[1],\n            capture: false,\n            element,\n          };\n          this.zipHandlers = this.zipHandlers || [];\n          this.zipHandlers.push(record);\n\n          element.addEventListener(record.event, record.handler, record.capture);\n        }\n      });\n    });\n    return this;\n  }\n\n  /**\n   * reverse the actions of zip. Remove references and remove event listeners\n   */\n  unzip(targetObject) {\n    if (!this.zipped) {\n      throw new Error('DOMArray instance is not zipped');\n    }\n    this.traverse(element => {\n      // remove references\n      const name = element.getAttribute('r');\n      if (name) {\n        delete targetObject[name];\n      }\n      // remove event handlers\n      if (this.zipHandlers) {\n        this.zipHandlers.forEach(record => {\n          record.element.removeEventListener(record.event, record.handler, record.capture);\n        });\n        this.zipHandlers = null;\n      }\n\n    });\n    this.zipped = false;\n    return this;\n  }\n\n  /**\n   * utility function. Used in zip, unzip for example. Traverses all nodes and their\n   * children in the list invoking the callback for each one\n   */\n  traverse(callback) {\n    this.forEach(node => {\n      let stack = [node,];\n      while (stack.length) {\n        const element = stack.pop();\n        callback.call(this, element);\n        stack = stack.concat(...this.getChildren(element));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * get only the element children of a node, allowing for the possibility the .children doesn't exist ( e.g. SVG tag )\n   * and filter the child nodes.\n   * @param n\n   * @returns Array\n   */\n  getChildren(element) {\n    if (element.children) {\n      return Array.from(element.children);\n    } else {\n      // filter childNodes to only elements\n      if (element.childNodes) {\n        return Array.from(element.childNodes).filter(n => n.nodeType === document.ELEMENT_NODE);\n      }\n    }\n    return [];\n  }\n\n  /**\n   * add white space separated classes to our elements classList\n   */\n  addClasses(classes) {\n    classes.split(' ')\n    .filter(className => className.trim().length)\n    .forEach(className => {\n      this.forEach(element => {\n        element.classList.add(className);\n      });\n    });\n    return this;\n  }\n\n  /**\n   * remove white space separated class names from the classList of each node\n   * @param classes\n   * @returns {DOMArray}\n   */\n  removeClasses(classes) {\n    classes.split(' ')\n    .filter(className => className.trim().length)\n    .forEach(className => {\n      this.forEach(element => {\n        element.classList.remove(className);\n      });\n    });\n    return this;\n  }\n\n  /**\n   * a common usage and worthy of a method. Add the given classes\n   * to our items if the condition is truthy, otherwise remove them\n   * @param classes\n   * @param condition\n   */\n  classesConditional(classes, condition) {\n    if (condition) {\n      this.addClasses(classes);\n    } else {\n      this.removeClasses(classes);\n    }\n    return this;\n  }\n\n  /**\n   * return a new DOMArray contain a deep cloned copy\n   * each node\n   */\n  clone() {\n    const clones = this.map(n => n.cloneNode(true));\n    return new DOMArray(...clones);\n  }\n\n  /**\n   * called addEventListener for each element in the list,\n   * @param event\n   * @param handler\n   */\n  on(event, handler, capture = false) {\n    // listeners group by event name is an object ( since event is a string ) but the\n    // handlers for each event are stored in a map which can take a function as a key.\n    this.listeners = this.listeners || {};\n    this.listeners[event] = this.listeners[event] || [];\n    this.listeners[event].push({handler, capture,});\n    this.forEach(n => n.addEventListener(event, handler, capture));\n    return this;\n  }\n\n  /**\n   * remove the handlers from the list. Three ways to call.\n   * ()                   : remove all registered listeners\n   * (eventName)          : remove all listeners for that event.\n   * (eventName, handler) : remove the specific handler for a specific event.\n   */\n  off(event, handler, capture = false) {\n    // ignore if we don't have any listeners\n    if (!this.listeners) {\n      return this;\n    }\n    // if no event or handler then remove all registered events\n    if (!event && !handler) {\n      // iterate all events\n      Object.keys(this.listeners).forEach(eventName => {\n        this.listeners[eventName].forEach(record => {\n          this.forEach(n => n.removeEventListener(eventName, record.handler, record.capture));\n        });\n      });\n      // reset all listeners\n      delete this.listeners;\n    } else {\n      // if only event name specified remove all listeners for that event\n      if (event && !handler) {\n        if (this.listeners[event]) {\n          this.listeners[event].forEach(record => {\n            this.forEach(n => n.removeEventListener(event, record.handler, record.capture));\n          });\n        }\n        // delete listeners for this specific event\n        delete this.listeners[event];\n      } else {\n        // remove the specific listener if it is present, by finding the record with the handler\n        // ( the capture flag must match as well )\n        if (this.listeners[event]) {\n          const index = this.listeners[event].findIndex(record => {\n            return record.handler === handler && record.capture === capture;\n          });\n          if (index >= 0) {\n            const record = this.listeners[event][index];\n            this.forEach(n => n.removeEventListener(event, record.handler, record.capture));\n            this.listeners[event].splice(index, 1);\n          }\n        }\n      }\n    }\n    return this;\n  }\n}\n\n/**\n * We export a factory function for DOMArray so there is no need to the new operator\n */\nexport default function D() {\n  return new DOMArray(...arguments);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./javascripts/dom.js\n **/","import Disposable from \"./disposable\";\n/**\n * base class for things that use lerps and intervals to animate their internal state\n */\nexport default class Animated extends Disposable {\n  /**\n   * initialize lerp hash\n   */\n  constructor() {\n    super();\n    this.lerps = {};\n    this.addDisposable(() => this.cancelAllLerps());\n  }\n\n  /**\n   * add a lerp/interval that can be cancelled with cancelLerp\n   * @param key\n   * @param callback\n   */\n  addLerp(key, callback) {\n    this.cancelLerp(key);\n    this.lerps[key] = callback;\n  }\n\n  /**\n   * cancel any existing lerp /interval that was registered with addLerp\n   */\n  cancelLerp(key) {\n    if (this.lerps[key]) {\n      this.lerps[key]();\n      delete this.lerps[key];\n    }\n  }\n\n  /**\n   * cancel all lerps\n   */\n  cancelAllLerps() {\n    Object.values(this.lerps).forEach(f => f());\n    this.lerps = {};\n  }\n}\n","import Animated from \"./animated\";\n\n/**\n * base class for all analog / digital instruments\n */\nexport default class Instrument extends Animated {\n  /**\n   * requires at the very least width, height and an airplane\n   * @param config\n   */\n  constructor(config) {\n    super();\n    Object.assign(\n      this,\n      {\n        width: 0,\n        height: 0,\n        airplane: null,\n        listener: []\n      },\n      config\n    );\n    console.assert(\n      this.width && this.height && this.airplane,\n      \"missing or invalid configuration options\"\n    );\n  }\n\n  demoStart() {\n    console.assert(false, \"Must override in descendant class\");\n  }\n\n  demoStop() {\n    console.assert(false, \"Must override in descendant class\");\n  }\n}\n","export default class Vector2D {\n  constructor(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n  }\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n\n  toString() {\n    return `x:${this.x} y:${this.y}`;\n  }\n\n  sub(other) {\n    return new Vector2D(this.x - other.x, this.y - other.y);\n  }\n\n  add(other) {\n    return new Vector2D(this.x + other.x, this.y + other.y);\n  }\n}\n","import Vector2D from \"../geometry/vector2d\";\n/**\n * An angle in clock format ( 0 degrees is straight up ) to a regular angle\n * @param angle\n * @returns {number}\n */\nexport const C2D = angle => {\n  return (270 + angle) % 360;\n};\n\n/**\n * angle to clock angles ( 0 degrees returned as -90 )\n * @param angle\n * @returns {number}\n */\nexport const D2C = angle => {\n  return (angle - 90) % 360;\n};\n\n/**\n * degrees to radian\n * @param d\n * @returns {number}\n */\nexport const D2R = d => {\n  return d * (Math.PI / 180);\n};\n\n/**\n * radians to degrees\n * @param r\n * @returns {number}\n */\nexport const R2D = r => {\n  return r * (180 / Math.PI);\n};\n\n/**\n * point on the circumference of a circle\n * @param {Vector2D} center\n * @param {number} radius\n * @param {number } angle - degrees\n * @returns {Vector2D}\n */\nexport const POC = (center, radius, angle) => {\n  return new Vector2D(\n    center.x + radius * Math.cos(D2R(angle)),\n    center.y + radius * Math.sin(D2R(angle))\n  );\n};\n\n/**\n * return the angle between the given center point and the given position\n * @param center\n * @param position\n */\nexport const angleFrom = (center, position) => {\n  let a =\n    (Math.atan2(position.y - center.y, position.x - center.x) * 180) / Math.PI;\n  // this keeps the angle always positive, rather than switching to negatives for 180 - 360\n  if (a < 0) {\n    a = 180 + (180 + a);\n  }\n  return a;\n};\n\n/**\n * signed angular delta between two angles. Positive is clockwise.\n * @param start\n * @param end\n */\nexport const angularDelta = (firstAngle, secondAngle) => {\n  let difference = secondAngle - firstAngle;\n  while (difference < -180) difference += 360;\n  while (difference > 180) difference -= 360;\n  return difference;\n};\n","import { D2R, R2D, POC } from \"../geometry/angle\";\nimport D from \"DOMArray\";\nimport Vector2D from \"../geometry/vector2d\";\n\n/**\n * create and return a SnapSVG circle object\n * @param snap\n * @param center\n * @param radius\n * @param stroke\n * @param strokeWidth\n * @param fill\n * @returns {*|SnapShape}\n */\nexport const circle = (\n  snap,\n  center,\n  radius,\n  stroke,\n  strokeWidth,\n  fill = \"none\"\n) => {\n  return snap.circle(center.x, center.y, radius).attr({\n    strokeWidth,\n    stroke,\n    fill\n  });\n};\n\n/**\n * create and return a SnapSVG circle object\n * @param snap\n * @param x\n * @param y\n * @param w\n * @param h\n * @param stroke\n * @param strokeWidth\n * @param fill\n * @param rx\n * @param ry\n * @returns {*|SnapShape}\n */\nexport const rectangle = (\n  snap,\n  x,\n  y,\n  w,\n  h,\n  stroke,\n  strokeWidth,\n  fill = \"none\",\n  rx = 0,\n  ry = 0\n) => {\n  return snap.rect(x, y, w, h).attr({\n    strokeWidth,\n    stroke,\n    fill,\n    rx,\n    ry\n  });\n};\n\n/**\n * create and return a Snap text element centered on a given point\n * @param snap\n * @param {Vector2D} center,\n * @param string\n * @param fill\n * @param fontSize\n * @param fontFamily\n * @param fontWeight\n */\nexport const centeredText = (\n  snap,\n  center,\n  string,\n  fill,\n  fontSize = \"21px\",\n  fontFamily = \"Verdana\",\n  fontWeight = \"normal\"\n) => {\n  return snap.text(center.x, center.y, string.toString()).attr({\n    fill,\n    \"text-anchor\": \"middle\",\n    \"dominant-baseline\": \"central\",\n    \"font-size\": fontSize,\n    \"font-family\": fontFamily,\n    \"font-weight\": fontWeight\n  });\n};\n\n/**\n * create and return a Snap text element centered on a given point\n * @param snap\n * @param {Vector2D} center,\n * @param string\n * @param fill\n * @param fontSize\n * @param fontFamily\n * @param fontWeight\n */\nexport const leftText = (\n  snap,\n  center,\n  string,\n  fill,\n  fontSize = \"21px\",\n  fontFamily = \"Verdana\",\n  fontWeight = \"normal\"\n) => {\n  return snap.text(center.x, center.y, string).attr({\n    fill,\n    \"text-anchor\": \"left\",\n    \"dominant-baseline\": \"central\",\n    \"font-size\": fontSize,\n    \"font-family\": fontFamily,\n    \"font-weight\": fontWeight\n  });\n};\n\n/**\n * a line shape\n * @param snap\n * @param {Vector2D} p1\n * @param {Vector2D} p2\n * @param stroke\n * @param strokeWidth\n */\nexport const line = (snap, p1, p2, stroke, strokeWidth) => {\n  return snap.line(p1.x, p1.y, p2.x, p2.y).attr({\n    strokeWidth,\n    stroke\n  });\n};\n\n/**\n * draw stroke filled triangle defined by 3 points\n * @param snap\n * @param p1\n * @param p2\n * @param p3\n * @param stroke\n * @param strokeWidth\n * @param fill\n */\nexport const triangle = (snap, p1, p2, p3, stroke, strokeWidth, fill) => {\n  const d = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y} L ${p3.x} ${p3.y} Z`;\n  const path = snap.path(d);\n  path.attr({\n    fill,\n    stroke,\n    \"stroke-width\": strokeWidth\n  });\n  return path;\n};\n\n/**\n * draw stroke filled polygon defined by n points ( where 3 <= n )\n * @param snap\n * @param p\n * @param stroke\n * @param strokeWidth\n * @param fill\n */\nexport const polygon = (snap, p, stroke, strokeWidth, fill) => {\n  let d = `M ${p[0].x} ${p[0].y}`;\n  for (let i = 1; i < p.length; i += 1) {\n    d += ` L ${p[i].x} ${p[i].y}`;\n  }\n  d += \" Z\";\n  const path = snap.path(d);\n  path.attr({\n    fill,\n    stroke,\n    \"stroke-width\": strokeWidth\n  });\n  return path;\n};\n\n/**\n * draw a tick mark radiating from a center of a circle at a given starting\n * and ending radius e.g. denoting an airspeed on an airspeed indicator\n * @param snap\n * @param center\n * @param angle - degrees\n * @param outerRadius\n * @param innerRadius\n * @param thickness\n * @param color\n */\nexport const tick = (\n  snap,\n  center,\n  angle,\n  outerRadius,\n  innerRadius,\n  thickness,\n  color\n) => {\n  const p1 = POC(center, outerRadius, angle);\n  const p2 = POC(center, innerRadius, angle);\n  return line(snap, p1, p2, color, thickness);\n};\n\n/**\n *\n * @param snap\n * @param {Vector2D} center\n * @param radius\n * @param thickness\n * @param strokeWidth\n * @param stroke\n * @param fill\n * @param startAngle\n * @param endAngle\n * @param clockWise\n */\nexport const arc = (\n  snap,\n  center,\n  radius,\n  thickness,\n  strokeWidth,\n  stroke,\n  fill,\n  startAngle,\n  endAngle,\n  clockWise\n) => {\n  // return 1 if large arc required for the given start/end angle\n  // and the given direction of turn ( clockwise or counter )\n  const largeArc = (start, end, cw) => {\n    const delta = R2D(\n      Math.atan2(Math.sin(D2R(end - start)), Math.cos(D2R(end - start)))\n    );\n    if (cw) {\n      return delta <= 180 && delta >= 0 ? 0 : 1;\n    }\n    return delta <= 180 && delta >= 0 ? 1 : 0;\n  };\n\n  const arcData = (a1, a2, r, cw) => {\n    let d = \" A \" + r + \" \" + r; // arc command and x/y radius of circle\n    d += \" 0\"; // x axis rotation\n    const large = largeArc(a1, a2, cw);\n    d += \" \" + large; // large arc flag\n    d += cw ? \" 1\" : \" 0\"; // sweep\n    d += \" \" + POC(center, r, a2).x + \" \" + POC(center, r, a2).y; // end point\n    return d;\n  };\n\n  // calculate inner and outer radius\n  const r0 = radius + thickness / 2;\n  const r1 = radius - thickness / 2;\n\n  // move to start of arc on\n  let d =\n    \"M \" + POC(center, r0, startAngle).x + \" \" + POC(center, r0, startAngle).y;\n\n  // add arc data, outer edge from tail to start of arrow\n  d += \" \" + arcData(startAngle, endAngle, r0, clockWise);\n\n  // to inside of arc\n  d += \" L \" + POC(center, r1, endAngle).x + \" \" + POC(center, r1, endAngle).y;\n\n  // arc back to tail, in opposite direction\n  d += \" \" + arcData(endAngle, startAngle, r1, !clockWise);\n\n  // close the path\n  d += \" Z\";\n\n  const path = snap.path(d);\n  path.attr({\n    fill,\n    stroke,\n    \"stroke-width\": strokeWidth\n  });\n  return path;\n};\n\n/**\n * draw a simple cessna shape within a rectangle of given size. Used for example at the center of\n * the heading indicator / directional gyro\n * @param r\n * @param strokeWidth\n * @param stroke\n * @param fill\n */\nexport const airplaneSilhouette = (\n  centerX,\n  centerY,\n  width,\n  height,\n  strokeWidth,\n  stroke,\n  fill\n) => {\n  const s = `\n  <svg \n      xmlns=\"http://www.w3.org/2000/svg\" \n      version=\"1.1\"  \n      x=\"${centerX - width / 2}\"\n      y=\"${centerY - height / 2}\"\n      width=\"${width}\" height=\"${height}\" \n      viewBox=\"0 0 432.243 432.243\"\n  >\n      <path \n          d=\"M396.132,225.557l-29.051-16.144v-13.14c0-8.836-7.164-16-16-16c-7.342,0-13.515,4.952-15.396,11.693l-24.446-13.585    v-12.108c0-8.836-7.164-16-16-16c-7.021,0-12.968,4.526-15.125,10.813l-21.689-12.053c-1.607-31.051-4.521-59.535-8.582-83.175    c-3.221-18.753-7.029-33.617-11.318-44.179C236.346,16.317,229.72,0,216.123,0c-13.598,0-20.224,16.317-22.402,21.679    c-4.289,10.562-8.097,25.426-11.318,44.179c-4.06,23.64-6.975,52.124-8.582,83.175l-21.69,12.053    c-2.157-6.287-8.106-10.813-15.124-10.813c-8.837,0-16,7.164-16,16v12.108l-24.448,13.585    c-1.882-6.742-8.055-11.693-15.396-11.693c-8.837,0-16,7.164-16,16v13.14L36.11,225.557c-3.174,1.766-5.143,5.11-5.143,8.741    v41.718c0,3.237,1.568,6.275,4.208,8.151s6.024,2.356,9.083,1.291l128.616-44.829c1.189,40.082,4.47,77.047,9.528,106.496    c0.917,5.342,1.884,10.357,2.895,15.059l-66.969,37.215c-1.725,0.958-2.794,2.774-2.794,4.749v22.661    c0,1.761,0.852,3.41,2.286,4.431c1.434,1.018,3.272,1.278,4.935,0.701l78.279-27.284c3.598,4.531,8.53,8.329,15.088,8.329    c6.558,0,11.49-3.798,15.087-8.329l78.279,27.284c0.584,0.201,1.188,0.303,1.788,0.303c1.113,0,2.216-0.342,3.146-1.004    c1.434-1.021,2.285-2.669,2.285-4.431v-22.662c0-1.974-1.068-3.791-2.793-4.748l-66.969-37.215c1.01-4.7,1.977-9.715,2.895-15.059    c5.059-29.447,8.339-66.414,9.527-106.496l128.617,44.829c1.071,0.374,2.184,0.558,3.29,0.558c2.05,0,4.078-0.631,5.791-1.849    c2.642-1.875,4.209-4.914,4.209-8.151v-41.718C401.275,230.667,399.308,227.321,396.132,225.557z\" \n          fill=\"${fill}\" stroke-width=\"${strokeWidth}\" stroke=\"${stroke}\"\n      />\n  </svg>`;\n  return new Snap(D(s).el);\n};\n\n/**\n * simple nose on view e.g. at the center of a heading indicator\n * @param centerX\n * @param centerY\n * @param width\n * @param fill\n */\nexport const airplaneNoseView = (snap, center, width, fill) => {\n  // prop radius and empennage size are derived from width\n  const PR = width / 11;\n  const EMT = width / 35;\n  const EMS = width / 3;\n  const WH = width / 25;\n\n  // prop\n  circle(snap, center, PR, 0, \"transparent\", fill);\n\n  // wing\n  const wing = rectangle(\n    snap,\n    center.x - width / 2,\n    center.y - WH / 2,\n    width,\n    WH,\n    \"transparent\",\n    0,\n    fill,\n    3,\n    3\n  );\n\n  // vertical stabilizer\n  const vs = rectangle(\n    snap,\n    center.x - EMT / 2,\n    center.y - EMS + PR * 1.5,\n    EMT,\n    EMS / 2,\n    \"transparent\",\n    0,\n    fill,\n    3,\n    3\n  );\n\n  // horizontal stabilizer\n  const hs = rectangle(\n    snap,\n    center.x - EMS / 2,\n    center.y - PR,\n    EMS,\n    EMT,\n    \"transparent\",\n    0,\n    fill,\n    3,\n    3\n  );\n\n  return snap.g(wing, vs, hs);\n};\n","/**\n * make a stepped needle. Base is the given width but it steps down to half\n * that width at the tip. See the analog airspeed indicator for an example\n * of positioning.\n */\nexport const steppedNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  radiusMid, // radius where width changes\n  arrowHead, // length of arrow heads\n  width // widest width of needle\n) => {\n  let d = `M 0 0`;\n  d += ` L ${radiusShort} 0`;\n  d += `L ${radiusMid - arrowHead} 0`;\n  d += `L ${radiusMid} ${width * 0.4}`;\n  d += `L ${radius + radiusShort - arrowHead} ${width * 0.3}`;\n\n  d += `L ${radius + radiusShort + arrowHead} ${width / 2}`;\n\n  d += `L ${radius + radiusShort - arrowHead} ${width * 0.7}`;\n  d += `L ${radiusMid} ${width * 0.7}`;\n  d += `L ${radiusMid - arrowHead} ${width}`;\n  d += ` L ${radiusShort} ${width}`;\n\n  d += ` L 0 ${width} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:30-#fff:31-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:30-#222:31-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          width / 2} r ${angle} ${radiusShort} ${width / 2}`\n      });\n    }\n  };\n};\n/**\n * Like the stepped needle but with a triangle at the tip, used only for the\n * 10K needle on an altimeter\n */\nexport const altimeter10KNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  radiusMid, // radius where width changes\n  arrowHead, // length of arrow heads\n  triangleWidth // widest width of needle ( the triangle at the tip )\n) => {\n  // width of needle at the short end\n  const baseWidth = triangleWidth * 0.25;\n  const narrowWidth = baseWidth / 2;\n  const CY = triangleWidth / 2;\n\n  let d = `M 0 ${CY - baseWidth / 2}`;\n\n  d += `L ${radiusMid - arrowHead} ${CY - baseWidth / 2}`;\n\n  d += `L ${radiusMid} ${CY - narrowWidth / 2}`;\n\n  d += `L ${radius + radiusShort - arrowHead * 1.5} ${CY - narrowWidth / 2}`;\n\n  d += `L ${radius + radiusShort + arrowHead} 0`;\n  d += `L ${radius + radiusShort + arrowHead} ${triangleWidth}`;\n\n  d += `L ${radius + radiusShort - arrowHead * 1.5} ${CY + narrowWidth / 2}`;\n\n  d += `L ${radiusMid} ${CY + narrowWidth / 2}`;\n\n  d += `L ${radiusMid - arrowHead} ${CY + baseWidth / 2}`;\n\n  d += `L 0 ${CY + baseWidth / 2} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:30-#fff:31-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:30-#222:31-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          triangleWidth / 2} r ${angle} ${radiusShort} ${triangleWidth / 2}`\n      });\n    }\n  };\n};\n\n/**\n * Simple arrow head needle, see the hundreds needle on the altimeter for an example\n */\nexport const arrowNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  arrowHead, // length of arrow heads\n  width // widest width of needle\n) => {\n  let d = `M 0 0`;\n  d += ` L ${radiusShort} 0`;\n  d += `L ${radius + radiusShort - arrowHead} 0`;\n\n  d += `L ${radius + radiusShort + arrowHead} ${width / 2}`;\n  d += `L ${radius + radiusShort - arrowHead} ${width}`;\n\n  d += ` L ${radiusShort} ${width}`;\n\n  d += ` L 0 ${width} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:30-#fff:31-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:30-#222:31-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          width / 2} r ${angle} ${radiusShort} ${width / 2}`\n      });\n    }\n  };\n};\n\n/**\n * Dagger shaped needle e.g. the thousands needle of the altimeter\n */\nexport const daggerNeedle = (\n  snap, // snap/svg to use\n  radius, // radius from pivot to tip\n  radiusShort, // radius from pivot to short/blunt end of needle\n  arrowHead, // length of arrow heads\n  width // widest width of needle\n) => {\n  // parameter width of dagger at narrowest point\n  const narrow = 0.35;\n\n  let d = `M 0 0`;\n  d += ` L ${radiusShort} ${width * narrow}`;\n\n  d += `L ${radius + radiusShort - arrowHead} 0`;\n\n  d += `L ${radius + radiusShort + arrowHead} ${width / 2}`;\n  d += `L ${radius + radiusShort - arrowHead} ${width}`;\n\n  d += ` L ${radiusShort} ${width - width * narrow}`;\n\n  d += ` L 0 ${width} Z`;\n\n  const needle = snap.path(d);\n  needle.attr({\n    fill: snap.gradient(`l(0, 0.5, 1, 0.5)#222:40-#fff:41-#fff`),\n    stroke: snap.gradient(`l(0, 0.5, 1, 0.5)#444:40-#222:41-#222`),\n    \"stroke-width\": 1\n  });\n  // return the needle shape and a closure for positioning and rotating it\n  return {\n    needle,\n    setCenterAndAngle: (cx, cy, angle) => {\n      needle.attr({\n        transform: `t ${cx - radiusShort} ${cy -\n          width / 2} r ${angle} ${radiusShort} ${width / 2}`\n      });\n    }\n  };\n};\n","/**\n * start an interval callback at the given rate. Unlike the native window.setInterval\n * this will call on the leading edge of the interval. Returns a function that be used\n * to cancel the interval\n * @param milliseconds\n */\nexport const interval = (callback, milliseconds) => {\n  // setup system interval\n  let timer = setInterval(callback, milliseconds);\n\n  // make the initial callback soon but not before returning from this call.\n  requestAnimationFrame(() => {\n    // make sure we were not cancelled\n    if (timer) {\n      callback();\n    }\n  });\n\n  // return cancel function\n  return () => {\n    clearInterval(timer);\n    timer = 0;\n  };\n};\n","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","import D from \"DOMArray\";\nimport Instrument from \"./instrument\";\nimport { nonLinearScale } from \"./utils/math\";\nimport { POC, C2D } from \"./geometry/angle\";\nimport Vector2D from \"./geometry/vector2d\";\nimport { circle, centeredText, tick, arc } from \"./graphics/primitives\";\nimport { steppedNeedle } from \"./needles\";\nimport { interval } from \"./utils/time\";\nimport Snap from \"snapsvg-cjs\";\n\n/**\n * Regardless of our DOM element size we will render using the constants below\n * and use a transform to scale the resulting SVG to the required size, without altering the aspect ratio\n */\n\n// inset of edges of element\nconst I = 0;\n// width and height\nconst W = 400;\nconst H = 400;\n// outer radius\nconst R = (Math.min(W, H) - I) / 2;\n// center\nconst CX = W / 2;\nconst CY = H / 2;\nconst CENTER = new Vector2D(CX, CY);\n\n// thickness of outer three rings of case\nconst CASE1 = 8;\nconst CASE2 = 10;\nconst CASE3 = 14;\n\n// outer radius of all tick marks\nconst TICK1 = R - (CASE1 + CASE2 + CASE3);\n// inner radius of small ticks\nconst TICK2 = TICK1 - 40;\n// inner radius of large ticks\nconst TICK3 = TICK1 - 50;\n// radius of center of airspeed labels\nconst LABEL_RADIUS = TICK3 - 26;\n\n// width of range arcs\nconst ARC_WIDTH = 22;\n\n// width of range arcs\nconst FLAP_ARC_WIDTH = 18;\n\n// radius of white arc\nconst WHITE_ARC_RADIUS = TICK3 + ARC_WIDTH * 2 - ARC_WIDTH / 2 - 1;\n// green / yellow arcs\nconst ARC_RADIUS = TICK3 + ARC_WIDTH / 2;\n\n// max airspeed angle on face\nconst MAX_SPEED_ANGLE = 320;\n// airspeed at 6 o'clock\nconst MID_SPEED = 115;\n\nconst POINTER_SMALL_RADIUS = 40;\nconst POINTER_WIDTH = 14;\nconst POINTER_ARROW = 6;\nconst POINTER_RADIUS = WHITE_ARC_RADIUS + FLAP_ARC_WIDTH / 2 - POINTER_ARROW;\nconst POINTER_MID = POINTER_RADIUS * 0.65;\n\nexport default class AirspeedAnalog extends Instrument {\n  constructor(options) {\n    super(\n      Object.assign(\n        {\n          width: W,\n          height: H\n        },\n        options\n      )\n    );\n\n    console.assert(\n      this.parentElement,\n      \"instrument requires a parent to attach to\"\n    );\n\n    this.template = D(`\n      <svg r=\"svg\" height=\"${W}\" width=\"${H}\" xmlns=\"http://www.w3.org/2000/svg\"></svg>\n    `);\n    this.template.zip(this);\n    this.snap = new Snap(this.svg.el);\n\n    // figure out the airspeed closest to 12 o'clock. This is our minimum displayable speed\n    this.minimumDisplayableSpeed = 0;\n    let nearest = Number.MAX_VALUE;\n    for (let i = this.airplane.VS0; i >= 0; i -= 0.2) {\n      const angle = this.airspeedToAngle(i);\n      if (Math.abs(angle - 270) < nearest) {\n        this.minimumDisplayableSpeed = i;\n        nearest = Math.abs(angle - 270);\n      }\n    }\n\n    // initial render of instrument\n    this.renderImmutable();\n    this.createNeedle();\n\n    // set needle to default display position\n    this.setNeedle(this.airplane.airspeed);\n\n    // listen for changes to the airplane\n    this.onAirplaneChanged = this.onAirplaneChanged.bind(this);\n    this.airplane.addListener(this.onAirplaneChanged);\n    this.addDisposable(() =>\n      this.airplane.removeListener(this.onAirplaneChanged)\n    );\n\n    this.template.appendTo(this.parentElement);\n    this.addDisposable(() => this.template.remove());\n  }\n\n  /**\n   * enter demonstration mode\n   */\n  demoStart() {\n    let airspeed = 40; // Start with an initial airspeed of 40 knots\n  \n    const demoInterval = setInterval(() => {\n      this.airplane.setAirspeed(airspeed);\n  \n      // Increment the airspeed by 10\n      airspeed += 10;\n  \n      // If the airspeed reaches 200, reset it to 40\n      if (airspeed > 200) {\n        airspeed = 40;\n      }\n    }, 1000); // Change airspeed every 1000 milliseconds (1 second)\n  \n    // Store the interval ID so it can be canceled later\n    this.addLerp(\"demo\", () => clearInterval(demoInterval));\n  }\n  \n\n  /**\n   * cancel demo mode\n   */\n  demoStop() {\n    this.cancelLerp(\"demo\");\n  }\n\n  /**\n   * render the non changing parts of the instrument\n   */\n  renderImmutable() {\n    this.renderCase();\n    this.renderSpeedArcs();\n    this.renderText();\n    this.renderTicks();\n    this.renderAirspeeds();\n    this.renderShadow();\n  }\n\n  /**\n   * render the shared three outer rings of the bezel\n   */\n  renderCase() {\n    // draw three outer rings of the instrument case\n    circle(\n      this.snap,\n      CENTER,\n      R - CASE1 / 2,\n      this.snap.gradient(`l(0, 0, 1, 1)#FFF:0-#888:20-#111:100`),\n      CASE1,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#111-#666`),\n      CASE2,\n      \"black\"\n    );\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3 / 2),\n      this.snap.gradient(`l(0, 0, 1, 1)#000:0-#888:70-#FFF:100`),\n      CASE3,\n      this.snap.gradient(\"l(0, 0, 1, 1)#000:0-#222:100\")\n    );\n  }\n\n  /**\n   * render the three speed arcs ( white, green, yellow )\n   */\n  renderSpeedArcs() {\n    // draw the flap (white) normal ( green ) and caution ( yellow ) speed arcs\n    arc(\n      this.snap,\n      CENTER,\n      WHITE_ARC_RADIUS,\n      ARC_WIDTH,\n      0,\n      \"white\",\n      \"white\",\n      this.airspeedToAngle(this.airplane.VS0),\n      this.airspeedToAngle(this.airplane.VFE),\n      true\n    );\n\n    arc(\n      this.snap,\n      CENTER,\n      ARC_RADIUS,\n      ARC_WIDTH,\n      0,\n      \"transparent\",\n      \"#00EE00\",\n      this.airspeedToAngle(this.airplane.VS1),\n      this.airspeedToAngle(this.airplane.VNO),\n      true\n    );\n\n    arc(\n      this.snap,\n      CENTER,\n      ARC_RADIUS,\n      ARC_WIDTH,\n      0,\n      \"transparent\",\n      \"#FFDC00\",\n      this.airspeedToAngle(this.airplane.VNO),\n      this.airspeedToAngle(this.airplane.VNE),\n      true\n    );\n  }\n\n  /**\n   * render static text, KNOTS and AIR SPEED\n   */\n  renderText() {\n    // draw airspeeds and knots labels\n    centeredText(\n      this.snap,\n      new Vector2D(CX, CY + 50),\n      \"KNOTS\",\n      \"white\",\n      \"16px\"\n    );\n    centeredText(this.snap, new Vector2D(CX, 70), \"AIR\", \"white\", \"16px\");\n    centeredText(this.snap, new Vector2D(CX, 90), \"SPEED\", \"white\", \"16px\");\n  }\n\n  /**\n   * render the knots ( KIAS ) tick marks around the outside of the face.\n   */\n  renderTicks() {\n    // draw VS0 to MAX_SPEED in 10 knot intervals\n    for (\n      let i = this.airplane.VS0;\n      i <= this.airplane.MAX_DISPLAYED_SPEED;\n      i += 10\n    ) {\n      tick(\n        this.snap,\n        CENTER,\n        this.airspeedToAngle(i),\n        TICK1,\n        TICK3,\n        4,\n        \"white\"\n      );\n    }\n\n    // small ticks at 5 knot intervals\n    for (\n      let i = this.airplane.VS0 + 5;\n      i <= this.airplane.MAX_DISPLAYED_SPEED - 5;\n      i += 10\n    ) {\n      tick(\n        this.snap,\n        CENTER,\n        this.airspeedToAngle(i),\n        TICK1,\n        TICK2,\n        2,\n        \"white\"\n      );\n    }\n\n    // draw VNE tick mark\n    tick(\n      this.snap,\n      CENTER,\n      this.airspeedToAngle(this.airplane.VNE),\n      TICK1,\n      TICK3,\n      7,\n      \"red\"\n    );\n  }\n\n  /**\n   * rendered the numbers airspeeds\n   */\n  renderAirspeeds() {\n    // draw airspeed labels 40, 60, ... 200 in intervals of 20\n    for (\n      let i = this.airplane.VS0;\n      i <= this.airplane.MAX_DISPLAYED_SPEED;\n      i += 20\n    ) {\n      const position = POC(CENTER, LABEL_RADIUS, this.airspeedToAngle(i));\n      centeredText(this.snap, position, i, \"white\", \"24px\", \"Verdana\", \"bold\");\n    }\n  }\n\n  /**\n   * render an almost transparent gradient over the face to give the appearance of\n   * shadow and depth\n   */\n  renderShadow() {\n    // draw a radial gradient over the face to give a small hint of shadow from the case\n    circle(\n      this.snap,\n      CENTER,\n      R - (CASE1 + CASE2 + CASE3),\n      \"transparent\",\n      0,\n      this.snap.gradient(`r(0.5, 0.5, 0.5)transparent:85-rgba(0,0,0,0.6)`)\n    );\n  }\n\n  /**\n   * create the needle shape\n   */\n  createNeedle() {\n    this.needle = steppedNeedle(\n      this.snap,\n      POINTER_RADIUS,\n      POINTER_SMALL_RADIUS,\n      POINTER_MID,\n      POINTER_ARROW,\n      POINTER_WIDTH\n    );\n    circle(this.snap, CENTER, 4, \"#888\", 1, \"black\");\n  }\n\n  /**\n   * immediately set the needle to the given airspeed\n   * @param airspeed\n   */\n  setNeedle(airspeed) {\n    const angle = this.airspeedToAngle(\n      Math.max(this.minimumDisplayableSpeed, airspeed)\n    );\n    this.needle.setCenterAndAngle(CX, CY, angle);\n  }\n\n  /**\n   * convert the given airspeed ( KIAS ) into an angle in degrees.\n   * @param airspeed\n   * @returns {number}\n   */\n  airspeedToAngle(airspeed) {\n    console.assert(\n      airspeed >= 0 && airspeed <= this.airplane.MAX_DISPLAYED_SPEED,\n      \"airspeed out of range\"\n    );\n    // convert airspeed to 0..1\n    const normalized = airspeed / this.airplane.MAX_DISPLAYED_SPEED;\n    // get non linear value 0..MAX_SPEED\n    const nonLinear = nonLinearScale(\n      normalized,\n      MID_SPEED,\n      this.airplane.MAX_DISPLAYED_SPEED\n    );\n    // zero airspeed is actually starts at MAX_SPEED and goes clockwise\n    const circle = 360 * (nonLinear / this.airplane.MAX_DISPLAYED_SPEED);\n    return C2D((MAX_SPEED_ANGLE + circle) % 360);\n  }\n\n  /**\n   * a property of the airplane was changed\n   * @param airplane\n   */\n  onAirplaneChanged(airplane) {\n    console.assert(airplane === this.airplane, \"not our airplane\");\n    this.setNeedle(this.airplane.airspeed);\n  }\n}\n","// Import dependencies and classes\nimport Airplane from \"./airplane\";\nimport AirspeedAnalog from \"./airspeed_analog\";\nimport { lerp } from \"./utils/math\";\n\n// Initialize the airplane object\nconst airplane = new Airplane();\n\n// Create an instance of the AirspeedAnalog class\nconst airspeedIndicator = new AirspeedAnalog({ parentElement: document.body });\n\n// Add an event listener to the airspeed slider\nconst airspeedSlider = document.getElementById(\"airspeedSlider\");\nairspeedSlider.addEventListener(\"input\", () => {\n  const newAirspeed = parseFloat(airspeedSlider.value);\n  airplane.setAirspeed(newAirspeed);\n  airspeedIndicator.setNeedle(newAirspeed);\n});\n"]}